{"version":3,"sources":["webpack:///./src/modules/admin/admin.actions.js","webpack:///./src/modules/invites/inviteModal.component.js","webpack:///./src/modules/invites/web/inviteModal.container.js","webpack:///./src/modules/web_ethTools/eth.context.js","webpack:///./src/modules/stats/coinStat.component.js","webpack:///./src/modules/wallet/price.context.js","webpack:///./src/utils/propValidation.js"],"names":["Alert","alert","API","process","inviteSchema","schema","Entity","idAttribute","listSchema","setInvites","data","community","skip","type","types","payload","setWaitlist","deleteWaitlistUsers","users","updateInvite","invite","destroyInvite","setInviteCount","count","getInviteCount","dispatch","api","request","method","endpoint","path","err","message","getInvites","limit","responseJSON","query","normalize","invites","error","createInvite","res","body","JSON","stringify","destroy","fetch","_id","reqOptions","then","handleErrors","catch","console","log","getWaitlist","response","json","wait","inviteFromWaitlist","signupForMailingList","user","setDownvotes","getDownvotes","sendEmail","email","saveEmail","loadEmail","deleteWaitlistUser","sendPostNotification","post","ModalDivider","styled","Divider","sizing","InviteModal","Component","constructor","props","context","super","this","position","setValue","color","interpolate","inputRange","outputRange","animation","Animated","timing","toValue","duration","start","invitedBy","auth","postInviteGeneration","newInvite","actions","origin","window","location","code","Value","colors","black","componentDidMount","inviteList","communityInvites","length","render","onShare","userMemberships","communities","currentId","Object","keys","find","key","slug","active","currentCommunity","membership","m","communityId","showAdminInvite","role","superAdmin","publicInviteUrl","handle","publicLink","invitesEl","map","url","generateInviteUrl","isNew","Date","getTime","parse","createdAt","redeemed","grey","blue","animate","mt","fdirection","justify","flex","mr","numberOfLines","Text","onClick","copyToClipBoard","onPress","title","subject","style","cursor","ml","alignSelf","c","green","pt","display","inline","size","amount","PUBLIC_LINK_REWARD","REFERRAL_REWARD","to","generateInvite","referralTokens","MAX_AIRDROP","propTypes","PropTypes","object","func","InviteModalContainer","handleShare","close","connect","state","get","admin","initialValues","invitedByString","bindActionCreators","React","createContext","wallet","coinImage","require","CoinStat","tokens","isOwner","align","noNumber","secondary","fs","lh","spaceBetween","showPrice","rest","balance","tokenBalance","usdValue","usePrice","ethAddress","connectedBalance","iconSize","NumberStyle","SecondaryText","NumericalValue","imageMargin","Wrapper","ImageWrapper","spacer","source","h","w","bottom","resizeMode","abbreviateNumber","number","oneOfType","bool","userProps","string","lineheight","memo","Consumer","TOKEN_ADDRESS","DISABLE_PRICE","PriceContext","exchangeLink","tokenEnabled","price","useContext","PriceProvider","children","useReducer","priceReducer","loading","refresh","useEffect","didCancel","tokenPrice","getTokenReserves","ethPrice","bid","fetchData","setTimeout","ethReserve","tokenReserve","usdPrice","div","times","parseFloat","toString","computePrice","priceString","Provider","value","node","action","Error","shape","image","name","authProps","isRequired","embeddedUser","tags","array","postDate","instanceOf","link","parentPost","isAuthenticated","elementTypePropTypeChecker","propName","componentName","isValidElementType"],"mappings":"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","file":"42.bundle.js","sourcesContent":["/* eslint-disable no-console */\nimport { normalize, schema } from 'normalizr';\nimport * as types from 'core/actionTypes';\nimport { alert, api } from 'app/utils';\n\nconst Alert = alert.Alert();\nconst API = process.env.API_SERVER + '/api';\n\nconst inviteSchema = new schema.Entity(\n  'invites',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nconst listSchema = new schema.Entity(\n  'wait',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nexport function setInvites({ data, community, skip }) {\n  return {\n    type: types.SET_INVITES,\n    payload: {\n      data,\n      community,\n      skip\n    }\n  };\n}\n\nexport function setWaitlist(data) {\n  return {\n    type: types.SET_WAITLIST,\n    payload: data\n  };\n}\n\nexport function deleteWaitlistUsers(users) {\n  return {\n    type: types.DELETE_WAITLIST_USER,\n    payload: users\n  };\n}\n\nexport function updateInvite(invite) {\n  return {\n    type: types.UPDATE_INVITE,\n    payload: invite\n  };\n}\n\nexport function destroyInvite(invite) {\n  return {\n    type: types.DESTROY_INVITE,\n    payload: invite\n  };\n}\n\nexport function setInviteCount(count) {\n  return {\n    type: types.SET_INVITE_COUNT,\n    payload: count\n  };\n}\n\nexport function getInviteCount() {\n  return async dispatch => {\n    try {\n      const count = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invites',\n          path: '/count'\n        })\n      );\n\n      dispatch(setInviteCount(count));\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function getInvites(skip, limit, community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          query: { skip, limit },\n          endpoint: 'invites',\n          path: ''\n        })\n      );\n      const data = normalize(\n        {\n          invites: responseJSON\n        },\n        {\n          invites: [inviteSchema]\n        }\n      );\n      dispatch(setInvites({ data, community, skip }));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function createInvite(invite) {\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invites',\n          path: '/',\n          body: JSON.stringify(invite)\n        })\n      );\n      dispatch(updateInvite(res.invite[0]));\n      dispatch(setInviteCount(res.count));\n      return res;\n    } catch (error) {\n      Alert.alert(error.message);\n      return false;\n    }\n  };\n}\n\n// export function sendInvitationEmail(id) {\n//   return async dispatch =>\n//     fetch(API + '/invites/email', {\n//       method: 'POST',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         inviteId: id\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       Alert.alert('Invitation email has been sent');\n//     })\n//     .catch(error => {\n//       console.log('invites error', error);\n//     });\n// }\n\n// export function checkInviteCode(code) {\n//   return async dispatch =>\n//     fetch(API + '/invites', {\n//       method: 'PUT',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         code\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       if (responseJSON) return responseJSON;\n//       return false;\n//     })\n//     .catch(error => {\n//       Alert.alert(error.message);\n//       console.log('invites error', error);\n//     });\n// }\n\nexport function destroy(invite) {\n  return async dispatch =>\n    fetch(API + '/invites/' + invite._id, {\n      method: 'DELETE',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert('removed item');\n        dispatch(destroyInvite(invite));\n      })\n      .catch(error => {\n        Alert.alert(error.message);\n        console.log('invites error', error);\n      });\n}\n\nexport function getWaitlist() {\n  return async dispatch =>\n    fetch(API + '/list', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        const data = normalize(\n          {\n            wait: responseJSON\n          },\n          {\n            wait: [listSchema]\n          }\n        );\n        dispatch(setWaitlist(data));\n      })\n      .catch(error => {\n        console.log('invites error', error);\n      });\n}\n\nexport function inviteFromWaitlist(invites) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'PUT',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(invites)\n    })\n      .then(api.handleErrors)\n      // .then(response => response.json())\n      .then(() => {\n        Alert.alert('users have been invited!');\n        dispatch(deleteWaitlistUsers(invites));\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function signupForMailingList(user) {\n  return async () =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'POST',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(user)\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert(\"You've been added to the waitlist.\", 'success');\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function setDownvotes(data) {\n  return {\n    type: types.SET_DOWNVOTES,\n    payload: data\n  };\n}\n\nexport function getDownvotes(skip, limit) {\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: {\n          skip,\n          limit\n        },\n        endpoint: 'invest',\n        path: '/downvotes'\n      })\n    )\n      .then(res => dispatch(setDownvotes(res)))\n      .catch(err => Alert.alert(err.message));\n}\n\nexport function sendEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been sent');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function saveEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/save',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been saved');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function loadEmail() {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'email',\n          path: '/load'\n        })\n      );\n      return responseJSON;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function deleteWaitlistUser(user) {\n  return async dispatch => {\n    try {\n      const result = await fetch(API + '/list/' + user._id, {\n        method: 'DELETE',\n        ...(await api.reqOptions())\n      });\n      // console.log(result)\n      if (result) {\n        dispatch(deleteWaitlistUsers([user]));\n      }\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function sendPostNotification(post) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'post',\n          path: '/sendPostNotification',\n          body: JSON.stringify(post)\n        })\n      );\n      return Alert.alert('Notification sent!');\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\n// export function updateWaitlist(user) {\n//   return async dispatch =>\n//   fetch(API + '/list/' + user._id, {\n//     method: 'PUT',\n//     ...await api.reqOptions(),\n//     body: JSON.stringify({ user })\n//   })\n//   .then(api.handleErrors)\n//   .then((response) => response.json())\n//   .then((responseJSON) => {\n//     dispatch(updateWaitlist(responseJSON));\n//     if (responseJSON) return responseJSON;\n//     return false;\n//   })\n//   .catch((error) => {\n//     Alert.alert(error.message);\n//     console.log('invites error', error);\n//   });\n// }\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CoinStat from 'modules/stats/coinStat.component';\nimport {\n  View,\n  SecondaryText,\n  LinkFont,\n  Divider,\n  BodyText,\n  Header,\n  CTALink,\n  Box\n} from 'modules/styled/uni';\nimport { colors, sizing } from 'app/styles';\nimport styled from 'styled-components/primitives';\nimport ULink from 'modules/navigation/ULink.component';\nimport {\n  REFERRAL_REWARD,\n  PUBLIC_LINK_REWARD,\n  MAX_AIRDROP\n} from '@r3l/common';\nimport { copyToClipBoard } from 'utils/text';\nimport { Animated } from 'react-native';\n\nconst ModalDivider = styled(Divider)`\n  position: relative;\n  margin: 0 -${sizing(6)};\n`;\n\nclass InviteModal extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.position = new Animated.Value(0);\n    this.color = colors.black;\n  }\n\n  componentDidMount() {\n    const { auth, inviteList, actions } = this.props;\n    const communityInvites = inviteList[auth.community] || [];\n\n    if (!inviteList.length) {\n      const skip = communityInvites.length;\n      actions.getInvites(skip, 100, auth.community);\n    }\n  }\n\n  animate = () => {\n    this.position.setValue(0);\n    this.color = this.position.interpolate({\n      inputRange: [0, 1],\n      // Green to blue, variables don't work for some reason\n      outputRange: ['#7ED321', '#0000ff']\n    });\n    this.animation = Animated.timing(this.position, {\n      toValue: 1,\n      duration: 8000\n    }).start();\n  };\n\n  generateInvite = async type => {\n    const invite = {\n      invitedBy: this.props.auth.user._id\n    };\n    if (type) {\n      invite.type = type;\n    }\n    const { postInviteGeneration } = this.props;\n    const newInvite = await this.props.actions.createInvite(invite);\n    if (postInviteGeneration) {\n      postInviteGeneration(newInvite);\n    }\n  };\n\n  generateInviteUrl = ({ invite }) => {\n    const origin =\n      window && window.location ? window.location.origin : 'https://relevant.community';\n    return `${origin}/${invite.community}?invitecode=${invite.code}`;\n  };\n\n  render() {\n    const { auth, community, count, inviteList, invites, onShare } = this.props;\n    const { user } = auth;\n    const { userMemberships = [], communities } = community;\n\n    const currentId = Object.keys(communities).find(\n      key => communities[key].slug === community.active\n    );\n    const currentCommunity = communities[currentId] || {};\n\n    const membership = userMemberships.find(m => m.communityId === currentCommunity._id);\n    const showAdminInvite =\n      user.role === 'admin' || (membership && membership.superAdmin);\n\n    const publicInviteUrl = `/${auth.community}?invitecode=${auth.user.handle}`;\n    const origin =\n      window && window.location ? window.location.origin : 'https://relevant.community';\n\n    const publicLink = `${origin}${publicInviteUrl}`;\n    const communityInvites = inviteList[auth.community] || [];\n\n    const invitesEl = communityInvites.map(_id => {\n      const invite = invites[_id];\n      const url = this.generateInviteUrl({ invite });\n      // `${origin}/${invite.community}?invitecode=${invite.code}`;\n      const now = new Date().getTime();\n      const createdAt = Date.parse(invite.createdAt);\n      const isNew = now - createdAt < 5000;\n      let color = invite.redeemed ? colors.grey : colors.blue;\n      if (isNew) {\n        this.animate();\n        color = this.color || colors.black;\n      }\n      return (\n        <View mt={2} fdirection=\"column\" key={_id}>\n          <View fdirection=\"row\" justify=\"space-between\">\n            <View fdirection=\"row\" flex={1} mr={1}>\n              <View flex={1}>\n                <CTALink numberOfLines={1}>\n                  <Animated.Text\n                    onClick={() => copyToClipBoard(url)}\n                    onPress={() =>\n                      onShare({\n                        title: 'Join Relevant',\n                        message: 'Join Relevant',\n                        url,\n                        subject: 'Join Relevant'\n                      })\n                    }\n                    style={{\n                      color,\n                      cursor: 'pointer'\n                    }}\n                  >\n                    {url}\n                  </Animated.Text>\n                </CTALink>\n              </View>\n              <View ml={0.5} alignSelf=\"flex-end\">\n                <CTALink c={colors.grey}>\n                  {invite.type === 'admin' ? 'mod' : null}\n                </CTALink>\n              </View>\n            </View>\n            <CTALink c={invite.redeemed ? colors.grey : colors.green}>\n              {invite.redeemed ? 'redeemed' : 'available'}\n            </CTALink>\n          </View>\n          <Divider pt={2} />\n        </View>\n      );\n    });\n\n    const url = publicLink;\n\n    return (\n      <View display=\"flex\" fdirection=\"column\">\n        <View mt={6} display=\"flex\" fdirection=\"column\">\n          <SecondaryText>Public Invite Link</SecondaryText>\n          <BodyText inline={1} mt={1}>\n            You and each new users get{' '}\n            <CoinStat size={2} amount={PUBLIC_LINK_REWARD} inline={1} /> coin\n            {PUBLIC_LINK_REWARD === 1 ? '' : 's'} per signup via your public invite code.\n          </BodyText>\n          <LinkFont\n            mt={1}\n            onClick={() => copyToClipBoard(url)}\n            c={colors.blue}\n            onPress={() =>\n              onShare({\n                title: 'Join Relevant',\n                message: 'Join Relevant',\n                url: publicLink,\n                subject: 'Join Relevant'\n              })\n            }\n          >\n            {publicLink}\n          </LinkFont>\n        </View>\n        <Divider pt={6} />\n        <View display=\"flex\" fdirection=\"column\" mt={6}>\n          <SecondaryText>\n            Private Invite: Your have {count[community.active]} referral invite\n            {count[community.active] > 1 ? 's' : ''} left.\n          </SecondaryText>\n          <Box mt={1} />\n          <BodyText inline={1}>\n            Share your Reputation with trustworthy friends with your private invite codes.\n            Earn <CoinStat size={2} amount={REFERRAL_REWARD} inline={1} /> coin\n            {REFERRAL_REWARD === 1 ? '' : 's'} per signup.\n          </BodyText>\n        </View>\n        <ULink\n          to={'#'}\n          onPress={() => this.generateInvite()}\n          onClick={() => this.generateInvite()}\n          c={colors.blue}\n        >\n          <Box mt={1}></Box>\n          <LinkFont c={colors.blue}>Click here to generate a new private link</LinkFont>\n        </ULink>\n        {showAdminInvite ? (\n          <ULink\n            to={'#'}\n            onPress={() => this.generateInvite('admin')}\n            onClick={() => this.generateInvite('admin')}\n            c={colors.blue}\n          >\n            <Box mt={1} />\n            <LinkFont mt={1} c={colors.blue}>\n              Click here to generate moderator invite link\n            </LinkFont>\n          </ULink>\n        ) : null}\n        <ModalDivider pt={6} />\n        <View mt={6} fdirection={'column'}>\n          <Header>Private Invites</Header>\n          <BodyText inline={1} fdirection=\"row\">\n            Here’s how many coins you’ve made from invites so far:{' '}\n            <CoinStat size={2} amount={user.referralTokens} inline={1} /> coin\n            {user.referralTokens === 1 ? '' : 's'} (max amount is {MAX_AIRDROP})\n          </BodyText>\n          <View mt={4} fdirection=\"column\">\n            {invitesEl}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nInviteModal.propTypes = {\n  inviteList: PropTypes.object,\n  invites: PropTypes.object,\n  auth: PropTypes.object,\n  community: PropTypes.object,\n  actions: PropTypes.object,\n  count: PropTypes.object,\n  onShare: PropTypes.func,\n  postInviteGeneration: PropTypes.func\n};\n\nexport default InviteModal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { createInvite, getInviteCount, getInvites } from 'modules/admin/admin.actions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport InviteModalComponent from 'modules/invites/inviteModal.component';\nimport { Alert } from 'app/utils/alert';\nimport { copyToClipBoard } from 'utils/text';\n\nclass InviteModalContainer extends Component {\n  componentDidMount() {\n    const { community } = this.props.auth;\n    if (community) this.props.actions.getInviteCount();\n  }\n\n  postInviteGeneration(invite) {\n    if (invite) {\n      Alert().alert('Generated new invite link', 'success');\n    }\n  }\n\n  handleShare(data) {\n    copyToClipBoard(data.url);\n  }\n\n  render() {\n    return (\n      <InviteModalComponent\n        {...this.props}\n        postInviteGeneration={this.postInviteGeneration}\n        onShare={this.handleShare}\n      />\n    );\n  }\n}\n\nInviteModalContainer.propTypes = {\n  actions: PropTypes.object,\n  close: PropTypes.func,\n  auth: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  auth: get(state, 'auth', {}),\n  community: get(state, 'community', {}),\n  count: state.admin.count,\n  invites: state.admin.invites,\n  inviteList: state.admin.inviteList,\n  initialValues: {\n    invitedByString: get(state, 'auth.user.name', '')\n  }\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      createInvite,\n      getInviteCount,\n      getInvites\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteModalContainer);\n","import React from 'react';\n// Make sure the shape of the default value passed to\n// createContext matches the shape that the consumers expect!\nexport default React.createContext({\n  wallet: null\n  // toggleTheme: () => {},\n});\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport Eth from 'modules/web_ethTools/eth.context';\nimport { abbreviateNumber } from 'app/utils/numbers';\nimport { userProps } from 'app/utils/propValidation';\nimport { sizing } from 'app/styles';\nimport {\n  Image,\n  ImageWrapper,\n  NumericalValue,\n  SecondaryText,\n  Text\n} from 'modules/styled/uni';\nimport { usePrice } from 'modules/wallet/price.context';\n\nconst coinImage = require('public/img/relevantcoin.png');\n\nfunction CoinStat(props) {\n  const {\n    user,\n    isOwner,\n    wallet,\n    size,\n    amount,\n    mr,\n    align,\n    noNumber,\n    secondary,\n    fs,\n    lh,\n    inline,\n    c,\n    spaceBetween,\n    showPrice,\n    ...rest\n  } = props;\n\n  let tokens;\n  if (typeof amount === 'number') tokens = amount;\n  else if (user) {\n    tokens = user.balance;\n    if (user.tokenBalance) tokens += user.tokenBalance;\n  }\n\n  const usdValue = usePrice(tokens);\n\n  if (isOwner && user.ethAddress && user.ethAddress[0] && wallet.connectedBalance) {\n    tokens = wallet.connectedBalance + user.balance;\n  }\n  const iconSize = typeof size === 'number' ? size : 3;\n  const NumberStyle = secondary ? SecondaryText : NumericalValue;\n  const imageMargin = align === 'center' ? 0 : sizing(-1, 'px');\n  const Wrapper = inline ? Text : ImageWrapper;\n\n  let spacer = 0;\n  if (!inline && iconSize) {\n    spacer = iconSize / 4;\n  }\n  if (!inline && spaceBetween) {\n    spacer = spaceBetween;\n  }\n\n  return (\n    <Wrapper\n      {...rest}\n      inline={inline ? 1 : 0}\n      mr={typeof mr === 'number' ? mr : inline ? 0 : 1.5}\n      align={align}\n    >\n      <Image\n        inline={inline ? 1 : 0}\n        source={coinImage}\n        h={iconSize * 1}\n        w={iconSize * 1.05}\n        style={{ bottom: imageMargin }}\n        resizeMode=\"contain\"\n      />\n\n      {noNumber ? null : (\n        <NumberStyle ml={spacer} fs={fs} lh={lh} inline={inline ? 1 : 0} c={c}>\n          {inline ? ' ' : ''}\n          {abbreviateNumber(tokens)}\n          {showPrice ? usdValue : ''}\n        </NumberStyle>\n      )}\n    </Wrapper>\n  );\n}\n\nCoinStat.propTypes = {\n  lh: PropTypes.number,\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  secondary: PropTypes.bool,\n  mr: PropTypes.number,\n  fs: PropTypes.number,\n  amount: PropTypes.number,\n  size: PropTypes.number,\n  user: userProps,\n  isOwner: PropTypes.bool,\n  wallet: PropTypes.object,\n  align: PropTypes.string,\n  lineheight: PropTypes.string,\n  c: PropTypes.string,\n  noNumber: PropTypes.bool,\n  spaceBetween: PropTypes.number,\n  showPrice: PropTypes.bool\n};\n\nexport default memo(props => (\n  <Eth.Consumer>{wallet => <CoinStat wallet={wallet} {...props} />}</Eth.Consumer>\n));\n","import React, { useReducer, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { getTokenReserves } from '@uniswap/sdk';\nimport { abbreviateNumber } from 'utils/numbers';\n\nif (process.env.WEB !== 'true') {\n  require('../../publicenv');\n}\n\nconst { TOKEN_ADDRESS, DISABLE_PRICE } = process.env;\nconst UPDATE_INTERVAL = 1 * 60 * 1000;\n\nexport const PriceContext = React.createContext(0);\n\nexport function exchangeLink() {\n  return `https://uniswap.exchange/swap?theme=dark&outputCurrency=${TOKEN_ADDRESS}`;\n}\n\nexport function tokenEnabled() {\n  return !!TOKEN_ADDRESS;\n}\n\nexport function usePrice(amount, type) {\n  const { price } = useContext(PriceContext);\n  if (!price) return '';\n  if (type === 'number') return abbreviateNumber(price * amount);\n  return ` ($${abbreviateNumber(price * amount, 2)})`;\n}\n\nPriceProvider.propTypes = {\n  children: PropTypes.node\n};\n\nexport default function PriceProvider({ children }) {\n  const [state, dispatch] = useReducer(priceReducer, {\n    loading: false,\n    error: false,\n    data: null,\n    refresh: 0\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_PRICE_INIT' });\n      if (!TOKEN_ADDRESS || DISABLE_PRICE) return;\n      try {\n        const tokenPrice = await getTokenReserves(TOKEN_ADDRESS);\n        const res = await fetch('https://api.infura.io/v1/ticker/ethusd');\n        const ethPrice = await res.json();\n\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_PRICE_SUCCESS',\n            payload: { ...tokenPrice, ethPrice: ethPrice.bid }\n          });\n        }\n      } catch (err) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_PRICE_ERROR', payload: err });\n        }\n      }\n    };\n    fetchData();\n\n    setTimeout(() => {\n      dispatch({ type: 'REFRESH_PRICE' });\n    }, UPDATE_INTERVAL);\n\n    return () => {\n      didCancel = true;\n    };\n  }, [state.refresh]);\n\n  const price = computePrice(state.data);\n  const priceString = `($${abbreviateNumber(price, 2)})`;\n\n  return (\n    <PriceContext.Provider value={{ price, priceString }}>\n      {children}\n    </PriceContext.Provider>\n  );\n}\n\nconst priceReducer = (state, action) => {\n  switch (action.type) {\n    case 'REFRESH_PRICE':\n      return {\n        ...state,\n        refresh: state.refresh + 1\n      };\n    case 'FETCH_PRICE_INIT':\n      return {\n        ...state,\n        loading: true,\n        error: false\n      };\n    case 'FETCH_PRICE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload\n      };\n    case 'FETCH_PRICE_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      throw new Error();\n  }\n};\n\nfunction computePrice(data) {\n  if (!data) return null;\n  const { ethReserve, tokenReserve, ethPrice } = data;\n  if (!ethReserve || !tokenReserve) return null;\n  const priceInEth = ethReserve.amount.div(tokenReserve.amount);\n  const usdPrice = priceInEth.times(ethPrice);\n  return parseFloat(usdPrice.toString());\n}\n","import PropTypes from 'prop-types';\nimport { isValidElementType } from 'react-is';\n\nexport const userProps = PropTypes.shape({\n  handle: PropTypes.string,\n  balance: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string\n  // relevance: // TODO shape or null\n});\n\nexport const postProps = PropTypes.shape({\n  _id: PropTypes.string.isRequired, // TODO\n  user: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  embeddedUser: PropTypes.object, // userProp?\n  tags: PropTypes.array,\n  body: PropTypes.string,\n  postDate: PropTypes.instanceOf(Date),\n  data: PropTypes.object, // TODO shape or null\n  link: PropTypes.object, // TODO shape or null\n  parentPost: PropTypes.number,\n  type: PropTypes.string\n});\n\nexport const authProps = PropTypes.shape({\n  isAuthenticated: PropTypes.bool,\n  user: userProps,\n  community: PropTypes.string\n});\n\n// eslint-disable-next-line consistent-return\nexport function elementTypePropTypeChecker(props, propName, componentName) {\n  if (props[propName] && !isValidElementType(props[propName])) {\n    return new Error(\n      `Invalid prop '${propName}' supplied to '${componentName}': the prop is not a valid React component`\n    );\n  }\n}\n"],"sourceRoot":""}