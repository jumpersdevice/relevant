{"version":3,"sources":["webpack:///./public/img/default_community.png","webpack:///./src/modules/createPost/web/createPostModal.header.js"],"names":["Select","loadable","ModalHeader","history","dispatch","useDispatch","communities","list","active","useSelector","state","community","com","map","id","options","c","label","name","value","slug","activeCommunity","find","hideModal","browserAlerts","alert","image","uri","require","style","zIndex","fdirection","align","mr","w","h","mt","bottom","source","resizeMode","isSearchable","styles","customStyles","onChange","e","push","pathname","search","location","propTypes","PropTypes","object","menu","provided","borderRadius","padding","maxWidth","container","option","borderBottom","colors","lightBorder","fonts","body","color","isSelected","blue","black","sizing","cursor","indicatorSeparator","dropdownIndicator","valueContainer","overflow","paddingRight","control","border","display","menuList","fontSize","singleValue","opacity","isDisabled","lineHeight","transition","withRouter"],"mappings":"wJAAA,OAAe,cAA0B,oC,urCCUzC,IAAMA,EAASC,YAAS,IAAM,8FAM9B,SAASC,EAAT,GAAkC,IAAb,QAAEC,GAAW,EAC1BC,EAAWC,eACX,YAAEC,EAAF,KAAeC,EAAf,OAAqBC,GAAWC,YAAYC,GAASA,EAAMC,WAE3DC,EAAML,EAAKM,IAAIC,GAAMR,EAAYQ,IACjCC,EAAUH,EAAIC,IAAIG,IAAK,CAAGC,MAAOD,EAAEE,KAAMC,MAAOH,EAAEI,QAClDC,EAAkBT,EAAIU,KAAKN,GAAKA,EAAEI,OAASZ,GACjD,IAAKa,EAGH,OAFAjB,EAASmB,uBACTC,gBAAcC,MAAM,kCAAmC,SAChD,KAET,IAAMN,EAAQ,CAAEF,MAAOI,EAAgBH,KAAMC,MAAOX,GAE9CkB,EAAQL,EAAgBK,MAC1B,CAAEC,IAAKN,EAAgBK,OACvBE,EAAQ,sCAEZ,OACE,kBAAC,IAAD,CAAMC,MAAO,CAAEC,OAAQ,GAAKC,WAAW,MAAMC,MAAO,YAClD,kBAAC,IAAD,CAAOC,GAAI,KAAX,YACA,kBAAC,IAAD,CACEC,EAAG,EACHC,EAAG,EACHF,GAAI,EACJG,GAAI,IACJP,MAAO,CAAEQ,OAAQ,QACjBC,OAAQZ,EACRa,WAAY,UAEd,kBAACvC,EAAD,CACEwC,cAAc,EACdC,OAAQC,EACRvB,MAAOA,EACPwB,SAAUC,GACRzC,EAAQ0C,KAAK,CAAEC,SAAU,IAAF,OAAMF,EAAEzB,MAAR,QAAqB4B,OAAQ5C,EAAQ6C,SAASD,SAEvEhC,QAASA,KAzCjBb,EAAY+C,UAAY,CACtB9C,QAAS+C,IAAUC,QA8CrB,IAAMT,EAAe,CACnBU,KAAMC,GAAY,EAAJ,KACTA,GADS,IAEZC,aAAc,EACdC,QAAS,EACTC,SAAU,MAEZC,UAAW,KAAM,CACfF,QAAS,QAEXG,OAAQ,CAACL,EAAU3C,IAAX,KACNiD,aAAc,aAAF,OAAeC,IAAOC,cAC/BC,IAAMC,MAFH,IAGNC,MAAOtD,EAAMuD,WAAaL,IAAOM,KAAON,IAAOO,MAC/CZ,QAASa,YAAO,GAChBC,OAAQ,YAEVC,mBAAoB,OACpBC,kBAAmBlB,GAAY,EAAJ,KACtBA,GADsB,IAEzBE,QAAS,EACTc,OAAQ,YAEVG,eAAgBnB,GAAY,EAAJ,KACnBA,GADmB,IAEtBE,QAAS,EACTkB,SAAU,UACVC,aAAc,GACdL,OAAQ,YAEVM,QAAS,KAAM,CACbC,OAAQ,OACRC,QAAS,OACTtB,QAAS,IAEXuB,SAAU,KAAM,CAAGC,SAAUX,YAAO,KACpCY,YAAa,CAAC3B,EAAU3C,KACtB,IAAMuE,EAAUvE,EAAMwE,WAAa,GAAM,EAEzC,cACKpB,IAAMC,MADX,IAEEM,OAAQ,UACRU,SAAUX,YAAO,KACjBe,WAAYf,YAAO,KACnBa,UACAG,WAPiB,oBAYRC,sBAAWnF","file":"50.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"public/img/default_community.png\";","import React from 'react';\nimport { hideModal } from 'modules/navigation/navigation.actions';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { View, Title, Image } from 'modules/styled/uni';\nimport { colors, fonts, sizing } from 'app/styles';\nimport loadable from '@loadable/component';\nimport { browserAlerts } from 'utils/alert';\n\nconst Select = loadable(() => import('react-select'));\n\nModalHeader.propTypes = {\n  history: PropTypes.object\n};\n\nfunction ModalHeader({ history }) {\n  const dispatch = useDispatch();\n  const { communities, list, active } = useSelector(state => state.community);\n\n  const com = list.map(id => communities[id]);\n  const options = com.map(c => ({ label: c.name, value: c.slug }));\n  const activeCommunity = com.find(c => c.slug === active);\n  if (!activeCommunity) {\n    dispatch(hideModal());\n    browserAlerts.alert('Please select a community first', 'error');\n    return null;\n  }\n  const value = { label: activeCommunity.name, value: active };\n\n  const image = activeCommunity.image\n    ? { uri: activeCommunity.image }\n    : require('public/img/default_community.png');\n\n  return (\n    <View style={{ zIndex: 1 }} fdirection=\"row\" align={'baseline'}>\n      <Title mr={1.5}>Post to:</Title>\n      <Image\n        w={2}\n        h={2}\n        mr={1}\n        mt={0.25}\n        style={{ bottom: '-1px' }}\n        source={image}\n        resizeMode={'cover'}\n      />\n      <Select\n        isSearchable={false}\n        styles={customStyles}\n        value={value}\n        onChange={e =>\n          history.push({ pathname: `/${e.value}/new`, search: history.location.search })\n        }\n        options={options}\n      />\n    </View>\n  );\n}\n\nconst customStyles = {\n  menu: provided => ({\n    ...provided,\n    borderRadius: 0,\n    padding: 0,\n    maxWidth: 300\n  }),\n  container: () => ({\n    padding: '0px'\n  }),\n  option: (provided, state) => ({\n    borderBottom: `1px solid ${colors.lightBorder}`,\n    ...fonts.body,\n    color: state.isSelected ? colors.blue : colors.black,\n    padding: sizing(2),\n    cursor: 'pointer'\n  }),\n  indicatorSeparator: () => {},\n  dropdownIndicator: provided => ({\n    ...provided,\n    padding: 0,\n    cursor: 'pointer'\n  }),\n  valueContainer: provided => ({\n    ...provided,\n    padding: 0,\n    overflow: 'visible',\n    paddingRight: 10,\n    cursor: 'pointer'\n  }),\n  control: () => ({\n    border: 'none',\n    display: 'flex',\n    padding: 0\n  }),\n  menuList: () => ({ fontSize: sizing(2) }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n    return {\n      ...fonts.body,\n      cursor: 'pointer',\n      fontSize: sizing(2.5),\n      lineHeight: sizing(2.5),\n      opacity,\n      transition\n    };\n  }\n};\n\nexport default withRouter(ModalHeader);\n"],"sourceRoot":""}