{"version":3,"sources":["webpack:///./src/modules/admin/admin.actions.js","webpack:///./src/modules/admin/web/waitlist.component.js","webpack:///./src/modules/ui/web/ShadowButton.js"],"names":["Alert","alert","API","process","inviteSchema","schema","Entity","idAttribute","listSchema","setInvites","data","community","skip","type","types","payload","setWaitlist","deleteWaitlistUsers","users","updateInvite","invite","destroyInvite","setInviteCount","count","getInviteCount","dispatch","api","request","method","endpoint","path","err","message","getInvites","limit","responseJSON","query","normalize","invites","error","createInvite","res","body","JSON","stringify","destroy","fetch","_id","reqOptions","then","handleErrors","catch","console","log","getWaitlist","response","json","wait","inviteFromWaitlist","signupForMailingList","user","setDownvotes","getDownvotes","sendEmail","email","saveEmail","loadEmail","deleteWaitlistUser","sendPostNotification","post","require","Waitlist","Component","constructor","props","super","this","handleChange","bind","sendInvites","state","number","componentDidMount","actions","window","confirm","admin","waitList","slice","map","id","event","setState","target","name","value","renderWaitlist","waitlistId","key","className","status","onClick","render","waitlist","style","width","textAlign","placeholder","onChange","backgroundColor","color","maxWidth","PropTypes","object","propTypes","connect","auth","bindActionCreators","adminActions","ShadowButton","children","func","node"],"mappings":"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","file":"41.bundle.js","sourcesContent":["/* eslint-disable no-console */\nimport { normalize, schema } from 'normalizr';\nimport * as types from 'core/actionTypes';\nimport { alert, api } from 'app/utils';\n\nconst Alert = alert.Alert();\nconst API = process.env.API_SERVER + '/api';\n\nconst inviteSchema = new schema.Entity(\n  'invites',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nconst listSchema = new schema.Entity(\n  'wait',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nexport function setInvites({ data, community, skip }) {\n  return {\n    type: types.SET_INVITES,\n    payload: {\n      data,\n      community,\n      skip\n    }\n  };\n}\n\nexport function setWaitlist(data) {\n  return {\n    type: types.SET_WAITLIST,\n    payload: data\n  };\n}\n\nexport function deleteWaitlistUsers(users) {\n  return {\n    type: types.DELETE_WAITLIST_USER,\n    payload: users\n  };\n}\n\nexport function updateInvite(invite) {\n  return {\n    type: types.UPDATE_INVITE,\n    payload: invite\n  };\n}\n\nexport function destroyInvite(invite) {\n  return {\n    type: types.DESTROY_INVITE,\n    payload: invite\n  };\n}\n\nexport function setInviteCount(count) {\n  return {\n    type: types.SET_INVITE_COUNT,\n    payload: count\n  };\n}\n\nexport function getInviteCount() {\n  return async dispatch => {\n    try {\n      const count = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invites',\n          path: '/count'\n        })\n      );\n\n      dispatch(setInviteCount(count));\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function getInvites(skip, limit, community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          query: { skip, limit },\n          endpoint: 'invites',\n          path: ''\n        })\n      );\n      const data = normalize(\n        {\n          invites: responseJSON\n        },\n        {\n          invites: [inviteSchema]\n        }\n      );\n      dispatch(setInvites({ data, community, skip }));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function createInvite(invite) {\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invites',\n          path: '/',\n          body: JSON.stringify(invite)\n        })\n      );\n      dispatch(updateInvite(res.invite[0]));\n      dispatch(setInviteCount(res.count));\n      return res;\n    } catch (error) {\n      Alert.alert(error.message);\n      return false;\n    }\n  };\n}\n\n// export function sendInvitationEmail(id) {\n//   return async dispatch =>\n//     fetch(API + '/invites/email', {\n//       method: 'POST',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         inviteId: id\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       Alert.alert('Invitation email has been sent');\n//     })\n//     .catch(error => {\n//       console.log('invites error', error);\n//     });\n// }\n\n// export function checkInviteCode(code) {\n//   return async dispatch =>\n//     fetch(API + '/invites', {\n//       method: 'PUT',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         code\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       if (responseJSON) return responseJSON;\n//       return false;\n//     })\n//     .catch(error => {\n//       Alert.alert(error.message);\n//       console.log('invites error', error);\n//     });\n// }\n\nexport function destroy(invite) {\n  return async dispatch =>\n    fetch(API + '/invites/' + invite._id, {\n      method: 'DELETE',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert('removed item');\n        dispatch(destroyInvite(invite));\n      })\n      .catch(error => {\n        Alert.alert(error.message);\n        console.log('invites error', error);\n      });\n}\n\nexport function getWaitlist() {\n  return async dispatch =>\n    fetch(API + '/list', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        const data = normalize(\n          {\n            wait: responseJSON\n          },\n          {\n            wait: [listSchema]\n          }\n        );\n        dispatch(setWaitlist(data));\n      })\n      .catch(error => {\n        console.log('invites error', error);\n      });\n}\n\nexport function inviteFromWaitlist(invites) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'PUT',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(invites)\n    })\n      .then(api.handleErrors)\n      // .then(response => response.json())\n      .then(() => {\n        Alert.alert('users have been invited!');\n        dispatch(deleteWaitlistUsers(invites));\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function signupForMailingList(user) {\n  return async () =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'POST',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(user)\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert(\"You've been added to the waitlist.\", 'success');\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function setDownvotes(data) {\n  return {\n    type: types.SET_DOWNVOTES,\n    payload: data\n  };\n}\n\nexport function getDownvotes(skip, limit) {\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: {\n          skip,\n          limit\n        },\n        endpoint: 'invest',\n        path: '/downvotes'\n      })\n    )\n      .then(res => dispatch(setDownvotes(res)))\n      .catch(err => Alert.alert(err.message));\n}\n\nexport function sendEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been sent');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function saveEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/save',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been saved');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function loadEmail() {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'email',\n          path: '/load'\n        })\n      );\n      return responseJSON;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function deleteWaitlistUser(user) {\n  return async dispatch => {\n    try {\n      const result = await fetch(API + '/list/' + user._id, {\n        method: 'DELETE',\n        ...(await api.reqOptions())\n      });\n      // console.log(result)\n      if (result) {\n        dispatch(deleteWaitlistUsers([user]));\n      }\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function sendPostNotification(post) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'post',\n          path: '/sendPostNotification',\n          body: JSON.stringify(post)\n        })\n      );\n      return Alert.alert('Notification sent!');\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\n// export function updateWaitlist(user) {\n//   return async dispatch =>\n//   fetch(API + '/list/' + user._id, {\n//     method: 'PUT',\n//     ...await api.reqOptions(),\n//     body: JSON.stringify({ user })\n//   })\n//   .then(api.handleErrors)\n//   .then((response) => response.json())\n//   .then((responseJSON) => {\n//     dispatch(updateWaitlist(responseJSON));\n//     if (responseJSON) return responseJSON;\n//     return false;\n//   })\n//   .catch((error) => {\n//     Alert.alert(error.message);\n//     console.log('invites error', error);\n//   });\n// }\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as adminActions from 'modules/admin/admin.actions';\nimport ShadowButton from 'modules/ui/web/ShadowButton';\n\nif (process.env.BROWSER === true) {\n  require('./admin.css');\n}\n\nclass Waitlist extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    admin: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendInvites = this.sendInvites.bind(this);\n    this.state = {\n      number: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.getWaitlist();\n  }\n\n  destroy(invite) {\n    const c = window.confirm('Are you sure you would like to delete this invite?');\n    if (c) this.props.actions.destroy(invite);\n  }\n\n  sendInvites() {\n    const userIds = this.props.admin.waitList.slice(0, this.state.number);\n    const users = userIds.map(id => this.props.admin.wait[id]);\n    this.props.actions.inviteFromWaitlist(users);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  renderWaitlist(waitlistId) {\n    const user = this.props.admin.wait[waitlistId];\n    if (!user) return null;\n    return (\n      <div key={waitlistId} className={'adminRow'}>\n        <span>{user.name}</span>\n        <span>{user.email}</span>\n        <span>{user.status}</span>\n        <button onClick={() => this.props.actions.inviteFromWaitlist([user])}>Send Invite</button>\n        <button onClick={() => this.props.actions.deleteWaitlistUser(user)}>Remove</button>\n      </div>\n    );\n  }\n\n  render() {\n    const waitlist = this.props.admin.waitList.map(id => this.renderWaitlist(id));\n\n    return (\n      <div className=\"adminContainer\">\n        <h2>Waitlist</h2>\n\n        <div className=\"adminInner\">\n          <input\n            className={'blueInput'}\n            style={{ width: '40px', textAlign: 'right' }}\n            type={'text'}\n            name={'number'}\n            placeholder={'number of users'}\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n\n          <ShadowButton backgroundColor={'white'} color={'#3E3EFF'} onClick={this.sendInvites}>\n            {'Invite the next ' + (this.state.number === 1 ? 'user' : this.state.number + ' users')}\n          </ShadowButton>\n        </div>\n\n        <div key={'inviteId'} className={'titleRow'}>\n          <span>Name</span>\n          <span>Email</span>\n          <span>Status</span>\n          <span style={{ maxWidth: 130 }} />\n        </div>\n        {waitlist}\n      </div>\n    );\n  }\n}\n\nWaitlist.propTypes = {\n  actions: PropTypes.object,\n  admin: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    admin: state.admin\n  }),\n  dispatch => ({\n    actions: bindActionCreators(adminActions, dispatch)\n  })\n)(Waitlist);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ShadowButton(props) {\n  return (\n    <button\n      className=\"shadowButton\"\n      onClick={() => (props.onClick ? props.onClick() : null)}\n      style={{\n        ...props.style\n      }}\n    >\n      <span>{props.children}</span>\n    </button>\n  );\n}\n\nShadowButton.propTypes = {\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\n"],"sourceRoot":""}