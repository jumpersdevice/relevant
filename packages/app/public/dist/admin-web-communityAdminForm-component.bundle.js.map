{"version":3,"sources":["webpack:///./src/modules/form/selectField.component.js","webpack:///./src/modules/form/createSelectField.component.js","webpack:///./src/modules/form/asyncAdminField.component.js","webpack:///./src/modules/styled/form/checkbox.js","webpack:///./src/modules/admin/web/communityAdminForm.component.js","webpack:///./src/modules/form/validators.js","webpack:///./src/modules/styled/form/reduxformfield.component.js","webpack:///./src/modules/ui/web/imageUpload.component.js","webpack:///./src/modules/styled/form/reduxformimageupload.component.js","webpack:///./src/modules/styled/web.js","webpack:///./src/modules/user/user.actions.js"],"names":["SelectField","inputValue","value","props","input","onChange","this","label","error","options","defaultValue","opts","map","o","mt","zIndex","c","colors","black","mb","styles","menu","position","top","handleChange","red","Component","PropTypes","object","array","oneOfType","string","node","components","DropdownIndicator","createOption","CreatableMulti","option","setState","event","state","key","preventDefault","vals","v","placeholder","isClearable","isMulti","menuIsOpen","onInputChange","handleInputChange","onKeyDown","handleKeyDown","AsyncAdminField","newValue","replace","val","a","length","actions","searchUser","userSearch","u","handle","formattedVals","get","cacheOptions","defaultOptions","loadOptions","connect","user","search","dispatch","bindActionCreators","Checkbox","type","meta","name","autocomplete","dirty","touched","warning","fdirection","autoComplete","mr","html-for","propTypes","defaultProps","CommunityAdminForm","e","initialValues","close","window","confirm","deleteCommunity","values","history","community","image","preview","fileName","s3","toS3Advanced","url","isUpdate","updateCommunity","createCommunity","push","slug","handleSubmit","imageProps","p","w","h","bg","blue","bradius","customFields","customParams","component","ReduxFormField","FORM_FIELDS","ReduxFormImageUpload","imageComponent","validate","required","text","display","m","onSubmit","submit","field","index","Field","justify","_id","ml","white","onClick","func","bool","withRouter","ownProps","auth","Object","keys","admins","embeddedUser","superAdmins","routing","enableReinitialize","reduxForm","form","undefined","email","test","validCharacters","NAME_PATTERN","asyncEmail","checkUser","asyncUsername","signupAsyncValidation","errors","username","passwordsShouldMatch","password","confirmPassword","compose","validators","reduce","validator","border","Alert","alert","ImageUpload","file","fileInput","files","img","loadImage","then","dataURL","extension","split","substr","lastIndexOf","catch","upload","React","cloneElement","source","uri","src","style","maxWidth","previewImage","renderPreview","align","ref","processImage","bind","accept","StyledNavLink","styled","NavLink","fonts","header","grey","mixins","font","color","margin","View","div","padding","flex","background","width","height","Text","span","InlineText","Image","borderRadius","Divider","layout","universalBorder","Title","title","LinkFont","link","SecondaryText","secondaryText","BodyText","altLink","commentText","bodyStyle","Button","button","buttonFont","disabled","activeButtonShadow","NumericalValue","numericalValue","inheritfont","InputPlain","sizing","Input","StyledTextareaAutocomplete","ReactTextareaAutocomplete","StyledTextarea","TextareaAutosize","Form","Video","video","updateLocalUser","types","payload","getUsersLoading","getUserLoading","setUserList","users","topic","clearUserList","clearSelectedUser","setSelectedUserData","data","setUserSearch","userName","api","request","method","endpoint","path","query","limit","res","errorActions","message","getSelectedUser","updateBlock","block","unblock","process","fetch","body","JSON","stringify","reqOptions","handleErrors","response","json","responseJSON","action","getBlocked"],"mappings":"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","file":"admin-web-communityAdminForm-component.bundle.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport Select from 'react-select';\n\nexport default class SelectField extends Component {\n  static propTypes = {\n    input: PropTypes.object,\n    options: PropTypes.array,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    error: PropTypes.string\n  };\n\n  state = { inputValue: '' };\n\n  handleChange = value => {\n    this.props.input.onChange(value.value);\n  };\n\n  render() {\n    const { label, error, options, input } = this.props;\n    const defaultValue = { value: input.value, label: input.value };\n    const opts = options.map(o => ({ label: o, value: o }));\n    return (\n      <View mt={2} zIndex={0}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <Select\n          styles={{\n            menu: styles => ({ ...styles, position: 'relative', top: 0, zIndex: 10 })\n          }}\n          // isMulti\n          // cacheOptions\n          defaultValue={defaultValue}\n          onChange={this.handleChange}\n          options={opts}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\n\nconst components = {\n  DropdownIndicator: null\n};\n\nconst createOption = label => ({\n  label,\n  value: label\n});\n\nexport default class CreatableMulti extends Component {\n  static propTypes = {\n    // initialValues: PropTypes.array,\n    input: PropTypes.object,\n    placeholder: PropTypes.string,\n    label: PropTypes.string,\n    error: PropTypes.string\n  };\n\n  state = {\n    inputValue: '',\n    value: this.props.input.value\n      ? this.props.input.value.map(option => ({ value: option, label: option }))\n      : []\n  };\n\n  componentDidUpdate() {\n    const vals = this.state.value.map(v => v.label);\n    // console.log('did update', vals);\n    this.props.input.onChange(vals);\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  handleInputChange = inputValue => {\n    this.setState({ inputValue });\n  };\n\n  handleKeyDown = event => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        // console.group('Value Added');\n        // console.log(value);\n        // console.groupEnd();\n        this.setState({\n          inputValue: '',\n          value: [...value, createOption(inputValue)]\n        });\n        event.preventDefault();\n        break;\n      default:\n        // console.log('DEFAULT');\n        break;\n    }\n  };\n\n  render() {\n    const { placeholder, label, error, input } = this.props;\n    const { inputValue } = this.state;\n    const vals = input.value ? input.value.map(v => ({ label: v, value: v })) : [];\n    return (\n      <View key=\"tags-input\" mt={2}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <CreatableSelect\n          key=\"tags-input-select\"\n          components={components}\n          inputValue={inputValue}\n          isClearable\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={vals}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport AsyncSelect from 'react-select/async';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { searchUser } from 'modules/user/user.actions';\n\nclass AsyncAdminField extends Component {\n  static propTypes = {\n    input: PropTypes.object,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    error: PropTypes.string,\n    actions: PropTypes.object\n    // userSearch: PropTypes.array\n  };\n\n  state = { inputValue: '' };\n\n  handleInputChange = newValue => {\n    const inputValue = newValue.replace(/\\W/g, '');\n    this.setState({ inputValue });\n    return inputValue;\n  };\n\n  loadOptions = async val => {\n    if (!val.length) return null;\n    const userSearch = await this.props.actions.searchUser(val);\n    return userSearch.map(u => ({ label: u.handle, value: u.handle }));\n  };\n\n  handleChange = vals => {\n    const formattedVals = vals.map(v => v.value);\n    this.props.input.onChange(formattedVals);\n  };\n\n  render() {\n    const { label, error, input } = this.props;\n    const vals = get(input, 'value', []).map(u => ({ label: u, value: u }));\n    return (\n      <View mt={2} zIndex={0}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <AsyncSelect\n          styles={{ menu: styles => ({ ...styles, position: 'relative', top: 0 }) }}\n          isMulti\n          cacheOptions\n          defaultOptions\n          value={vals}\n          loadOptions={this.loadOptions}\n          onChange={this.handleChange}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userSearch: state.user.search\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        searchUser\n      },\n      dispatch\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsyncAdminField);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, InputPlain } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst Checkbox = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View fdirection=\"column\" mt={3}>\n      <View fdirection=\"row\">\n        <InputPlain\n          {...input}\n          placeholder={placeholder || label}\n          autoComplete={autocomplete}\n          name={name}\n          type={type}\n          mr={1}\n        />{' '}\n        {label ? (\n          <label html-for={name}>\n            <LinkFont c={colors.black}>{label}</LinkFont>\n          </label>\n        ) : null}\n        {(dirty || touched) &&\n          ((error && (\n            <SecondaryText c={colors.red} mt={1}>\n              {error}\n            </SecondaryText>\n          )) ||\n            (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n      </View>\n    </View>\n  );\n};\n\nCheckbox.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nCheckbox.defaultProps = {\n  autocomplete: null\n};\n\nexport default Checkbox;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { s3 } from 'app/utils';\nimport { connect } from 'react-redux';\nimport {\n  updateCommunity,\n  createCommunity,\n  deleteCommunity\n} from 'modules/community/community.actions';\nimport SelectField from 'modules/form/selectField.component';\nimport CreatableMulti from 'modules/form/createSelectField.component';\nimport AsyncAdminField from 'modules/form/asyncAdminField.component';\nimport ReduxFormImageUpload from 'modules/styled/form/reduxformimageupload.component';\nimport ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport Checkbox from 'modules/styled/form/checkbox';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, View, Button, Title } from 'modules/styled/web';\nimport { Image, LinkFont, SecondaryText } from 'modules/styled/uni';\nimport { required } from 'modules/form/validators';\nimport { colors } from 'styles';\n\nclass CommunityAdminForm extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    handleSubmit: PropTypes.func,\n    isUpdate: PropTypes.bool,\n    initialValues: PropTypes.object,\n    close: PropTypes.func,\n    history: PropTypes.object\n  };\n\n  deleteCommunity = async e => {\n    e.preventDefault();\n    const { initialValues, close } = this.props;\n    if (\n      // eslint-disable-next-line\n      window.confirm(\n        `Are you sure you want to delete this community: ${initialValues.name}?`\n      )\n    ) {\n      const success = await this.props.actions.deleteCommunity(initialValues);\n      if (success && close) close();\n    }\n  };\n\n  submit = async values => {\n    const { history } = this.props;\n    try {\n      const community = { ...values };\n      if (community.image && community.image.preview && community.image.fileName) {\n        const image = await s3.toS3Advanced(\n          community.image.preview,\n          community.image.fileName\n        );\n        community.image = image.url;\n      }\n      const { isUpdate } = this.props;\n      if (isUpdate) {\n        this.props.actions.updateCommunity(community);\n      } else {\n        await this.props.actions.createCommunity(community);\n        history.push(`/${community.slug}/new`);\n      }\n    } catch (err) {\n      // TODO error handling\n    }\n  };\n\n  render() {\n    const { handleSubmit, initialValues } = this.props;\n    const imageProps = {\n      p: 2,\n      w: 9,\n      h: 9,\n      bg: colors.blue,\n      bradius: '50%'\n    };\n\n    const customFields = initialValues.customParams\n      ? [\n          {\n            name: 'customParams.auth.points',\n            label: 'REQUIRED FOR POSTING: Added Points of Interest',\n            component: ReduxFormField,\n            type: 'number'\n          },\n          {\n            name: 'customParams.auth.tokens',\n            label: 'REQUIRED FOR POSTING: FOAM token balance',\n            component: ReduxFormField,\n            type: 'number'\n          }\n        ]\n      : [];\n\n    const FORM_FIELDS = [\n      {\n        name: 'image',\n        component: ReduxFormImageUpload,\n        placeholder: '/img/blueR.png',\n        imageComponent: <Image mt={1} bg={colors.blue} {...imageProps} />,\n        type: 'file-upload',\n        label: 'Community Image',\n        validate: []\n      },\n      {\n        name: 'name',\n        label: 'Name',\n        component: ReduxFormField,\n        type: 'text',\n        validate: [required]\n      },\n      // {\n      //   name: 'private',\n      //   label: 'Private',\n      //   component: Checkbox,\n      //   type: 'checkbox'\n      // },\n      {\n        name: 'slug',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Slug (cannot be changed in the future)</LinkFont>\n            <SecondaryText>\n              Determines the url of the community, ex: relevant.community/{'<slug>'}\n            </SecondaryText>\n          </View>\n        ),\n        placeholder: 'slug',\n        component: ReduxFormField,\n        type: 'text',\n        validate: [required]\n      },\n      {\n        name: 'description',\n        component: ReduxFormField,\n        type: 'text',\n        label: 'Description',\n        validate: [required]\n      },\n      {\n        name: 'topics',\n        component: CreatableMulti,\n        type: 'text',\n        label: 'Tags',\n        validate: []\n      },\n      {\n        name: 'sectionTitle',\n        text: 'Admins & Moderators'\n      },\n      {\n        name: 'superAdmins',\n        component: AsyncAdminField,\n        type: 'text',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Admins</LinkFont>\n            <SecondaryText>\n              Users with admin priveleges (ability to edit community parameters and add or\n              remove moderators)\n            </SecondaryText>\n          </View>\n        ),\n        validate: []\n      },\n      {\n        name: 'admins',\n        component: AsyncAdminField,\n        type: 'text',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Moderators</LinkFont>\n            <SecondaryText>\n              Users that will have high reputation by default (but not necessarily admin\n              priveleges)',\n            </SecondaryText>\n          </View>\n        ),\n        validate: []\n      },\n      {\n        name: 'sectionTitle',\n        text: 'Community Settings'\n      },\n      {\n        name: 'defaultPost',\n        label: 'Default Post Type',\n        component: SelectField,\n        // input: { value: [] },\n        // value: 'link',\n        options: ['link', 'text']\n      },\n      ...customFields,\n      {\n        name: 'betEnabled',\n        label: 'Enable Betting',\n        component: Checkbox,\n        type: 'checkbox'\n      },\n      {\n        name: 'hidden',\n        label: 'Unlisted (anyone with link can still see and join the community)',\n        component: Checkbox,\n        type: 'checkbox'\n      }\n    ];\n    return (\n      <View display=\"flex\" fdirection=\"column\" m={'0 4'} mb={16}>\n        <Form\n          onSubmit={handleSubmit(this.submit)}\n          fdirection=\"column\"\n          key=\"community-admin-form\"\n        >\n          {FORM_FIELDS.map((field, index) => {\n            if (field.name === 'sectionTitle')\n              return (\n                <Fragment key={field.text + index}>\n                  <Title mt={4}>{field.text}</Title>\n                </Fragment>\n              );\n            return <Field {...field} key={index} />;\n          })}\n          <View justify=\"flex-end\" mt={3} fdirection=\"row\">\n            {initialValues._id ? (\n              <Button\n                ml={2}\n                c={colors.white}\n                bg={colors.red}\n                onClick={this.deleteCommunity}\n              >\n                Delete\n              </Button>\n            ) : null}\n            <Button ml={2} c={colors.white} type=\"submit\">\n              Submit\n            </Button>\n          </View>\n        </Form>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { close, history } = ownProps;\n  let slug = get(ownProps, 'match.params.slug') || state.auth.community;\n  if (get(ownProps, 'match.path') === '/admin/community/new') slug = null;\n  if (get(ownProps, 'match.path') === '/communities/new') slug = null;\n  const community = get(state.community, `communities.${slug}`, {});\n  const isUpdate = !!Object.keys(community).length;\n  const admins = get(community, 'admins', []).map(m => m.embeddedUser.handle);\n  const superAdmins = get(community, 'superAdmins', []).map(m => m.embeddedUser.handle);\n\n  const initialValues = { ...community, admins, superAdmins };\n\n  return {\n    routing: state.routing,\n    community: state.community,\n    isUpdate,\n    initialValues,\n    enableReinitialize: true,\n    close,\n    history\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      updateCommunity,\n      createCommunity,\n      deleteCommunity\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    reduxForm({\n      form: 'communityAdmin'\n    })(CommunityAdminForm)\n  )\n);\n","import { NAME_PATTERN } from 'app/utils/text';\nimport { checkUser } from 'modules/auth/auth.actions';\n\nexport const required = value =>\n  value || typeof value === 'number' ? undefined : 'Required';\n\nexport const email = value => {\n  if (!value) {\n    return undefined;\n  }\n  const valid = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,15}$/i.test(value);\n  if (valid) {\n    return undefined;\n  }\n  return 'Not a valid e-mail';\n};\n\nexport const validCharacters = value => {\n  const match = NAME_PATTERN.test(value);\n  if (!match) {\n    return 'Can only contain letters, \\nnumbers, dashes and underscores';\n  }\n  return undefined;\n};\n\nexport const asyncEmail = async value => {\n  const results = await checkUser(value, 'email', true)();\n  if (results) {\n    return 'This email has already been used';\n  }\n  return undefined;\n};\n\nexport const asyncUsername = async value => {\n  if (value) {\n    const results = await checkUser(value, 'name', true)();\n    // TODO: no error if username is own username\n    if (results) {\n      return 'This username is already taken';\n    }\n  }\n  return undefined;\n};\n\nexport const signupAsyncValidation = async values => {\n  // console.log('props  ', props  );\n  const errors = {};\n  if (values.username) {\n    const error = await asyncUsername(values.username);\n    if (error) {\n      errors.username = error;\n    }\n  }\n  if (values.email) {\n    const error = await asyncEmail(values.email);\n    if (error) {\n      errors.email = error;\n    }\n  }\n  if (values.handle) {\n    const error = await asyncUsername(values.handle);\n    if (error) {\n      errors.handle = error;\n    }\n  }\n  if (Object.keys(errors).length) {\n    throw errors;\n  }\n};\n\nexport const passwordsShouldMatch = values => {\n  const errors = {};\n  if (!values.password || !values.confirmPassword) {\n    return null;\n  }\n  if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  return errors;\n};\n\nexport const compose = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, Input } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <Input\n        {...input}\n        placeholder={placeholder || label}\n        autoComplete={autocomplete}\n        name={name}\n        type={type}\n        border={1}\n        p=\"2 2\"\n        mt={1}\n      />\n      {(dirty || touched) &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nReduxFormField.defaultProps = {\n  autocomplete: null\n};\n\nexport default ReduxFormField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { img, s3, alert } from 'app/utils';\nimport { View } from 'modules/styled/uni';\n\nconst Alert = alert.Alert();\n\nexport default class ImageUpload extends Component {\n  static propTypes = {\n    placeholder: PropTypes.string,\n    imageComponent: PropTypes.node,\n    onChange: PropTypes.func\n  };\n\n  state = {\n    preview: null,\n    fileName: null\n  };\n\n  processImage() {\n    const file = this.fileInput.files[0];\n    img\n      .loadImage(file)\n      .then(dataURL => {\n        const extension = dataURL\n          .split(',')[0]\n          .split('/')[1]\n          .split(';')[0];\n        const name = file.name.substr(0, extension.lastIndexOf('.')) + '.' + extension;\n        this.setState({ preview: dataURL, fileName: name });\n        this.props.onChange({ preview: dataURL, fileName: name });\n      })\n      .catch(e => {\n        Alert.alert('Error uploading image ' + e);\n      });\n  }\n\n  async uploadImage() {\n    if (!this.state.fileName || !this.state.preview) {\n      Alert('Please select an image');\n      return null;\n    }\n    const upload = await s3.toS3Advanced(this.state.preview, this.state.fileName);\n    this.setState({ preview: null, fileName: null });\n    this.props.onChange(upload);\n    return upload;\n  }\n\n  renderPreview() {\n    const { placeholder, imageComponent } = this.props;\n    const { preview } = this.state;\n    if (!preview && placeholder) {\n      return React.cloneElement(imageComponent, { source: { uri: placeholder } });\n    }\n    if (preview && imageComponent) {\n      return React.cloneElement(imageComponent, { source: { uri: preview } });\n    }\n    if (preview) {\n      return <img src={preview} style={{ maxWidth: '300px' }} />;\n    }\n    return null;\n  }\n\n  render() {\n    const previewImage = this.renderPreview();\n\n    return (\n      <View display=\"flex\" fdirection=\"row\" align=\"center\">\n        <View mr={2}>{previewImage}</View>\n        <input\n          ref={c => (this.fileInput = c)}\n          onChange={this.processImage.bind(this)}\n          accept={'image/*'}\n          name={'img'}\n          type={'file'}\n        />\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageUpload from 'modules/ui/web/imageUpload.component';\nimport { View, LinkFont, SecondaryText } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, meta, name, placeholder, imageComponent } = props;\n  const {\n    input: { onChange, value }\n  } = props;\n  const { touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <ImageUpload\n        placeholder={value || placeholder}\n        imageComponent={imageComponent}\n        onChange={vals => {\n          onChange(vals);\n        }}\n      />\n\n      {touched &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  placeholder: PropTypes.node,\n  imageComponent: PropTypes.node\n};\n\nexport default ReduxFormField;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { mixins, layout, fonts, colors, sizing } from 'app/styles';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport ReactTextareaAutocomplete from '@webscopeio/react-textarea-autocomplete';\n\nexport const StyledNavLink = styled(NavLink)`\n  ${fonts.header};\n  color: ${colors.grey};\n  &.active {\n    color: ${colors.black};\n  }\n  :hover {\n    color: ${colors.black};\n  }\n  ${mixins.font}\n  ${mixins.display}\n  ${mixins.color}\n  ${mixins.margin}\n`;\n\nexport const View = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.width}\n  ${mixins.height}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const Text = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const InlineText = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n`;\n\nexport const Image = styled.img`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n\nexport const ImageWrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${mixins.margin}\n  ${mixins.flex}\n`;\n\nexport const Divider = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.width}\n  ${layout.universalBorder('bottom')}\n`;\n\nexport const Header = styled(Text)`\n  ${fonts.header}\n  ${mixins.color}\n`;\n\nexport const Title = styled(Text)`\n  ${fonts.title}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const LinkFont = styled(Text)`\n  ${fonts.link}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const SecondaryText = styled(Text)`\n  ${fonts.secondaryText}\n  ${mixins.font}\n  ${mixins.color}\n`;\n\nexport const AltLink = styled(Text)`\n  ${fonts.altLink}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const CommentText = styled(Text)`\n  ${fonts.commentText}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const BodyText = styled(Text)`\n  ${fonts.bodyStyle}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const Button = styled.button`\n  ${layout.button}\n  ${layout.buttonFont}\n  ${p =>\n    p.disabled\n      ? `\n    color: ${colors.white};\n    background: ${colors.grey};\n    `\n      : ''};\n  ${mixins.flex}\n  ${mixins.background}\n  ${mixins.padding}\n  ${mixins.width}\n  ${mixins.margin}\n  ${mixins.color}\n  ${mixins.width}\n  ${mixins.height}\n  &:hover {\n    ${layout.activeButtonShadow}\n  };\n  user-select: none; cursor: pointer;\n`;\n\nexport const NumericalValue = styled(Text)`\n  ${fonts.numericalValue}\n  ${mixins.width}\n  ${mixins.font}\n  ${mixins.inheritfont}\n  ${mixins.color}\n`;\n\nexport const InputPlain = styled.input`\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const Input = styled.input`\n  padding: ${sizing(2)} ${sizing(2)};\n  margin-top: ${sizing(1)};  ${fonts.bodyStyle}\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${layout.universalBorder()}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const StyledTextareaAutocomplete = styled(ReactTextareaAutocomplete)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const StyledTextarea = styled(TextareaAutosize)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const Form = styled.form`\n  ${mixins.flex}\n  ${mixins.margin}\n`;\n\nexport const Video = styled.video`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n","import { api, alert } from 'app/utils';\nimport * as errorActions from 'modules/ui/error.actions';\nimport * as types from 'core/actionTypes';\n\nconst Alert = alert.Alert();\n\nexport function updateLocalUser(user) {\n  return {\n    type: types.UPDATE_USER,\n    payload: user\n  };\n}\n\nexport function getUsersLoading() {\n  return {\n    type: 'GET_USER_LIST'\n  };\n}\n\nexport function getUserLoading() {\n  return {\n    type: 'GET_USER_LOADING'\n  };\n}\n\nexport function setUserList(users, index, topic) {\n  return {\n    type: 'SET_USER_LIST',\n    payload: {\n      users,\n      index,\n      topic\n    }\n  };\n}\n\nexport function clearUserList() {\n  return {\n    type: 'CLEAR_USER_LIST'\n  };\n}\n\nexport function clearSelectedUser() {\n  return {\n    type: 'CLEAR_SELECTED_USER'\n  };\n}\n\nexport function setSelectedUserData(data) {\n  return {\n    type: types.SET_SELECTED_USER_DATA,\n    payload: data\n  };\n}\n\nexport function setUserSearch(data) {\n  return {\n    type: 'SET_USER_SEARCH',\n    payload: data\n  };\n}\n\nexport function searchUser(userName) {\n  const limit = 50;\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'user',\n          path: '/search',\n          query: { limit, search: userName }\n        })\n      );\n      dispatch(setUserSearch(res));\n      return res;\n    } catch (err) {\n      dispatch(errorActions.setError('activity', true, err.message));\n      return false;\n    }\n  };\n}\n\nexport function getSelectedUser(userName) {\n  return async dispatch => {\n    try {\n      dispatch(getUserLoading());\n      const user = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'user',\n          path: '/user/' + userName\n        })\n      );\n      dispatch(setSelectedUserData(user));\n      dispatch(errorActions.setError('profile', false));\n      return true;\n    } catch (err) {\n      dispatch(errorActions.setError('profile', true, err.message));\n      return false;\n    }\n  };\n}\n\nexport function updateBlock(block, unblock) {\n  let url = process.env.API_SERVER + '/api/user/block';\n  if (unblock) {\n    url = process.env.API_SERVER + '/api/user/unblock';\n  }\n  return async dispatch =>\n    fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify({\n        block\n      }),\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        let action = 'blocked';\n        if (unblock) action = 'unblocked';\n        Alert.alert('user ' + block + ' has been ' + action);\n        // console.log('block result ', responseJSON);\n        dispatch(updateLocalUser(responseJSON));\n      })\n      .catch(null);\n}\n\nexport function getBlocked() {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/user/blocked', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        dispatch(updateLocalUser(responseJSON));\n      })\n      .catch(null);\n}\n"],"sourceRoot":""}