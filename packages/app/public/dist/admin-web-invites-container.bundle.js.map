{"version":3,"sources":["webpack:///./src/modules/admin/admin.actions.js","webpack:///./src/modules/admin/web/invites.container.js","webpack:///./src/modules/listview/web/infScroll.component.js","webpack:///./src/modules/ui/web/ShadowButton.js"],"names":["Alert","alert","API","process","API_SERVER","inviteSchema","schema","Entity","idAttribute","listSchema","setInvites","data","community","skip","type","types","payload","setWaitlist","deleteWaitlistUsers","users","updateInvite","invite","destroyInvite","setInviteCount","count","getInviteCount","dispatch","a","api","request","method","endpoint","path","message","getInvites","limit","query","responseJSON","normalize","invites","createInvite","body","JSON","stringify","res","destroy","fetch","_id","reqOptions","then","handleErrors","catch","error","console","log","getWaitlist","response","json","wait","inviteFromWaitlist","err","signupForMailingList","user","setDownvotes","getDownvotes","sendEmail","email","saveEmail","loadEmail","deleteWaitlistUser","sendPostNotification","post","require","Invites","props","handleChange","bind","load","hasMore","state","name","number","filter","invitedBy","page","l","this","admin","inviteList","length","actions","status","window","confirm","sendInvitationEmail","invitedByString","setState","event","target","value","inviteId","key","className","code","style","width","onClick","placeholder","onChange","textAlign","backgroundColor","color","map","id","renderInvite","maxWidth","loadMore","Component","PropTypes","object","connect","auth","bindActionCreators","adminActions","InfScroll","scrollListener","attachScrollListener","pageLoaded","pageStart","detachScrollListener","loader","defaultLoader","scrollEl","useWindow","scrollComponent","parentNode","removeEventListener","useCapture","addEventListener","initialLoad","offset","el","scrollTop","undefined","pageYOffset","document","documentElement","isReverse","calculateTopPosition","offsetHeight","innerHeight","scrollHeight","clientHeight","Number","threshold","offsetTop","offsetParent","children","element","ref","node","React","createElement","array","propTypes","string","bool","func","isRequired","oneOfType","defaultProps","ShadowButton"],"mappings":"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","file":"admin-web-invites-container.bundle.js","sourcesContent":["/* eslint-disable no-console */\nimport { normalize, schema } from 'normalizr';\nimport * as types from 'core/actionTypes';\nimport { alert, api } from 'app/utils';\n\nconst Alert = alert.Alert();\nconst API = process.env.API_SERVER + '/api';\n\nconst inviteSchema = new schema.Entity(\n  'invites',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nconst listSchema = new schema.Entity(\n  'wait',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nexport function setInvites({ data, community, skip }) {\n  return {\n    type: types.SET_INVITES,\n    payload: {\n      data,\n      community,\n      skip\n    }\n  };\n}\n\nexport function setWaitlist(data) {\n  return {\n    type: types.SET_WAITLIST,\n    payload: data\n  };\n}\n\nexport function deleteWaitlistUsers(users) {\n  return {\n    type: types.DELETE_WAITLIST_USER,\n    payload: users\n  };\n}\n\nexport function updateInvite(invite) {\n  return {\n    type: types.UPDATE_INVITE,\n    payload: invite\n  };\n}\n\nexport function destroyInvite(invite) {\n  return {\n    type: types.DESTROY_INVITE,\n    payload: invite\n  };\n}\n\nexport function setInviteCount(count) {\n  return {\n    type: types.SET_INVITE_COUNT,\n    payload: count\n  };\n}\n\nexport function getInviteCount() {\n  return async dispatch => {\n    try {\n      const count = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invites',\n          path: '/count'\n        })\n      );\n\n      dispatch(setInviteCount(count));\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function getInvites(skip, limit, community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          query: { skip, limit },\n          endpoint: 'invites',\n          path: ''\n        })\n      );\n      const data = normalize(\n        {\n          invites: responseJSON\n        },\n        {\n          invites: [inviteSchema]\n        }\n      );\n      dispatch(setInvites({ data, community, skip }));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function createInvite(invite) {\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invites',\n          path: '/',\n          body: JSON.stringify(invite)\n        })\n      );\n      dispatch(updateInvite(res.invite[0]));\n      dispatch(setInviteCount(res.count));\n      return res;\n    } catch (error) {\n      Alert.alert(error.message);\n      return false;\n    }\n  };\n}\n\n// export function sendInvitationEmail(id) {\n//   return async dispatch =>\n//     fetch(API + '/invites/email', {\n//       method: 'POST',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         inviteId: id\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       Alert.alert('Invitation email has been sent');\n//     })\n//     .catch(error => {\n//       console.log('invites error', error);\n//     });\n// }\n\n// export function checkInviteCode(code) {\n//   return async dispatch =>\n//     fetch(API + '/invites', {\n//       method: 'PUT',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         code\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       if (responseJSON) return responseJSON;\n//       return false;\n//     })\n//     .catch(error => {\n//       Alert.alert(error.message);\n//       console.log('invites error', error);\n//     });\n// }\n\nexport function destroy(invite) {\n  return async dispatch =>\n    fetch(API + '/invites/' + invite._id, {\n      method: 'DELETE',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert('removed item');\n        dispatch(destroyInvite(invite));\n      })\n      .catch(error => {\n        Alert.alert(error.message);\n        console.log('invites error', error);\n      });\n}\n\nexport function getWaitlist() {\n  return async dispatch =>\n    fetch(API + '/list', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        const data = normalize(\n          {\n            wait: responseJSON\n          },\n          {\n            wait: [listSchema]\n          }\n        );\n        dispatch(setWaitlist(data));\n      })\n      .catch(error => {\n        console.log('invites error', error);\n      });\n}\n\nexport function inviteFromWaitlist(invites) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'PUT',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(invites)\n    })\n      .then(api.handleErrors)\n      // .then(response => response.json())\n      .then(() => {\n        Alert.alert('users have been invited!');\n        dispatch(deleteWaitlistUsers(invites));\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function signupForMailingList(user) {\n  return async () =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'POST',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(user)\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert(\"You've been added to the waitlist.\", 'success');\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function setDownvotes(data) {\n  return {\n    type: types.SET_DOWNVOTES,\n    payload: data\n  };\n}\n\nexport function getDownvotes(skip, limit) {\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: {\n          skip,\n          limit\n        },\n        endpoint: 'invest',\n        path: '/downvotes'\n      })\n    )\n      .then(res => dispatch(setDownvotes(res)))\n      .catch(err => Alert.alert(err.message));\n}\n\nexport function sendEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been sent');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function saveEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/save',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been saved');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function loadEmail() {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'email',\n          path: '/load'\n        })\n      );\n      return responseJSON;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function deleteWaitlistUser(user) {\n  return async dispatch => {\n    try {\n      const result = await fetch(API + '/list/' + user._id, {\n        method: 'DELETE',\n        ...(await api.reqOptions())\n      });\n      // console.log(result)\n      if (result) {\n        dispatch(deleteWaitlistUsers([user]));\n      }\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function sendPostNotification(post) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'post',\n          path: '/sendPostNotification',\n          body: JSON.stringify(post)\n        })\n      );\n      return Alert.alert('Notification sent!');\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\n// export function updateWaitlist(user) {\n//   return async dispatch =>\n//   fetch(API + '/list/' + user._id, {\n//     method: 'PUT',\n//     ...await api.reqOptions(),\n//     body: JSON.stringify({ user })\n//   })\n//   .then(api.handleErrors)\n//   .then((response) => response.json())\n//   .then((responseJSON) => {\n//     dispatch(updateWaitlist(responseJSON));\n//     if (responseJSON) return responseJSON;\n//     return false;\n//   })\n//   .catch((error) => {\n//     Alert.alert(error.message);\n//     console.log('invites error', error);\n//   });\n// }\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as adminActions from 'modules/admin/admin.actions';\nimport ShadowButton from 'modules/ui/web/ShadowButton';\nimport InfScroll from 'modules/listview/web/infScroll.component';\n\nif (process.env.BROWSER === true) {\n  require('./admin.css');\n}\n\nconst PAGE_SIZE = 40;\n\nclass Invites extends Component {\n  static propTypes = {\n    admin: PropTypes.object,\n    actions: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.createInvite = this.createInvite.bind(this);\n    this.sendEmail = this.sendEmail.bind(this);\n    this.load = this.load.bind(this);\n    this.hasMore = true;\n    this.state = {\n      email: '',\n      name: '',\n      number: 1,\n      filter: null,\n      invitedBy: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  load(page) {\n    const l = this.props.admin.inviteList.length;\n    this.hasMore = (page - 1) * PAGE_SIZE <= l;\n\n    if (this.hasMore) {\n      this.props.actions.getInvites(l, PAGE_SIZE);\n    }\n  }\n\n  sendEmail(invite) {\n    if (invite.status) {\n      const c = window.confirm(\n        'We have already sent one email to this user, are you sure you would like to send another one?'\n      );\n      if (c) {\n        this.props.actions.sendInvitationEmail(invite._id);\n      }\n    } else {\n      this.props.actions.sendInvitationEmail(invite._id);\n    }\n  }\n\n  destroy(invite) {\n    const c = window.confirm('Are you sure you would like to delete this invite?');\n    if (c) this.props.actions.destroy(invite);\n  }\n\n  createInvite() {\n    const invite = {\n      email: this.state.email,\n      name: this.state.name,\n      number: this.state.number,\n      invitedByString: this.state.invitedBy\n    };\n    this.props.actions.createInvite(invite);\n    this.setState({ name: '', email: '', number: 1 });\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  renderInvite(inviteId) {\n    const invite = this.props.admin.invites[inviteId];\n    if (!invite) return null;\n    if (this.state.filter === 'original' && !invite.email) return null;\n    if (this.state.filter === 'registered' && invite.status !== 'registered') return null;\n    if (\n      this.state.filter === 'notregistered' &&\n      (invite.status === 'registered' || !invite.email)\n    ) {\n      return null;\n    }\n\n    return (\n      <div key={inviteId} className={'adminRow'}>\n        <span>{invite.invitedBy}</span>\n        <span>{invite.name}</span>\n        <span>{invite.email}</span>\n        <span>{invite.code}</span>\n        <span>{invite.status}</span>\n        <span style={{ width: '40px' }}>{invite.number}</span>\n        <button onClick={() => this.sendEmail(invite)}>Resend Email</button>\n        <button className={'alert'} onClick={() => this.destroy(invite)}>\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    const createInvite = (\n      <div className=\"adminInner\">\n        <input\n          className={'blueInput'}\n          type={'text'}\n          name={'invitedBy'}\n          placeholder={'invited by'}\n          value={this.state.invitedBy}\n          onChange={this.handleChange}\n        />\n        <input\n          className={'blueInput'}\n          type={'email'}\n          name={'email'}\n          placeholder={'user email'}\n          value={this.state.email}\n          onChange={this.handleChange}\n        />\n        <input\n          className={'blueInput'}\n          type={'text'}\n          name={'name'}\n          placeholder={'user name'}\n          value={this.state.name}\n          onChange={this.handleChange}\n        />\n        <input\n          className={'blueInput'}\n          style={{ width: '40px', textAlign: 'right' }}\n          type={'text'}\n          name={'number'}\n          placeholder={'number of invites'}\n          value={this.state.number}\n          onChange={this.handleChange}\n        />\n        <ShadowButton\n          backgroundColor={'white'}\n          color={'#3E3EFF'}\n          onClick={this.createInvite}\n        >\n          {this.state.email ? 'Send Invite Email' : 'Create Invite Code'}\n        </ShadowButton>\n      </div>\n    );\n\n    const invites = this.props.admin.inviteList\n      ? this.props.admin.inviteList.map(id => this.renderInvite(id))\n      : null;\n\n    return (\n      <div className=\"adminContainer\">\n        <h2>Manage Invites</h2>\n        {createInvite}\n\n        <div className={'filter'}>\n          <span onClick={() => this.setState({ filter: null })}>all</span>\n          <span onClick={() => this.setState({ filter: 'original' })}>original</span>\n          <span onClick={() => this.setState({ filter: 'registered' })}>registered</span>\n          <span onClick={() => this.setState({ filter: 'notregistered' })}>\n            notregistered\n          </span>\n        </div>\n\n        <div key={'inviteId'} className={'titleRow'}>\n          <span>Invited by</span>\n          <span>Name</span>\n          <span>Email</span>\n          <span>Invite Code</span>\n          <span>Status</span>\n          <span style={{ width: '40px' }}>Number</span>\n          <span style={{ maxWidth: 130 }} />\n        </div>\n\n        <InfScroll\n          className={'adminContainer'}\n          data={this.props.admin.inviteList}\n          loadMore={this.load}\n          hasMore={this.hasMore}\n        >\n          {invites}\n        </InfScroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    admin: state.admin\n  }),\n  dispatch => ({\n    actions: bindActionCreators(adminActions, dispatch)\n  })\n)(Invites);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InfScroll extends Component {\n  static propTypes = {\n    data: PropTypes.array\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.scrollListener = this.scrollListener.bind(this);\n    this.attachScrollListener = this.attachScrollListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.pageLoaded = this.props.pageStart;\n    this.attachScrollListener();\n    this.data = this.props.data;\n    if (!this.data || !this.data.length) {\n      this.props.loadMore(this.pageLoaded);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.data.length !== this.props.data.length) {\n      this.attachScrollListener();\n      this.data = this.props.data;\n    }\n    if (!this.props.data.length < this.data.length) {\n      this.pageLoaded = this.props.pageStart;\n    }\n  }\n\n  componentWillUnmount() {\n    this.detachScrollListener();\n  }\n\n  // Set a defaut loader for all your `InfiniteScroll` components\n  setDefaultLoader(loader) {\n    this.defaultLoader = loader;\n  }\n\n  detachScrollListener() {\n    let scrollEl = window;\n    if (this.props.useWindow === false) {\n      scrollEl = this.scrollComponent.parentNode;\n    }\n\n    scrollEl.removeEventListener('scroll', this.scrollListener, this.props.useCapture);\n    scrollEl.removeEventListener('resize', this.scrollListener, this.props.useCapture);\n  }\n\n  attachScrollListener() {\n    if (!this.props.hasMore) {\n      return;\n    }\n\n    let scrollEl = window;\n    if (this.props.useWindow === false) {\n      scrollEl = this.scrollComponent.parentNode;\n    }\n\n    scrollEl.addEventListener('scroll', this.scrollListener, this.props.useCapture);\n    scrollEl.addEventListener('resize', this.scrollListener, this.props.useCapture);\n\n    if (this.props.initialLoad) {\n      this.scrollListener();\n    }\n  }\n\n  scrollListener() {\n    if (!this.props.data || !this.props.data.length) return;\n    const el = this.scrollComponent;\n    const scrollEl = window;\n\n    let offset;\n    if (this.props.useWindow) {\n      const scrollTop =\n        scrollEl.pageYOffset !== undefined\n          ? scrollEl.pageYOffset\n          : (document.documentElement || document.body.parentNode || document.body)\n              .scrollTop;\n      if (this.props.isReverse) {\n        offset = scrollTop;\n      } else {\n        offset =\n          this.calculateTopPosition(el) +\n          (el.offsetHeight - scrollTop - window.innerHeight);\n      }\n    } else if (this.props.isReverse) {\n      offset = el.parentNode.scrollTop;\n    } else {\n      offset = el.scrollHeight - el.parentNode.scrollTop - el.parentNode.clientHeight;\n    }\n\n    if (offset < Number(this.props.threshold)) {\n      this.detachScrollListener();\n      // Call loadMore after detachScrollListener to allow for non-async loadMore functions\n      if (typeof this.props.loadMore === 'function') {\n        this.props.loadMore((this.pageLoaded += 1));\n      }\n    }\n  }\n\n  calculateTopPosition(el) {\n    if (!el) {\n      return 0;\n    }\n    return el.offsetTop + this.calculateTopPosition(el.offsetParent);\n  }\n\n  render() {\n    const {\n      children,\n      element,\n      hasMore,\n      initialLoad,\n      isReverse,\n      loader,\n      loadMore,\n      pageStart,\n      threshold,\n      useCapture,\n      useWindow,\n      data,\n      ...props\n    } = this.props;\n\n    props.ref = node => {\n      this.scrollComponent = node;\n    };\n\n    // This breaks activity ref above!\n    // TODO: get loading to work\n    // if (!data) {\n    //   return <div>...Loading</div>;\n    // }\n    // if (!data.length) {\n    //   return <div>Nothing here</div>;\n    // }\n\n    return React.createElement(\n      element,\n      props,\n      children,\n      hasMore && (loader || this.defaultLoader)\n    );\n  }\n}\n\nInfScroll.propTypes = {\n  element: PropTypes.string,\n  hasMore: PropTypes.bool,\n  initialLoad: PropTypes.bool,\n  isReverse: PropTypes.bool,\n  loadMore: PropTypes.func.isRequired,\n  pageStart: PropTypes.number,\n  threshold: PropTypes.number,\n  useCapture: PropTypes.bool,\n  useWindow: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]).isRequired,\n  loader: PropTypes.object\n};\n\nInfScroll.defaultProps = {\n  element: 'div',\n  hasMore: false,\n  initialLoad: true,\n  pageStart: 0,\n  threshold: 250, // footer height?\n  useWindow: true,\n  isReverse: false,\n  useCapture: false,\n  loader: null\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ShadowButton(props) {\n  return (\n    <button\n      className=\"shadowButton\"\n      onClick={() => (props.onClick ? props.onClick() : null)}\n      style={{\n        ...props.style\n      }}\n    >\n      <span>{props.children}</span>\n    </button>\n  );\n}\n\nShadowButton.propTypes = {\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\n"],"sourceRoot":""}