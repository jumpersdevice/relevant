{"version":3,"sources":["webpack:///./src/modules/admin/web/communityAdminList.component.js","webpack:///./src/modules/styled/web.js"],"names":["CommunityAdminList","communities","this","props","community","m","fdirection","Object","values","map","c","mt","key","slug","to","name","ml","Component","PropTypes","object","withRouter","connect","state","routing","dispatch","actions","bindActionCreators","communityActions","StyledNavLink","styled","NavLink","fonts","header","colors","grey","black","mixins","font","display","color","margin","View","div","padding","flex","background","border","width","height","p","onClick","Text","span","InlineText","Image","img","borderRadius","Divider","layout","universalBorder","Title","title","LinkFont","link","SecondaryText","secondaryText","BodyText","altLink","commentText","bodyStyle","Button","button","buttonFont","disabled","white","activeButtonShadow","NumericalValue","numericalValue","inheritfont","InputPlain","input","sizing","blue","Input","StyledTextareaAutocomplete","ReactTextareaAutocomplete","StyledTextarea","TextareaAutosize","Form","form","Video","video"],"mappings":"m+DASMA,E,qIAMK,IAEQC,EACXC,KAAKC,MADPC,UAAaH,YAEf,OACE,kBAAC,IAAD,CAAMI,EAAG,EAAGC,WAAW,UACpBC,OAAOC,OAAOP,GAAaQ,KAAI,SAAAC,GAAC,OAC/B,kBAAC,IAAD,CAAMC,GAAI,EAAGC,IAAKF,EAAEG,MAClB,kBAAC,IAAD,CAAOC,GAAE,2BAAsBJ,EAAEG,OAASH,EAAEK,UAGhD,kBAAC,IAAD,CAAMJ,GAAI,GACR,kBAAC,IAAD,CAAOG,GAAG,uBAAuBT,EAAG,GAClC,kBAAC,IAAD,CAAQS,GAAG,uBAAuBE,GAAI,GAAtC,qB,GAnBqBC,a,IAA3BjB,E,YACe,CAEjBI,UAAWc,IAAUC,SAwCVC,sBACbC,aAfsB,SAAAC,GAAK,MAAK,CAChCC,QAASD,EAAMC,QACfnB,UAAWkB,EAAMlB,cAGQ,SAAAoB,GAAQ,MAAK,CACtCC,QAASC,6BAAmB,EAAD,GAEpBC,GAELH,MAKFH,CAA6CrB,K,2DCrD/C,i+BAMa4B,EAAgBC,kBAAOC,KAAV,qEAAGD,CAAH,wEACtBE,IAAMC,OACCC,IAAOC,KAELD,IAAOE,MAGPF,IAAOE,MAEhBC,IAAOC,KACPD,IAAOE,QACPF,IAAOG,MACPH,IAAOI,QAGEC,EAAOZ,UAAOa,IAAV,4DAAGb,CAAH,wCACbO,IAAOI,OACPJ,IAAOO,QACPP,IAAOQ,KACPR,IAAOC,KACPD,IAAOS,WACPT,IAAOU,OACPV,IAAOW,MACPX,IAAOY,QACP,SAAAC,GAAC,OAAKA,EAAEC,QAAU,mBAAqB,MAG9BC,EAAOtB,UAAOuB,KAAV,4DAAGvB,CAAH,oCACbO,IAAOI,OACPJ,IAAOO,QACPP,IAAOQ,KACPR,IAAOC,KACPD,IAAOS,WACPT,IAAOU,OACPV,IAAOG,OACP,SAAAU,GAAC,OAAKA,EAAEC,QAAU,mBAAqB,MAG9BG,EAAaxB,UAAOuB,KAAV,kEAAGvB,CAAH,4BACnBO,IAAOI,OACPJ,IAAOO,QACPP,IAAOC,KACPD,IAAOS,WACPT,IAAOU,OACPV,IAAOG,OAGEe,EAAQzB,UAAO0B,IAAV,6DAAG1B,CAAH,gCACdO,IAAOI,OACPJ,IAAOY,OACPZ,IAAOW,MACPX,IAAOO,QACPP,IAAOS,WACPT,IAAOoB,aACPpB,IAAOQ,MAWEa,GARe5B,UAAOuB,KAAV,oEAAGvB,CAAH,+DAIrBO,IAAOI,OACPJ,IAAOQ,MAGYf,UAAOa,IAAV,+DAAGb,CAAH,oBAChBO,IAAOI,OACPJ,IAAOO,QACPP,IAAOW,MACPW,IAAOC,gBAAgB,YAQdC,GALS/B,kBAAOsB,GAAV,8DAAGtB,CAAH,YACfE,IAAMC,OACNI,IAAOG,OAGUV,kBAAOsB,GAAV,6DAAGtB,CAAH,gBACdE,IAAM8B,MACNzB,IAAOG,MACPH,IAAOC,OAGEyB,EAAWjC,kBAAOsB,GAAV,gEAAGtB,CAAH,gBACjBE,IAAMgC,KACN3B,IAAOG,MACPH,IAAOC,MAGE2B,EAAgBnC,kBAAOsB,GAAV,sEAAGtB,CAAH,gBACtBE,IAAMkC,cACN7B,IAAOC,KACPD,IAAOG,OAeE2B,GAZUrC,kBAAOsB,GAAV,gEAAGtB,CAAH,gBAChBE,IAAMoC,QACN/B,IAAOG,MACPH,IAAOC,MAGgBR,kBAAOsB,GAAV,oEAAGtB,CAAH,gBACpBE,IAAMqC,YACNhC,IAAOG,MACPH,IAAOC,MAGaR,kBAAOsB,GAAV,iEAAGtB,CAAH,gBACjBE,IAAMsC,UACNjC,IAAOG,MACPH,IAAOC,OAGEiC,EAASzC,UAAO0C,OAAV,+DAAG1C,CAAH,8FACf6B,IAAOa,OACPb,IAAOc,YACP,SAAAvB,GAAC,OACDA,EAAEwB,SAAF,uBAESxC,IAAOyC,MAFhB,8BAGczC,IAAOC,KAHrB,WAKI,KACJE,IAAOQ,KACPR,IAAOS,WACPT,IAAOO,QACPP,IAAOW,MACPX,IAAOI,OACPJ,IAAOG,MACPH,IAAOW,MACPX,IAAOY,OAELU,IAAOiB,oBAKAC,EAAiB/C,kBAAOsB,GAAV,uEAAGtB,CAAH,wBACvBE,IAAM8C,eACNzC,IAAOW,MACPX,IAAOC,KACPD,IAAO0C,YACP1C,IAAOG,OAGEwC,EAAalD,UAAOmD,MAAV,mEAAGnD,CAAH,0GACnBO,IAAOC,KACPD,IAAOQ,KACPR,IAAOU,OACPV,IAAOO,QACPP,IAAOI,OAEMyC,YAAO,MACLA,YAAO,MAIpBvB,IAAOC,gBAAgB,GAAI1B,IAAOiD,OAI3BC,EAAQtD,UAAOmD,MAAV,8DAAGnD,CAAH,iJACLoD,YAAO,GAAMA,YAAO,GACjBA,YAAO,GAAQlD,IAAMsC,UACjCjC,IAAOC,KACPD,IAAOQ,KACPR,IAAOU,OACPY,IAAOC,kBACPvB,IAAOO,QACPP,IAAOI,OAEMyC,YAAO,MACLA,YAAO,MAIpBvB,IAAOC,gBAAgB,GAAI1B,IAAOiD,OAI3BE,EAA6BvD,kBAAOwD,KAAV,mFAAGxD,CAAH,2FACnCE,IAAMsC,UACNjC,IAAOU,OACPV,IAAOQ,KACPc,IAAOC,kBACEsB,YAAO,GAAMA,YAAO,GAGRhD,IAAOiD,KAE5B9C,IAAOO,QACPP,IAAOI,OACPJ,IAAOY,QAGEsC,EAAiBzD,kBAAO0D,KAAV,uEAAG1D,CAAH,2FACvBE,IAAMsC,UACNjC,IAAOU,OACPV,IAAOQ,KACPc,IAAOC,kBACEsB,YAAO,GAAMA,YAAO,GAGRhD,IAAOiD,KAE5B9C,IAAOO,QACPP,IAAOI,OACPJ,IAAOY,QAGEwC,EAAO3D,UAAO4D,KAAV,6DAAG5D,CAAH,YACbO,IAAOQ,KACPR,IAAOI,QAGEkD,EAAQ7D,UAAO8D,MAAV,8DAAG9D,CAAH,gCACdO,IAAOI,OACPJ,IAAOY,OACPZ,IAAOW,MACPX,IAAOO,QACPP,IAAOS,WACPT,IAAOoB,aACPpB,IAAOQ","file":"admin-web-communityAdminList-component.bundle.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as communityActions from 'modules/community/community.actions';\nimport ULink from 'modules/navigation/ULink.component';\nimport { Button, View } from 'modules/styled/web';\n\nclass CommunityAdminList extends Component {\n  static propTypes = {\n    // actions: PropTypes.object,\n    community: PropTypes.object\n  };\n\n  render() {\n    const {\n      community: { communities }\n    } = this.props;\n    return (\n      <View m={4} fdirection=\"column\">\n        {Object.values(communities).map(c => (\n          <View mt={2} key={c.slug}>\n            <ULink to={`/admin/community/${c.slug}`}>{c.name}</ULink>\n          </View>\n        ))}\n        <View mt={2}>\n          <ULink to=\"/admin/community/new\" m={0}>\n            <Button to=\"/admin/community/new\" ml={0}>\n              Create New\n            </Button>\n          </ULink>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  routing: state.routing,\n  community: state.community\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...communityActions\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CommunityAdminList)\n);\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { mixins, layout, fonts, colors, sizing } from 'app/styles';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport ReactTextareaAutocomplete from '@webscopeio/react-textarea-autocomplete';\n\nexport const StyledNavLink = styled(NavLink)`\n  ${fonts.header};\n  color: ${colors.grey};\n  &.active {\n    color: ${colors.black};\n  }\n  :hover {\n    color: ${colors.black};\n  }\n  ${mixins.font}\n  ${mixins.display}\n  ${mixins.color}\n  ${mixins.margin}\n`;\n\nexport const View = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.width}\n  ${mixins.height}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const Text = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const InlineText = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n`;\n\nexport const Image = styled.img`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n\nexport const ImageWrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${mixins.margin}\n  ${mixins.flex}\n`;\n\nexport const Divider = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.width}\n  ${layout.universalBorder('bottom')}\n`;\n\nexport const Header = styled(Text)`\n  ${fonts.header}\n  ${mixins.color}\n`;\n\nexport const Title = styled(Text)`\n  ${fonts.title}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const LinkFont = styled(Text)`\n  ${fonts.link}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const SecondaryText = styled(Text)`\n  ${fonts.secondaryText}\n  ${mixins.font}\n  ${mixins.color}\n`;\n\nexport const AltLink = styled(Text)`\n  ${fonts.altLink}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const CommentText = styled(Text)`\n  ${fonts.commentText}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const BodyText = styled(Text)`\n  ${fonts.bodyStyle}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const Button = styled.button`\n  ${layout.button}\n  ${layout.buttonFont}\n  ${p =>\n    p.disabled\n      ? `\n    color: ${colors.white};\n    background: ${colors.grey};\n    `\n      : ''};\n  ${mixins.flex}\n  ${mixins.background}\n  ${mixins.padding}\n  ${mixins.width}\n  ${mixins.margin}\n  ${mixins.color}\n  ${mixins.width}\n  ${mixins.height}\n  &:hover {\n    ${layout.activeButtonShadow}\n  };\n  user-select: none; cursor: pointer;\n`;\n\nexport const NumericalValue = styled(Text)`\n  ${fonts.numericalValue}\n  ${mixins.width}\n  ${mixins.font}\n  ${mixins.inheritfont}\n  ${mixins.color}\n`;\n\nexport const InputPlain = styled.input`\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const Input = styled.input`\n  padding: ${sizing(2)} ${sizing(2)};\n  margin-top: ${sizing(1)};  ${fonts.bodyStyle}\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${layout.universalBorder()}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const StyledTextareaAutocomplete = styled(ReactTextareaAutocomplete)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const StyledTextarea = styled(TextareaAutosize)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const Form = styled.form`\n  ${mixins.flex}\n  ${mixins.margin}\n`;\n\nexport const Video = styled.video`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n"],"sourceRoot":""}