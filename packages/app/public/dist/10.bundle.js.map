{"version":3,"sources":["webpack:////Users/slavab/local/relevant/node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","webpack:////Users/slavab/local/relevant/node_modules/graphql-tag/src/index.js","webpack:////Users/slavab/local/relevant/node_modules/graphql/jsutils/devAssert.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/jsutils/isObjectLike.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/polyfills/symbols.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/location.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/printLocation.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/error/GraphQLError.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/error/syntaxError.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/source.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/directiveLocation.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/tokenKind.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/lexer.mjs","webpack:////Users/slavab/local/relevant/node_modules/graphql/language/parser.mjs"],"names":["OperationData","options","context","this","isMounted","previousOptions","prototype","getOptions","setOptions","newOptions","storePrevious","unmount","refreshClient","client","isNew","cleanup","verifyDocumentType","document","type","operation","QueryData","_super","_a","onNewData","_this","call","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","result","getQueryResult","startQuerySubscription","obsRefetch","variables","query","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","executeLazy","loading","networkStatus","ready","called","data","undefined","fetchData","ssr","obs","getCurrentResult","afterExecute","_b","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","ssrInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","obsQuery","subscribe","next","previousResult","error","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","Object","assign","observableQueryFields","currentResult","partial","errors","length","graphQLErrors","partialRefetch","onCompleted","onError","unsubscribe","useBaseQuery","x","tick","forceUpdate","updatedOptions","isRendering","isRenderScheduled","queryDataRef","queryData","current","memoFn","key","ref","memo","value","queryResult","useQuery","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","useMutation","mutationDataRef","mutationData","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","useSubscription","subscriptionDataRef","useApolloClient","useContext","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","push","clear","all","varMap","get","has","variablesString","JSON","stringify","info","parse","normalize","string","replace","trim","docCache","fragmentSourceMap","printFragmentWarnings","experimentalFragmentVariables","parseDocument","doc","cacheKey","parsed","kind","Error","stripLoc","removeLocAtThisLevel","docType","toString","map","d","loc","startToken","endToken","valueType","ast","astFragmentMap","definitions","i","fragmentDefinition","fragmentName","name","sourceKey","source","body","substring","start","end","console","warn","processFragments","gql","args","Array","slice","arguments","literals","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables","module","exports","devAssert","condition","message","Boolean","_typeof","obj","Symbol","iterator","constructor","asyncIterator","SYMBOL_TO_STRING_TAG","toStringTag","getLocation","position","match","lineRegexp","line","column","exec","index","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","concat","lines","split","locationLine","subLineIndex","Math","floor","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","prefix","join","len","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","_cache","fn","Function","indexOf","TypeError","Wrapper","_construct","_getPrototypeOf","create","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","a","instance","sham","Proxy","Date","e","o","p","setPrototypeOf","__proto__","getPrototypeOf","_Error","subClass","superClass","_inherits","GraphQLError","Derived","hasNativeReflectConstruct","Constructor","protoProps","staticProps","Super","NewTarget","nodes","positions","path","originalError","extensions","_locations2","_source2","_positions2","_extensions2","_classCallCheck","_nodes$0$loc","_nodes","isArray","_source","_locations","_positions","reduce","list","node","pos","_extensions","originalExtensions","defineProperties","locations","stack","captureStackTrace","output","_i2","_error$nodes2","_i4","_error$locations2","printError","syntaxError","description","Source","DirectiveLocation","freeze","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","Lexer","startOfFileToken","lastToken","token","lineStart","_proto","advance","lookahead","_token$next","readToken","printCharCode","code","isNaN","String","fromCharCode","toUpperCase","lexer","prev","bodyLength","startPosition","charCodeAt","positionAfterWhitespace","col","readComment","readName","firstCode","isFloat","readDigits","isNameStart","readNumber","chunkStart","rawValue","readBlockString","charCode","b","c","char2hex","invalidSequence","readString","unexpectedCharacterMessage","parseValue","parser","expectToken","parseValueLiteral","parseType","parseTypeReference","Parser","sourceObj","inspect","_lexer","_options","parseName","DOCUMENT","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","LIST","values","any","_this2","fields","parseObjectField","OBJECT_FIELD","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","types","_this$_options2","allowLegacySDLImplementsInterfaces","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","_this$_options4","noLocation","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","isPunctuatorTokenKind"],"mappings":"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","file":"10.bundle.js","sourcesContent":["import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\n\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, onNewData = _a.onNewData;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.onNewData();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.onNewData = onNewData;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined\n                }\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _this = this;\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n            setTimeout(function () {\n                _this.currentObservable.query &&\n                    _this.currentObservable.query.resetQueryStoreErrors();\n            });\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.ssrInitiated = function () {\n        return this.context && this.context.renderPromises;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = {\n            loading: true,\n            networkStatus: NetworkStatus.loading,\n            called: true,\n            data: undefined\n        };\n        if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n            return ssrLoading;\n        }\n        var result;\n        if (this.ssrInitiated()) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.ssrInitiated() &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        var _a, _b;\n        if (this.ssrInitiated()) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.ssrInitiated()) {\n                (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.renderPromises) === null || _b === void 0 ? void 0 : _b.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                _this.onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.onNewData();\n                }\n            }\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new ApolloError({ graphQLErrors: errors });\n            }\n            result = __assign(__assign({}, result), { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? __assign(__assign({}, previousData), data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: NetworkStatus.loading\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery)\n            return;\n        var _a = obsQuery.getCurrentResult(), data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore\n        };\n    };\n    return QueryData;\n}(OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var isRendering = useRef(true);\n    var isRenderScheduled = useRef(false);\n    var queryDataRef = useRef();\n    var queryData = queryDataRef.current ||\n        new QueryData({\n            options: updatedOptions,\n            context: context,\n            onNewData: function () {\n                if (!queryData.ssrInitiated() && isRendering.current) {\n                    isRenderScheduled.current = true;\n                }\n                else {\n                    forceUpdate();\n                }\n            }\n        });\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    if (queryData.ssrInitiated() && !queryDataRef.current) {\n        queryDataRef.current = queryData;\n    }\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () {\n        if (!queryDataRef.current) {\n            queryDataRef.current = queryData;\n        }\n        isRendering.current = false;\n        if (isRenderScheduled.current) {\n            isRenderScheduled.current = false;\n            forceUpdate();\n        }\n    });\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data\n    ]);\n    useEffect(function () {\n        return function () { return queryData.cleanup(); };\n    }, []);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar SubscriptionData = (function (_super) {\n    __extends(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !equal(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return __assign(__assign({}, currentResult), { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign(__assign({}, options), { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };\n//# sourceMappingURL=react-hooks.esm.js.map\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = // $FlowFixMe Flow doesn't define `Symbol.asyncIterator` yet\ntypeof Symbol === 'function' ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = // $FlowFixMe Flow doesn't define `Symbol.toStringTag` yet\ntypeof Symbol === 'function' ? Symbol.toStringTag : '@@toStringTag';\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError === null || originalError === void 0 ? void 0 : originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Token(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Token(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Token(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Token(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Token(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Token(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Token(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Token(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Token(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Token(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Token(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Token(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Token(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Token(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Source } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\nimport { Location } from \"./ast.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj), \".\"));\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        var _this$_options2;\n\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging\n */\n\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n"],"sourceRoot":""}