{"version":3,"sources":["webpack:///./src/modules/auth/form.fields.js","webpack:///./src/modules/auth/web/profile.form.js","webpack:///./src/modules/form/validators.js","webpack:///./src/modules/styled/form/reduxformfield.component.js","webpack:///./src/modules/ui/web/imageUpload.component.js","webpack:///./src/modules/styled/form/reduxformimageupload.component.js","webpack:///./src/modules/styled/web.js"],"names":["image","name","component","ReduxFormImageUpload","placeholder","imageComponent","type","label","username","ReduxFormField","autocomplete","validate","compose","required","validCharacters","asyncUsername","email","validEmail","asyncEmail","password","confirmPassword","Alert","alert","ProfileForm","initialValues","additionalFields","close","ethLogin","onSubmit","signup","useCallback","vals","a","allVals","preview","fileName","s3","toS3Advanced","img","url","message","useOnSubmit","signupCallback","auth","useSelector","state","dispatch","useDispatch","invitecode","data","user","createUser","useSignUp","showEmailField","showPass","FORM_FIELDS","filter","f","passwordsShouldMatch","render","handleSubmit","fdirection","map","field","key","display","justify","mt","align","inline","to","external","target","ml","propTypes","PropTypes","object","func","value","undefined","test","NAME_PATTERN","checkUser","signupAsyncValidation","values","errors","error","handle","Object","keys","length","validators","reduce","validator","props","input","meta","dirty","touched","warning","html-for","c","colors","black","autoComplete","border","p","red","string","oneOfType","node","defaultProps","ImageUpload","file","this","fileInput","files","loadImage","then","dataURL","extension","split","substr","lastIndexOf","setState","onChange","catch","e","upload","React","cloneElement","source","uri","src","style","maxWidth","previewImage","renderPreview","mr","ref","processImage","bind","accept","Component","StyledNavLink","styled","NavLink","fonts","header","grey","mixins","font","color","margin","View","div","padding","flex","background","width","height","onClick","Text","span","InlineText","Image","borderRadius","Divider","layout","universalBorder","Title","title","LinkFont","link","SecondaryText","secondaryText","BodyText","altLink","commentText","bodyStyle","Button","button","buttonFont","disabled","white","activeButtonShadow","NumericalValue","numericalValue","inheritfont","InputPlain","sizing","blue","Input","StyledTextareaAutocomplete","ReactTextareaAutocomplete","StyledTextarea","TextareaAutosize","Form","form","Video","video"],"mappings":"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","file":"auth-web-profile-form.bundle.js","sourcesContent":["import ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport ReduxFormImageUpload from 'modules/styled/form/reduxformimageupload.component';\nimport {\n  required,\n  email as validEmail,\n  validCharacters,\n  compose,\n  asyncUsername,\n  asyncEmail\n} from 'modules/form/validators';\nimport { FormImage } from 'modules/styled/uni';\n\n// Please note, this only works if the field is called 'image'\nexport const image = {\n  name: 'image',\n  component: ReduxFormImageUpload,\n  placeholder: '/img/blueR.png',\n  imageComponent: <FormImage />,\n  type: 'file-upload',\n  label: 'User Image'\n};\nexport const username = {\n  name: 'username',\n  component: ReduxFormField,\n  type: 'text',\n  label: 'Username',\n  autocomplete: 'username',\n  validate: compose(required, validCharacters, asyncUsername)\n};\nexport const email = {\n  name: 'email',\n  type: 'email',\n  label: 'Email',\n  component: ReduxFormField,\n  autocomplete: 'username',\n  validate: compose(required, validEmail, asyncEmail)\n};\nexport const password = {\n  name: 'password',\n  type: 'password',\n  label: 'Password',\n  autocomplete: 'new-password',\n  component: ReduxFormField,\n  validate: required\n};\nexport const confirmPassword = {\n  name: 'confirmPassword',\n  type: 'password',\n  autocomplete: 'new-password',\n  label: 'Confirm Password',\n  component: ReduxFormField,\n  validate: required\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkFont } from 'modules/styled/uni';\nimport ULink from 'modules/navigation/ULink.component';\nimport { s3, alert } from 'app/utils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createUser } from 'modules/auth/auth.actions';\nimport { Form, Field } from 'react-final-form';\nimport { Form as StyledForm, View, Button } from 'modules/styled/web';\nimport {\n  image,\n  email,\n  username,\n  password,\n  confirmPassword\n} from 'modules/auth/form.fields';\nimport { passwordsShouldMatch } from 'modules/form/validators';\n\nconst Alert = alert.Alert();\n\nProfileForm.propTypes = {\n  initialValues: PropTypes.object,\n  additionalFields: PropTypes.object,\n  close: PropTypes.func\n};\n\nexport default function ProfileForm({\n  initialValues = {},\n  additionalFields = {},\n  close\n}) {\n  const { ethLogin, signupCallback } = additionalFields;\n  const signup = useSignUp(additionalFields, close, signupCallback);\n  const onSubmit = useOnSubmit(signup);\n\n  const showEmailField = initialValues.email ? null : email;\n  const showPass = ethLogin ? null : password;\n  const showConfirmPass = showPass ? confirmPassword : null;\n\n  const FORM_FIELDS = [image, username, showEmailField, showPass, showConfirmPass].filter(\n    f => f\n  );\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      validate={passwordsShouldMatch}\n      initialValues={initialValues}\n      render={({ handleSubmit }) => (\n        <StyledForm fdirection=\"column\" onSubmit={handleSubmit}>\n          {FORM_FIELDS.map(field => (\n            <Field {...field} key={field.name} />\n          ))}\n          <View display=\"flex\" fdirection=\"row\" justify=\"flex-end\" mt={6} align=\"center\">\n            <LinkFont inline={1}>\n              By signing up, you agree to our{' '}\n              <ULink\n                to=\"//relevant.community/eula.html\"\n                external\n                target=\"_blank\"\n                inline={1}\n              >\n                Terms of Use\n              </ULink>\n            </LinkFont>\n            <Button type=\"submit\" ml={2.5}>\n              Sign Up\n            </Button>\n          </View>\n        </StyledForm>\n      )}\n    />\n  );\n}\n\nfunction useOnSubmit(signup) {\n  return useCallback(\n    async vals => {\n      try {\n        const allVals = { ...vals };\n        if (allVals.image && allVals.image.preview && allVals.image.fileName) {\n          const img = await s3.toS3Advanced(\n            allVals.image.preview,\n            allVals.image.fileName\n          );\n          allVals.image = img.url;\n        }\n        signup(allVals);\n      } catch (err) {\n        Alert.alert(err.message, 'error');\n      }\n    },\n    [signup]\n  );\n}\n\nfunction useSignUp(additionalFields, close, signupCallback) {\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const { invitecode } = auth;\n\n  return useCallback(\n    async data => {\n      try {\n        const user = {\n          name: data.username,\n          email: data.email,\n          password: data.password,\n          image: data.image,\n          ...additionalFields\n        };\n        await dispatch(createUser(user, invitecode));\n        signupCallback && signupCallback(user);\n        close();\n      } catch (err) {\n        Alert.alert(err.message, 'error');\n      }\n    },\n    [additionalFields, dispatch, invitecode, close, signupCallback]\n  );\n}\n","import { NAME_PATTERN } from 'app/utils/text';\nimport { checkUser } from 'modules/auth/auth.actions';\n\nexport const required = value =>\n  value || typeof value === 'number' ? undefined : 'Required';\n\nexport const email = value => {\n  if (!value) {\n    return undefined;\n  }\n  const valid = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,15}$/i.test(value);\n  if (valid) {\n    return undefined;\n  }\n  return 'Not a valid e-mail';\n};\n\nexport const validCharacters = value => {\n  const match = NAME_PATTERN.test(value);\n  if (!match) {\n    return 'Can only contain letters, \\nnumbers, dashes and underscores';\n  }\n  return undefined;\n};\n\nexport const asyncEmail = async value => {\n  const results = await checkUser(value, 'email', true)();\n  if (results) {\n    return 'This email has already been used';\n  }\n  return undefined;\n};\n\nexport const asyncUsername = async value => {\n  if (value) {\n    const results = await checkUser(value, 'name', true)();\n    // TODO: no error if username is own username\n    if (results) {\n      return 'This username is already taken';\n    }\n  }\n  return undefined;\n};\n\nexport const signupAsyncValidation = async values => {\n  // console.log('props  ', props  );\n  const errors = {};\n  if (values.username) {\n    const error = await asyncUsername(values.username);\n    if (error) {\n      errors.username = error;\n    }\n  }\n  if (values.email) {\n    const error = await asyncEmail(values.email);\n    if (error) {\n      errors.email = error;\n    }\n  }\n  if (values.handle) {\n    const error = await asyncUsername(values.handle);\n    if (error) {\n      errors.handle = error;\n    }\n  }\n  if (Object.keys(errors).length) {\n    throw errors;\n  }\n};\n\nexport const passwordsShouldMatch = values => {\n  const errors = {};\n  if (!values.password || !values.confirmPassword) {\n    return null;\n  }\n  if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  return errors;\n};\n\nexport const compose = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, Input } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <Input\n        {...input}\n        placeholder={placeholder || label}\n        autoComplete={autocomplete}\n        name={name}\n        type={type}\n        border={1}\n        p=\"2 2\"\n        mt={1}\n      />\n      {(dirty || touched) &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nReduxFormField.defaultProps = {\n  autocomplete: null\n};\n\nexport default ReduxFormField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { img, s3, alert } from 'app/utils';\nimport { View } from 'modules/styled/uni';\n\nconst Alert = alert.Alert();\n\nexport default class ImageUpload extends Component {\n  static propTypes = {\n    placeholder: PropTypes.string,\n    imageComponent: PropTypes.node,\n    onChange: PropTypes.func\n  };\n\n  state = {\n    preview: null,\n    fileName: null\n  };\n\n  processImage() {\n    const file = this.fileInput.files[0];\n    img\n      .loadImage(file)\n      .then(dataURL => {\n        const extension = dataURL\n          .split(',')[0]\n          .split('/')[1]\n          .split(';')[0];\n        const name = file.name.substr(0, extension.lastIndexOf('.')) + '.' + extension;\n        this.setState({ preview: dataURL, fileName: name });\n        this.props.onChange({ preview: dataURL, fileName: name });\n      })\n      .catch(e => {\n        Alert.alert('Error uploading image ' + e);\n      });\n  }\n\n  async uploadImage() {\n    if (!this.state.fileName || !this.state.preview) {\n      Alert('Please select an image');\n      return null;\n    }\n    const upload = await s3.toS3Advanced(this.state.preview, this.state.fileName);\n    this.setState({ preview: null, fileName: null });\n    this.props.onChange(upload);\n    return upload;\n  }\n\n  renderPreview() {\n    const { placeholder, imageComponent } = this.props;\n    const { preview } = this.state;\n    if (!preview && placeholder) {\n      return React.cloneElement(imageComponent, { source: { uri: placeholder } });\n    }\n    if (preview && imageComponent) {\n      return React.cloneElement(imageComponent, { source: { uri: preview } });\n    }\n    if (preview) {\n      return <img src={preview} style={{ maxWidth: '300px' }} />;\n    }\n    return null;\n  }\n\n  render() {\n    const previewImage = this.renderPreview();\n\n    return (\n      <View display=\"flex\" fdirection=\"row\" align=\"center\">\n        <View mr={2}>{previewImage}</View>\n        <input\n          ref={c => (this.fileInput = c)}\n          onChange={this.processImage.bind(this)}\n          accept={'image/*'}\n          name={'img'}\n          type={'file'}\n        />\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageUpload from 'modules/ui/web/imageUpload.component';\nimport { View, LinkFont, SecondaryText } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, meta, name, placeholder, imageComponent } = props;\n  const {\n    input: { onChange, value }\n  } = props;\n  const { touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <ImageUpload\n        placeholder={value || placeholder}\n        imageComponent={imageComponent}\n        onChange={vals => {\n          onChange(vals);\n        }}\n      />\n\n      {touched &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  placeholder: PropTypes.node,\n  imageComponent: PropTypes.node\n};\n\nexport default ReduxFormField;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { mixins, layout, fonts, colors, sizing } from 'app/styles';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport ReactTextareaAutocomplete from '@webscopeio/react-textarea-autocomplete';\n\nexport const StyledNavLink = styled(NavLink)`\n  ${fonts.header};\n  color: ${colors.grey};\n  &.active {\n    color: ${colors.black};\n  }\n  :hover {\n    color: ${colors.black};\n  }\n  ${mixins.font}\n  ${mixins.display}\n  ${mixins.color}\n  ${mixins.margin}\n`;\n\nexport const View = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.width}\n  ${mixins.height}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const Text = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const InlineText = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n`;\n\nexport const Image = styled.img`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n\nexport const ImageWrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${mixins.margin}\n  ${mixins.flex}\n`;\n\nexport const Divider = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.width}\n  ${layout.universalBorder('bottom')}\n`;\n\nexport const Header = styled(Text)`\n  ${fonts.header}\n  ${mixins.color}\n`;\n\nexport const Title = styled(Text)`\n  ${fonts.title}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const LinkFont = styled(Text)`\n  ${fonts.link}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const SecondaryText = styled(Text)`\n  ${fonts.secondaryText}\n  ${mixins.font}\n  ${mixins.color}\n`;\n\nexport const AltLink = styled(Text)`\n  ${fonts.altLink}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const CommentText = styled(Text)`\n  ${fonts.commentText}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const BodyText = styled(Text)`\n  ${fonts.bodyStyle}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const Button = styled.button`\n  ${layout.button}\n  ${layout.buttonFont}\n  ${p =>\n    p.disabled\n      ? `\n    color: ${colors.white};\n    background: ${colors.grey};\n    `\n      : ''};\n  ${mixins.flex}\n  ${mixins.background}\n  ${mixins.padding}\n  ${mixins.width}\n  ${mixins.margin}\n  ${mixins.color}\n  ${mixins.width}\n  ${mixins.height}\n  &:hover {\n    ${layout.activeButtonShadow}\n  };\n  user-select: none; cursor: pointer;\n`;\n\nexport const NumericalValue = styled(Text)`\n  ${fonts.numericalValue}\n  ${mixins.width}\n  ${mixins.font}\n  ${mixins.inheritfont}\n  ${mixins.color}\n`;\n\nexport const InputPlain = styled.input`\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const Input = styled.input`\n  padding: ${sizing(2)} ${sizing(2)};\n  margin-top: ${sizing(1)};  ${fonts.bodyStyle}\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${layout.universalBorder()}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const StyledTextareaAutocomplete = styled(ReactTextareaAutocomplete)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const StyledTextarea = styled(TextareaAutosize)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const Form = styled.form`\n  ${mixins.flex}\n  ${mixins.margin}\n`;\n\nexport const Video = styled.video`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n"],"sourceRoot":""}