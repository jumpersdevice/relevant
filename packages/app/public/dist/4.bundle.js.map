{"version":3,"sources":["webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/_utils/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/computation/_utils.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/computation/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/computation/market.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/computation/trade.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/constants/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/data/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/format/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/orchestration/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/transact/index.js","webpack:////Users/slavab/local/relevant/node_modules/@uniswap/sdk/dist/types.js","webpack:////Users/slavab/local/relevant/node_modules/bignumber.js/bignumber.js","webpack:////Users/slavab/local/relevant/node_modules/lodash.clonedeepwith/index.js"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importDefault","mod","__esModule","defineProperty","exports","value","bignumber_js_1","ethers_1","constants_1","ensureUInt8","number","Number","isInteger","_MAX_UINT8","Error","ensureUInt256","bigNumber","isLessThan","_0","isGreaterThan","_MAX_UINT256","ensureAllUInt8","numbers","forEach","ensureAllUInt256","bigNumbers","ensureBoundedInteger","bounds","_a","minimum","maximum","normalizeBigNumberish","bigNumberish","default","isBigNumber","toString","isFinite","normalizeAddress","address","ethers","utils","getAddress","toLowerCase","getEthToken","chainId","ETH","decimals","calculateDecimalRate","numerator","denominator","keepAsDecimal","largerScalar","_10","exponentiatedBy","Math","abs","token","smallerScalar","isEqualTo","_1","repeat","toFixed","invertedIsLarger","decimalRate","amount","decimalScalar","decimalScalarInverted","rate","multipliedBy","dividedBy","rateInverted","__export","m","types_1","_utils_1","_utils_2","normalizeTokenAmount","tokenAmount","normalizedAmount","normalizeTokenReserves","tokenReserves","exchange","ethReserve","tokenReserve","getMarketRate","tradeType","reserves","areTokenReservesNormalized","TRADE_TYPE","ETH_TO_TOKEN","getMarketDetails","optionalReservesInput","optionalReservesOutput","areTokenReserves","TOKEN_TO_TOKEN","inputReserves","outputReserves","TOKEN_TO_ETH","areETHReserves","parseOptionalReserves","_b","numeratorInput","denominatorInput","decimalScalarInput","decimalScalarInvertedInput","_c","numeratorOutput","denominatorOutput","decimalScalarOutput","decimalScalarInvertedOutput","marketRate","lodash_clonedeepwith_1","market_1","getSingleTradeTransput","tradeExact","tradeAmount","inputReserve","outputReserve","TRADE_EXACT","INPUT","inputAmount","isLessThanOrEqualTo","inputAmountWithFee","_997","_1000","plus","outputAmount","dividedToIntegerBy","getInputPrice","minus","getOutputPrice","customizer","calculateSlippage","baseRate","newRate","absoluteValue","_10000","getTradeDetails","_tradeAmount","marketDetails","inputReservesPost","outputReservesPost","intermediateTransput","finalTransput","transput","OUTPUT","getTradeTransput","marketDetailsPost","executionRate","marketRateSlippage","executionRateSlippage","marketDetailsPre","SUPPORTED_CHAIN_ID","TRADE_METHODS","ERC20_json_1","FACTORY_json_1","EXCHANGE_json_1","FACTORY_ADDRESS","Mainnet","Ropsten","Rinkeby","Kovan","FACTORY_ABI","JSON","stringify","EXCHANGE_ABI","TRADE_METHOD_IDS","ethToTokenSwapInput","ethToTokenTransferInput","ethToTokenSwapOutput","ethToTokenTransferOutput","tokenToEthSwapInput","tokenToEthTransferInput","tokenToEthSwapOutput","tokenToEthTransferOutput","tokenToTokenSwapInput","tokenToTokenTransferInput","tokenToTokenSwapOutput","tokenToTokenTransferOutput","FIXED_UNDERFLOW_BEHAVIOR","_MAX_DECIMAL_PLACES","_ROUNDING_MODE","ROUND_HALF_UP","set","DECIMAL_PLACES","ROUNDING_MODE","_CHAIN_ID_NAME","_ERC20_ABI","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","TypeError","pop","push","getContract","ABI","provider","Contract","getChainIdAndProvider","chainIdOrProvider","isChainId","getDefaultProvider","isLowLevelProvider","providers","Web3Provider","getNetwork","getToken","tokenAddress","chainIdAndProvider","ERC20Contract","getTokenReserves","normalizedTokenAddress","ethTokenPromise","tokenPromise","factoryContract","tokenContract","exchangeAddress","exchangeTokenPromise","ethBalancePromise","tokenBalancePromise","ethToken","exchangeToken","ethBalance","tokenBalance","getExchange","getBalance","balanceOf","all","_format","decimalPlaces","roundingMode","format","isFormat","toFormat","undefined","formatSignificant","options","significantDigits","_d","forceIntegerSignificance","_e","minimumSignificantDigits","integerValue","preciseBigNumber","toPrecision","max","formatFixed","dropTrailingZeros","underflowBehavior","ONE_DIGIT","_f","minimumNonZeroValue","newDecimalPlaces","ZERO","LESS_THAN","newBigNumber","decimalize","formatSignificantDecimals","formatFixedDecimals","BigNumber","data_1","computation_1","tradeExactEthForTokensWithData","ethAmount","tradeEthForExactTokensWithData","tradeExactTokensForEthWithData","tradeTokensForExactEthWithData","tradeExactTokensForTokensWithData","reservesInput","reservesOutput","tradeTokensForExactTokensWithData","tradeExactEthForTokens","tradeEthForExactTokens","tradeExactTokensForEth","tradeTokensForExactEth","tradeExactTokensForTokens","tokenAddressInput","tokenAddressOutput","tokenReservesInput","tokenReservesOutput","tradeTokensForExactTokens","removeUndefined","methodArguments","filter","a","maxSlippage","offset","ROUND_FLOOR","ROUND_CEIL","getExecutionDetails","trade","deadline","recipient","getReserves","methodName","transfer","getMethodName","methodId","getValueAndMethodArguments","round","Date","now","Provider","isProvider","tokenReservesNormalized","flexibleFormat","globalObject","isNumeric","mathceil","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","POWS_TEN","MAX","bitFloor","coeffToString","z","j","r","charCodeAt","slice","compare","x","b","xc","c","yc","k","l","intCheck","min","name","String","isOdd","toExponential","str","charAt","toFixedPoint","len","zs","clone","configObject","div","convertBase","parseNumeric","random53bitInt","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","constructor","valueOf","ONE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","alphabet","caseChanged","isNum","_isBigNumber","test","indexOf","replace","search","substring","DEBUG","toUpperCase","rm","id","c0","ne","maxOrMin","args","method","normalise","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","obj","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","lt","gt","random","dp","rand","Uint32Array","copy","splice","sum","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","pow","concat","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","isNaN","p1","p2","comparedTo","idiv","half","isModExp","nIsBig","nIsNeg","nIsOdd","times","eq","isGreaterThanOrEqualTo","gte","lte","isNegative","isPositive","isZero","xLTy","xe","ye","modulo","xcL","ycL","ylo","yhi","zc","negated","precision","shiftedBy","squareRoot","sqrt","rep","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toJSON","argsTag","funcTag","genTag","mapTag","setTag","reFlags","reIsHostCtor","reIsUint","cloneableTags","freeGlobal","global","freeSelf","self","root","Function","freeExports","nodeType","freeModule","module","moduleExports","addMapEntry","map","pair","addSetEntry","add","arrayReduce","array","iteratee","accumulator","initAccum","index","isHostObject","mapToArray","Array","size","key","overArg","func","transform","arg","setToArray","uid","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","objectToString","reIsNative","Buffer","Uint8Array","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeKeys","DataView","getNative","Map","Set","WeakMap","nativeCreate","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","Hash","entries","clear","entry","ListCache","MapCache","Stack","__data__","arrayLikeKeys","inherited","isArray","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","baseTimes","skipIndexes","isIndex","assignValue","object","objValue","assocIndexOf","baseClone","isDeep","isFull","stack","isObject","isArr","input","initCloneArray","source","copyArray","tag","getTag","isFunc","buffer","cloneBuffer","isPrototype","proto","initCloneObject","copyObject","getSymbols","copySymbols","baseAssign","cloneFunc","Ctor","cloneArrayBuffer","dataView","byteOffset","byteLength","cloneDataView","typedArray","cloneTypedArray","cloneMap","regexp","lastIndex","cloneRegExp","cloneSet","symbol","initCloneByTag","stacked","get","props","keysFunc","symbolsFunc","values","arrayPush","baseGetAllKeys","getAllKeys","arrayEach","subValue","baseIsNative","isFunction","arrayBuffer","newValue","getMapData","type","data","getValue","has","cache","pairs","LARGE_ARRAY_SIZE","other","ArrayBuffer","ctorString","isLength","baseKeys"],"mappings":"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","file":"4.bundle.js","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar ethers_1 = require(\"ethers\");\nvar constants_1 = require(\"../constants\");\nfunction ensureUInt8(number) {\n    if (!Number.isInteger(number) || number < 0 || number > constants_1._MAX_UINT8) {\n        throw Error(\"Passed number '\" + number + \"' is not a valid uint8.\");\n    }\n}\nfunction ensureAllUInt8(numbers) {\n    numbers.forEach(ensureUInt8);\n}\nexports.ensureAllUInt8 = ensureAllUInt8;\nfunction ensureUInt256(bigNumber) {\n    if (!bigNumber.isInteger() || bigNumber.isLessThan(constants_1._0) || bigNumber.isGreaterThan(constants_1._MAX_UINT256)) {\n        throw Error(\"Passed bigNumber '\" + bigNumber + \"' is not a valid uint256.\");\n    }\n}\nfunction ensureAllUInt256(bigNumbers) {\n    bigNumbers.forEach(ensureUInt256);\n}\nexports.ensureAllUInt256 = ensureAllUInt256;\nfunction ensureBoundedInteger(number, bounds) {\n    var _a = typeof bounds === 'number' ? [0, bounds] : [bounds[0], bounds[1]], minimum = _a[0], maximum = _a[1];\n    if (!Number.isInteger(number) || number < minimum || number > maximum) {\n        throw Error(\"Passed number '\" + number + \"' is not an integer between '\" + minimum + \"' and '\" + maximum + \"' (inclusive).\");\n    }\n}\nexports.ensureBoundedInteger = ensureBoundedInteger;\nfunction normalizeBigNumberish(bigNumberish) {\n    var bigNumber = bignumber_js_1.default.isBigNumber(bigNumberish)\n        ? bigNumberish\n        : new bignumber_js_1.default(bigNumberish.toString());\n    if (!bigNumber.isFinite()) {\n        throw Error(\"Passed bigNumberish '\" + bigNumberish + \"' of type '\" + typeof bigNumberish + \"' is not valid.\");\n    }\n    return bigNumber;\n}\nexports.normalizeBigNumberish = normalizeBigNumberish;\nfunction normalizeAddress(address) {\n    return ethers_1.ethers.utils.getAddress(address.toLowerCase());\n}\nexports.normalizeAddress = normalizeAddress;\nfunction getEthToken(chainId) {\n    return __assign({}, (chainId ? { chainId: chainId } : {}), { address: constants_1.ETH, decimals: 18 });\n}\nexports.getEthToken = getEthToken;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar constants_1 = require(\"../constants\");\nfunction calculateDecimalRate(numerator, denominator, keepAsDecimal) {\n    if (keepAsDecimal === void 0) { keepAsDecimal = false; }\n    var largerScalar = constants_1._10.exponentiatedBy(new bignumber_js_1.default(Math.abs(numerator.token.decimals - denominator.token.decimals)));\n    var smallerScalar = largerScalar.isEqualTo(constants_1._1)\n        ? constants_1._1\n        : new bignumber_js_1.default(\"0.\" + '0'.repeat(largerScalar.toFixed().length - 2) + \"1\");\n    var invertedIsLarger = numerator.token.decimals - denominator.token.decimals > 0;\n    var decimalRate = {\n        numerator: numerator.amount,\n        denominator: denominator.amount,\n        decimalScalar: invertedIsLarger ? smallerScalar : largerScalar,\n        decimalScalarInverted: invertedIsLarger ? largerScalar : smallerScalar\n    };\n    return keepAsDecimal\n        ? decimalRate\n        : {\n            rate: decimalRate.numerator.multipliedBy(decimalRate.decimalScalar).dividedBy(decimalRate.denominator),\n            rateInverted: decimalRate.denominator\n                .multipliedBy(decimalRate.decimalScalarInverted)\n                .dividedBy(decimalRate.numerator)\n        };\n}\nexports.calculateDecimalRate = calculateDecimalRate;\n//# sourceMappingURL=_utils.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./market\"));\n__export(require(\"./trade\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"../types\");\nvar constants_1 = require(\"../constants\");\nvar _utils_1 = require(\"../_utils\");\nvar _utils_2 = require(\"./_utils\");\nfunction normalizeTokenAmount(tokenAmount) {\n    _utils_1.ensureAllUInt8([tokenAmount.token.decimals]);\n    var normalizedAmount = _utils_1.normalizeBigNumberish(tokenAmount.amount);\n    _utils_1.ensureAllUInt256([normalizedAmount]);\n    return {\n        token: __assign({}, tokenAmount.token),\n        amount: normalizedAmount\n    };\n}\nfunction normalizeTokenReserves(tokenReserves) {\n    _utils_1.ensureAllUInt8([tokenReserves.token.decimals]);\n    return __assign({ token: __assign({}, tokenReserves.token) }, (tokenReserves.exchange ? { exchange: __assign({}, tokenReserves.exchange) } : {}), { ethReserve: normalizeTokenAmount(tokenReserves.ethReserve), tokenReserve: normalizeTokenAmount(tokenReserves.tokenReserve) });\n}\nfunction parseOptionalReserves(optionalReservesInput, optionalReservesOutput) {\n    if (types_1.areTokenReserves(optionalReservesInput) && types_1.areTokenReserves(optionalReservesOutput)) {\n        return {\n            tradeType: constants_1.TRADE_TYPE.TOKEN_TO_TOKEN,\n            inputReserves: normalizeTokenReserves(optionalReservesInput),\n            outputReserves: normalizeTokenReserves(optionalReservesOutput)\n        };\n    }\n    else if (types_1.areTokenReserves(optionalReservesInput) && !types_1.areTokenReserves(optionalReservesOutput)) {\n        return {\n            tradeType: constants_1.TRADE_TYPE.TOKEN_TO_ETH,\n            inputReserves: normalizeTokenReserves(optionalReservesInput),\n            outputReserves: types_1.areETHReserves(optionalReservesOutput)\n                ? optionalReservesOutput\n                : {\n                    token: _utils_1.getEthToken(optionalReservesInput.token.chainId)\n                }\n        };\n    }\n    else if (!types_1.areTokenReserves(optionalReservesInput) && types_1.areTokenReserves(optionalReservesOutput)) {\n        return {\n            tradeType: constants_1.TRADE_TYPE.ETH_TO_TOKEN,\n            inputReserves: types_1.areETHReserves(optionalReservesInput)\n                ? optionalReservesInput\n                : {\n                    token: _utils_1.getEthToken(optionalReservesOutput.token.chainId)\n                },\n            outputReserves: normalizeTokenReserves(optionalReservesOutput)\n        };\n    }\n    else {\n        throw Error('optionalReservesInput, optionalReservesOutput, or both must be defined.');\n    }\n}\nfunction getMarketRate(tradeType, reserves, keepAsDecimal) {\n    if (!types_1.areTokenReservesNormalized(reserves)) {\n        throw Error;\n    }\n    var numerator = tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN ? reserves.tokenReserve : reserves.ethReserve;\n    var denominator = tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN ? reserves.ethReserve : reserves.tokenReserve;\n    return _utils_2.calculateDecimalRate(numerator, denominator, keepAsDecimal);\n}\nfunction getMarketDetails(optionalReservesInput, optionalReservesOutput) {\n    var _a = parseOptionalReserves(optionalReservesInput, optionalReservesOutput), tradeType = _a.tradeType, inputReserves = _a.inputReserves, outputReserves = _a.outputReserves;\n    if (tradeType === constants_1.TRADE_TYPE.TOKEN_TO_TOKEN) {\n        var _b = getMarketRate(constants_1.TRADE_TYPE.TOKEN_TO_ETH, inputReserves, true), numeratorInput = _b.numerator, denominatorInput = _b.denominator, decimalScalarInput = _b.decimalScalar, decimalScalarInvertedInput = _b.decimalScalarInverted;\n        var _c = getMarketRate(constants_1.TRADE_TYPE.ETH_TO_TOKEN, outputReserves, true), numeratorOutput = _c.numerator, denominatorOutput = _c.denominator, decimalScalarOutput = _c.decimalScalar, decimalScalarInvertedOutput = _c.decimalScalarInverted;\n        var marketRate = numeratorInput\n            .multipliedBy(decimalScalarInput)\n            .multipliedBy(numeratorOutput)\n            .multipliedBy(decimalScalarOutput)\n            .dividedBy(denominatorInput.multipliedBy(denominatorOutput));\n        var marketRateInverted = denominatorInput\n            .multipliedBy(decimalScalarInvertedInput)\n            .multipliedBy(denominatorOutput)\n            .multipliedBy(decimalScalarInvertedOutput)\n            .dividedBy(numeratorInput.multipliedBy(numeratorOutput));\n        return {\n            tradeType: tradeType,\n            inputReserves: inputReserves,\n            outputReserves: outputReserves,\n            marketRate: { rate: marketRate, rateInverted: marketRateInverted }\n        };\n    }\n    else {\n        var reserves = (tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN\n            ? outputReserves\n            : inputReserves);\n        return {\n            tradeType: tradeType,\n            inputReserves: inputReserves,\n            outputReserves: outputReserves,\n            marketRate: getMarketRate(tradeType, reserves)\n        };\n    }\n}\nexports.getMarketDetails = getMarketDetails;\n//# sourceMappingURL=market.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar lodash_clonedeepwith_1 = __importDefault(require(\"lodash.clonedeepwith\"));\nvar types_1 = require(\"../types\");\nvar constants_1 = require(\"../constants\");\nvar _utils_1 = require(\"../_utils\");\nvar _utils_2 = require(\"./_utils\");\nvar market_1 = require(\"./market\");\nfunction getInputPrice(inputAmount, inputReserve, outputReserve) {\n    _utils_1.ensureAllUInt256([inputAmount, inputReserve, outputReserve]);\n    if (inputReserve.isLessThanOrEqualTo(constants_1._0) || outputReserve.isLessThanOrEqualTo(constants_1._0)) {\n        throw Error(\"Both inputReserve '\" + inputReserve + \"' and outputReserve '\" + outputReserve + \"' must be non-zero.\");\n    }\n    var inputAmountWithFee = inputAmount.multipliedBy(constants_1._997);\n    var numerator = inputAmountWithFee.multipliedBy(outputReserve);\n    var denominator = inputReserve.multipliedBy(constants_1._1000).plus(inputAmountWithFee);\n    var outputAmount = numerator.dividedToIntegerBy(denominator);\n    _utils_1.ensureAllUInt256([inputAmountWithFee, numerator, denominator, outputAmount]);\n    return outputAmount;\n}\nfunction getOutputPrice(outputAmount, inputReserve, outputReserve) {\n    _utils_1.ensureAllUInt256([outputAmount, inputReserve, outputReserve]);\n    if (inputReserve.isLessThanOrEqualTo(constants_1._0) || outputReserve.isLessThanOrEqualTo(constants_1._0)) {\n        throw Error(\"Both inputReserve '\" + inputReserve + \"' and outputReserve '\" + outputReserve + \"' must be non-zero.\");\n    }\n    var numerator = inputReserve.multipliedBy(outputAmount).multipliedBy(constants_1._1000);\n    var denominator = outputReserve.minus(outputAmount).multipliedBy(constants_1._997);\n    var inputAmount = numerator.dividedToIntegerBy(denominator).plus(constants_1._1);\n    _utils_1.ensureAllUInt256([numerator, denominator, inputAmount]);\n    return inputAmount;\n}\nfunction getSingleTradeTransput(tradeType, tradeExact, tradeAmount, reserves) {\n    if (!types_1.areTokenReservesNormalized(reserves)) {\n        throw Error;\n    }\n    var inputReserve = tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN ? reserves.ethReserve.amount : reserves.tokenReserve.amount;\n    var outputReserve = tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN ? reserves.tokenReserve.amount : reserves.ethReserve.amount;\n    var calculatedAmount = tradeExact === constants_1.TRADE_EXACT.INPUT\n        ? getInputPrice(tradeAmount, inputReserve, outputReserve)\n        : getOutputPrice(tradeAmount, inputReserve, outputReserve);\n    return calculatedAmount;\n}\nfunction customizer(value) {\n    if (bignumber_js_1.default.isBigNumber(value)) {\n        return new bignumber_js_1.default(value);\n    }\n}\nfunction getTradeTransput(tradeType, tradeExact, tradeAmount, inputReserves, outputReserves) {\n    var inputReservesPost = lodash_clonedeepwith_1.default(inputReserves, customizer);\n    var outputReservesPost = lodash_clonedeepwith_1.default(outputReserves, customizer);\n    if (tradeType === constants_1.TRADE_TYPE.TOKEN_TO_TOKEN) {\n        if (!types_1.areTokenReservesNormalized(inputReservesPost) || !types_1.areTokenReservesNormalized(outputReservesPost)) {\n            throw Error;\n        }\n        if (tradeExact === constants_1.TRADE_EXACT.INPUT) {\n            var intermediateTransput = getSingleTradeTransput(constants_1.TRADE_TYPE.TOKEN_TO_ETH, constants_1.TRADE_EXACT.INPUT, tradeAmount, inputReserves);\n            var finalTransput = getSingleTradeTransput(constants_1.TRADE_TYPE.ETH_TO_TOKEN, constants_1.TRADE_EXACT.INPUT, intermediateTransput, outputReserves);\n            inputReservesPost.ethReserve.amount = inputReservesPost.ethReserve.amount.minus(intermediateTransput);\n            inputReservesPost.tokenReserve.amount = inputReservesPost.tokenReserve.amount.plus(tradeAmount);\n            outputReservesPost.ethReserve.amount = outputReservesPost.ethReserve.amount.plus(intermediateTransput);\n            outputReservesPost.tokenReserve.amount = outputReservesPost.tokenReserve.amount.minus(finalTransput);\n            return {\n                transput: finalTransput,\n                inputReservesPost: inputReservesPost,\n                outputReservesPost: outputReservesPost\n            };\n        }\n        else {\n            var intermediateTransput = getSingleTradeTransput(constants_1.TRADE_TYPE.ETH_TO_TOKEN, constants_1.TRADE_EXACT.OUTPUT, tradeAmount, outputReserves);\n            var finalTransput = getSingleTradeTransput(constants_1.TRADE_TYPE.TOKEN_TO_ETH, constants_1.TRADE_EXACT.OUTPUT, intermediateTransput, inputReserves);\n            inputReservesPost.ethReserve.amount = inputReservesPost.ethReserve.amount.minus(intermediateTransput);\n            inputReservesPost.tokenReserve.amount = inputReservesPost.tokenReserve.amount.plus(finalTransput);\n            outputReservesPost.ethReserve.amount = outputReservesPost.ethReserve.amount.plus(intermediateTransput);\n            outputReservesPost.tokenReserve.amount = outputReservesPost.tokenReserve.amount.minus(tradeAmount);\n            return {\n                transput: finalTransput,\n                inputReservesPost: inputReservesPost,\n                outputReservesPost: outputReservesPost\n            };\n        }\n    }\n    else {\n        var reserves = tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN ? outputReserves : inputReserves;\n        var finalTransput = getSingleTradeTransput(tradeType, tradeExact, tradeAmount, reserves);\n        if (tradeType === constants_1.TRADE_TYPE.ETH_TO_TOKEN) {\n            if (!types_1.areTokenReservesNormalized(outputReservesPost)) {\n                throw Error;\n            }\n            outputReservesPost.ethReserve.amount = outputReservesPost.ethReserve.amount.plus(tradeExact === constants_1.TRADE_EXACT.INPUT ? tradeAmount : finalTransput);\n            outputReservesPost.tokenReserve.amount = outputReservesPost.tokenReserve.amount.minus(tradeExact === constants_1.TRADE_EXACT.INPUT ? finalTransput : tradeAmount);\n        }\n        else {\n            if (!types_1.areTokenReservesNormalized(inputReservesPost)) {\n                throw Error;\n            }\n            inputReservesPost.ethReserve.amount = inputReservesPost.ethReserve.amount.minus(tradeExact === constants_1.TRADE_EXACT.INPUT ? finalTransput : tradeAmount);\n            inputReservesPost.tokenReserve.amount = inputReservesPost.tokenReserve.amount.plus(tradeExact === constants_1.TRADE_EXACT.INPUT ? tradeAmount : finalTransput);\n        }\n        return {\n            transput: finalTransput,\n            inputReservesPost: inputReservesPost,\n            outputReservesPost: outputReservesPost\n        };\n    }\n}\nfunction calculateSlippage(baseRate, newRate) {\n    var difference = baseRate.minus(newRate).absoluteValue();\n    return difference.multipliedBy(constants_1._10000).dividedBy(baseRate);\n}\nfunction getTradeDetails(tradeExact, _tradeAmount, marketDetails) {\n    var tradeAmount = _utils_1.normalizeBigNumberish(_tradeAmount);\n    var _a = getTradeTransput(marketDetails.tradeType, tradeExact, tradeAmount, marketDetails.inputReserves, marketDetails.outputReserves), transput = _a.transput, inputReservesPost = _a.inputReservesPost, outputReservesPost = _a.outputReservesPost;\n    var inputAmount = {\n        token: marketDetails.inputReserves.token,\n        amount: tradeExact === constants_1.TRADE_EXACT.INPUT ? tradeAmount : transput\n    };\n    var outputAmount = {\n        token: marketDetails.outputReserves.token,\n        amount: tradeExact === constants_1.TRADE_EXACT.INPUT ? transput : tradeAmount\n    };\n    var marketDetailsPost = market_1.getMarketDetails(inputReservesPost, outputReservesPost);\n    var executionRate = _utils_2.calculateDecimalRate(outputAmount, inputAmount);\n    var marketRateSlippage = calculateSlippage(marketDetails.marketRate.rate, marketDetailsPost.marketRate.rate);\n    var executionRateSlippage = calculateSlippage(marketDetails.marketRate.rate, executionRate.rate);\n    return {\n        marketDetailsPre: marketDetails,\n        marketDetailsPost: marketDetailsPost,\n        tradeType: marketDetails.tradeType,\n        tradeExact: tradeExact,\n        inputAmount: inputAmount,\n        outputAmount: outputAmount,\n        executionRate: executionRate,\n        marketRateSlippage: marketRateSlippage,\n        executionRateSlippage: executionRateSlippage\n    };\n}\nexports.getTradeDetails = getTradeDetails;\n//# sourceMappingURL=trade.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _a, _b, _c;\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar ERC20_json_1 = __importDefault(require(\"./abis/ERC20.json\"));\nvar FACTORY_json_1 = __importDefault(require(\"./abis/FACTORY.json\"));\nvar EXCHANGE_json_1 = __importDefault(require(\"./abis/EXCHANGE.json\"));\nexports.ETH = 'ETH';\nvar SUPPORTED_CHAIN_ID;\n(function (SUPPORTED_CHAIN_ID) {\n    SUPPORTED_CHAIN_ID[SUPPORTED_CHAIN_ID[\"Mainnet\"] = 1] = \"Mainnet\";\n    SUPPORTED_CHAIN_ID[SUPPORTED_CHAIN_ID[\"Ropsten\"] = 3] = \"Ropsten\";\n    SUPPORTED_CHAIN_ID[SUPPORTED_CHAIN_ID[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    SUPPORTED_CHAIN_ID[SUPPORTED_CHAIN_ID[\"Kovan\"] = 42] = \"Kovan\";\n})(SUPPORTED_CHAIN_ID = exports.SUPPORTED_CHAIN_ID || (exports.SUPPORTED_CHAIN_ID = {}));\nexports.FACTORY_ADDRESS = (_a = {},\n    _a[SUPPORTED_CHAIN_ID.Mainnet] = '0xc0a47dFe034B400B47bDaD5FecDa2621de6c4d95',\n    _a[SUPPORTED_CHAIN_ID.Ropsten] = '0x9c83dCE8CA20E9aAF9D3efc003b2ea62aBC08351',\n    _a[SUPPORTED_CHAIN_ID.Rinkeby] = '0xf5D915570BC477f9B8D6C0E980aA81757A3AaC36',\n    _a[SUPPORTED_CHAIN_ID.Kovan] = '0xD3E51Ef092B2845f10401a0159B2B96e8B6c3D30',\n    _a);\nexports.FACTORY_ABI = JSON.stringify(FACTORY_json_1.default);\nexports.EXCHANGE_ABI = JSON.stringify(EXCHANGE_json_1.default);\nvar TRADE_TYPE;\n(function (TRADE_TYPE) {\n    TRADE_TYPE[\"ETH_TO_TOKEN\"] = \"ETH_TO_TOKEN\";\n    TRADE_TYPE[\"TOKEN_TO_ETH\"] = \"TOKEN_TO_ETH\";\n    TRADE_TYPE[\"TOKEN_TO_TOKEN\"] = \"TOKEN_TO_TOKEN\";\n})(TRADE_TYPE = exports.TRADE_TYPE || (exports.TRADE_TYPE = {}));\nvar TRADE_EXACT;\n(function (TRADE_EXACT) {\n    TRADE_EXACT[\"INPUT\"] = \"INPUT\";\n    TRADE_EXACT[\"OUTPUT\"] = \"OUTPUT\";\n})(TRADE_EXACT = exports.TRADE_EXACT || (exports.TRADE_EXACT = {}));\nvar TRADE_METHODS;\n(function (TRADE_METHODS) {\n    TRADE_METHODS[\"ethToTokenSwapInput\"] = \"ethToTokenSwapInput\";\n    TRADE_METHODS[\"ethToTokenTransferInput\"] = \"ethToTokenTransferInput\";\n    TRADE_METHODS[\"ethToTokenSwapOutput\"] = \"ethToTokenSwapOutput\";\n    TRADE_METHODS[\"ethToTokenTransferOutput\"] = \"ethToTokenTransferOutput\";\n    TRADE_METHODS[\"tokenToEthSwapInput\"] = \"tokenToEthSwapInput\";\n    TRADE_METHODS[\"tokenToEthTransferInput\"] = \"tokenToEthTransferInput\";\n    TRADE_METHODS[\"tokenToEthSwapOutput\"] = \"tokenToEthSwapOutput\";\n    TRADE_METHODS[\"tokenToEthTransferOutput\"] = \"tokenToEthTransferOutput\";\n    TRADE_METHODS[\"tokenToTokenSwapInput\"] = \"tokenToTokenSwapInput\";\n    TRADE_METHODS[\"tokenToTokenTransferInput\"] = \"tokenToTokenTransferInput\";\n    TRADE_METHODS[\"tokenToTokenSwapOutput\"] = \"tokenToTokenSwapOutput\";\n    TRADE_METHODS[\"tokenToTokenTransferOutput\"] = \"tokenToTokenTransferOutput\";\n})(TRADE_METHODS = exports.TRADE_METHODS || (exports.TRADE_METHODS = {}));\nexports.TRADE_METHOD_IDS = (_b = {},\n    _b[TRADE_METHODS.ethToTokenSwapInput] = '0xf39b5b9b',\n    _b[TRADE_METHODS.ethToTokenTransferInput] = '0xad65d76d',\n    _b[TRADE_METHODS.ethToTokenSwapOutput] = '0x6b1d4db7',\n    _b[TRADE_METHODS.ethToTokenTransferOutput] = '0x0b573638',\n    _b[TRADE_METHODS.tokenToEthSwapInput] = '0x95e3c50b',\n    _b[TRADE_METHODS.tokenToEthTransferInput] = '0x7237e031',\n    _b[TRADE_METHODS.tokenToEthSwapOutput] = '0x013efd8b',\n    _b[TRADE_METHODS.tokenToEthTransferOutput] = '0xd4e4841d',\n    _b[TRADE_METHODS.tokenToTokenSwapInput] = '0xddf7e1a7',\n    _b[TRADE_METHODS.tokenToTokenTransferInput] = '0xf552d91b',\n    _b[TRADE_METHODS.tokenToTokenSwapOutput] = '0xb040d545',\n    _b[TRADE_METHODS.tokenToTokenTransferOutput] = '0xf3c0efe9',\n    _b);\nvar FIXED_UNDERFLOW_BEHAVIOR;\n(function (FIXED_UNDERFLOW_BEHAVIOR) {\n    FIXED_UNDERFLOW_BEHAVIOR[\"ZERO\"] = \"ZERO\";\n    FIXED_UNDERFLOW_BEHAVIOR[\"LESS_THAN\"] = \"LESS_THAN\";\n    FIXED_UNDERFLOW_BEHAVIOR[\"ONE_DIGIT\"] = \"ONE_DIGIT\";\n})(FIXED_UNDERFLOW_BEHAVIOR = exports.FIXED_UNDERFLOW_BEHAVIOR || (exports.FIXED_UNDERFLOW_BEHAVIOR = {}));\nexports._MAX_DECIMAL_PLACES = 18;\nexports._ROUNDING_MODE = bignumber_js_1.default.ROUND_HALF_UP;\nbignumber_js_1.default.set({ DECIMAL_PLACES: exports._MAX_DECIMAL_PLACES, ROUNDING_MODE: exports._ROUNDING_MODE });\nexports._0 = new bignumber_js_1.default('0');\nexports._1 = new bignumber_js_1.default('1');\nexports._10 = new bignumber_js_1.default('10');\nexports._997 = new bignumber_js_1.default('997');\nexports._1000 = new bignumber_js_1.default('1000');\nexports._10000 = new bignumber_js_1.default('10000');\nexports._MAX_UINT8 = 255;\nexports._MAX_UINT256 = new bignumber_js_1.default('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff');\nexports._CHAIN_ID_NAME = (_c = {},\n    _c[SUPPORTED_CHAIN_ID.Mainnet] = 'homestead',\n    _c[SUPPORTED_CHAIN_ID.Ropsten] = 'ropsten',\n    _c[SUPPORTED_CHAIN_ID.Rinkeby] = 'rinkeby',\n    _c[SUPPORTED_CHAIN_ID.Kovan] = 'kovan',\n    _c);\nexports._ERC20_ABI = JSON.stringify(ERC20_json_1.default);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethers_1 = require(\"ethers\");\nvar types_1 = require(\"../types\");\nvar constants_1 = require(\"../constants\");\nvar _utils_1 = require(\"../_utils\");\nfunction getContract(address, ABI, provider) {\n    return new ethers_1.ethers.Contract(address, ABI, provider);\n}\nfunction getChainIdAndProvider(chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var provider, chainId;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!types_1.isChainId(chainIdOrProvider)) return [3, 1];\n                    return [2, {\n                            chainId: chainIdOrProvider,\n                            provider: ethers_1.ethers.getDefaultProvider(constants_1._CHAIN_ID_NAME[chainIdOrProvider])\n                        }];\n                case 1:\n                    provider = types_1.isLowLevelProvider(chainIdOrProvider)\n                        ? new ethers_1.ethers.providers.Web3Provider(chainIdOrProvider)\n                        : chainIdOrProvider;\n                    return [4, provider.getNetwork()];\n                case 2:\n                    chainId = (_a.sent()).chainId;\n                    if (!(chainId in constants_1.SUPPORTED_CHAIN_ID)) {\n                        throw Error(\"chainId \" + chainId + \" is not valid.\");\n                    }\n                    return [2, {\n                            chainId: chainId,\n                            provider: provider\n                        }];\n            }\n        });\n    });\n}\nfunction getToken(tokenAddress, chainIdAndProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var ERC20Contract, decimals;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(tokenAddress === constants_1.ETH)) return [3, 1];\n                    return [2, _utils_1.getEthToken(chainIdAndProvider.chainId)];\n                case 1:\n                    ERC20Contract = getContract(tokenAddress, constants_1._ERC20_ABI, chainIdAndProvider.provider);\n                    return [4, ERC20Contract.decimals()];\n                case 2:\n                    decimals = _a.sent();\n                    return [2, {\n                            chainId: chainIdAndProvider.chainId,\n                            address: ERC20Contract.address,\n                            decimals: decimals\n                        }];\n            }\n        });\n    });\n}\nfunction getTokenReserves(tokenAddress, chainIdOrProvider) {\n    if (chainIdOrProvider === void 0) { chainIdOrProvider = 1; }\n    return __awaiter(this, void 0, void 0, function () {\n        var normalizedTokenAddress, chainIdAndProvider, ethTokenPromise, tokenPromise, factoryContract, tokenContract, exchangeAddress, exchangeTokenPromise, ethBalancePromise, tokenBalancePromise, _a, ethToken, token, exchangeToken, ethBalance, tokenBalance, ethReserve, tokenReserve;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    normalizedTokenAddress = _utils_1.normalizeAddress(tokenAddress);\n                    return [4, getChainIdAndProvider(chainIdOrProvider)];\n                case 1:\n                    chainIdAndProvider = _b.sent();\n                    ethTokenPromise = getToken(constants_1.ETH, chainIdAndProvider);\n                    tokenPromise = getToken(normalizedTokenAddress, chainIdAndProvider);\n                    factoryContract = getContract(constants_1.FACTORY_ADDRESS[chainIdAndProvider.chainId], constants_1.FACTORY_ABI, chainIdAndProvider.provider);\n                    tokenContract = getContract(normalizedTokenAddress, constants_1._ERC20_ABI, chainIdAndProvider.provider);\n                    return [4, factoryContract.getExchange(normalizedTokenAddress)];\n                case 2:\n                    exchangeAddress = _b.sent();\n                    exchangeTokenPromise = getToken(exchangeAddress, chainIdAndProvider);\n                    ethBalancePromise = chainIdAndProvider.provider.getBalance(exchangeAddress);\n                    tokenBalancePromise = tokenContract.balanceOf(exchangeAddress);\n                    return [4, Promise.all([ethTokenPromise, tokenPromise, exchangeTokenPromise, ethBalancePromise, tokenBalancePromise])];\n                case 3:\n                    _a = _b.sent(), ethToken = _a[0], token = _a[1], exchangeToken = _a[2], ethBalance = _a[3], tokenBalance = _a[4];\n                    ethReserve = { token: ethToken, amount: _utils_1.normalizeBigNumberish(ethBalance) };\n                    tokenReserve = { token: token, amount: _utils_1.normalizeBigNumberish(tokenBalance) };\n                    return [2, { token: token, exchange: exchangeToken, ethReserve: ethReserve, tokenReserve: tokenReserve }];\n            }\n        });\n    });\n}\nexports.getTokenReserves = getTokenReserves;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar types_1 = require(\"../types\");\nvar constants_1 = require(\"../constants\");\nvar _utils_1 = require(\"../_utils\");\nfunction _format(bigNumber, decimalPlaces, roundingMode, format) {\n    if (roundingMode === void 0) { roundingMode = constants_1._ROUNDING_MODE; }\n    return types_1.isFormat(format) || format\n        ? bigNumber.toFormat(decimalPlaces, roundingMode, types_1.isFormat(format) ? format : undefined)\n        : bigNumber.toFixed(decimalPlaces, roundingMode);\n}\nfunction formatSignificant(bigNumberish, options) {\n    var _a = options || {}, _b = _a.significantDigits, significantDigits = _b === void 0 ? 6 : _b, _c = _a.roundingMode, roundingMode = _c === void 0 ? constants_1._ROUNDING_MODE : _c, _d = _a.forceIntegerSignificance, forceIntegerSignificance = _d === void 0 ? true : _d, _e = _a.format, format = _e === void 0 ? false : _e;\n    var bigNumber = _utils_1.normalizeBigNumberish(bigNumberish);\n    _utils_1.ensureBoundedInteger(significantDigits, [1, constants_1._MAX_DECIMAL_PLACES]);\n    var minimumSignificantDigits = forceIntegerSignificance ? bigNumber.integerValue().toFixed().length : 0;\n    var preciseBigNumber = new bignumber_js_1.default(bigNumber.toPrecision(Math.max(minimumSignificantDigits, significantDigits)));\n    return _format(preciseBigNumber, preciseBigNumber.decimalPlaces(), roundingMode, format);\n}\nexports.formatSignificant = formatSignificant;\nfunction formatFixed(bigNumberish, options) {\n    var _a = options || {}, _b = _a.decimalPlaces, decimalPlaces = _b === void 0 ? 4 : _b, _c = _a.roundingMode, roundingMode = _c === void 0 ? constants_1._ROUNDING_MODE : _c, _d = _a.dropTrailingZeros, dropTrailingZeros = _d === void 0 ? true : _d, _e = _a.underflowBehavior, underflowBehavior = _e === void 0 ? constants_1.FIXED_UNDERFLOW_BEHAVIOR.ONE_DIGIT : _e, _f = _a.format, format = _f === void 0 ? false : _f;\n    var bigNumber = _utils_1.normalizeBigNumberish(bigNumberish);\n    _utils_1.ensureBoundedInteger(decimalPlaces, constants_1._MAX_DECIMAL_PLACES);\n    var minimumNonZeroValue = new bignumber_js_1.default(decimalPlaces === 0 ? '0.5' : \"0.\" + '0'.repeat(decimalPlaces) + \"5\");\n    if (bigNumber.isLessThan(minimumNonZeroValue)) {\n        switch (underflowBehavior) {\n            case constants_1.FIXED_UNDERFLOW_BEHAVIOR.ZERO: {\n                return _format(constants_1._0, dropTrailingZeros ? 0 : decimalPlaces, undefined, format);\n            }\n            case constants_1.FIXED_UNDERFLOW_BEHAVIOR.LESS_THAN: {\n                return \"<\" + _format(minimumNonZeroValue, minimumNonZeroValue.decimalPlaces(), undefined, format);\n            }\n            case constants_1.FIXED_UNDERFLOW_BEHAVIOR.ONE_DIGIT: {\n                var newBigNumber = new bignumber_js_1.default(bigNumber.toPrecision(1));\n                return _format(newBigNumber, newBigNumber.decimalPlaces(), undefined, format);\n            }\n            default: {\n                throw Error(\"Passed FIXED_UNDERFLOW_BEHAVIOR \" + underflowBehavior + \" is not valid.\");\n            }\n        }\n    }\n    else {\n        var newDecimalPlaces = dropTrailingZeros\n            ? new bignumber_js_1.default(bigNumber.toFixed(decimalPlaces, roundingMode)).decimalPlaces()\n            : decimalPlaces;\n        return _format(bigNumber, newDecimalPlaces, roundingMode, format);\n    }\n}\nexports.formatFixed = formatFixed;\nfunction decimalize(bigNumberish, decimals) {\n    var bigNumber = _utils_1.normalizeBigNumberish(bigNumberish);\n    _utils_1.ensureAllUInt256([bigNumber]);\n    _utils_1.ensureAllUInt8([decimals]);\n    if (decimals > constants_1._MAX_DECIMAL_PLACES) {\n        throw Error(\"This function does not support decimals greater than \" + constants_1._MAX_DECIMAL_PLACES + \".\");\n    }\n    return bigNumber.dividedBy(constants_1._10.exponentiatedBy(decimals));\n}\nfunction formatSignificantDecimals(bigNumberish, decimals, options) {\n    return formatSignificant(decimalize(bigNumberish, decimals), options);\n}\nexports.formatSignificantDecimals = formatSignificantDecimals;\nfunction formatFixedDecimals(bigNumberish, decimals, options) {\n    return formatFixed(decimalize(bigNumberish, decimals), options);\n}\nexports.formatFixedDecimals = formatFixedDecimals;\n//# sourceMappingURL=index.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nexports.BigNumber = bignumber_js_1.default;\nvar constants_1 = require(\"./constants\");\nexports.ETH = constants_1.ETH;\nexports.SUPPORTED_CHAIN_ID = constants_1.SUPPORTED_CHAIN_ID;\nexports.FACTORY_ADDRESS = constants_1.FACTORY_ADDRESS;\nexports.FACTORY_ABI = constants_1.FACTORY_ABI;\nexports.EXCHANGE_ABI = constants_1.EXCHANGE_ABI;\nexports.TRADE_TYPE = constants_1.TRADE_TYPE;\nexports.TRADE_EXACT = constants_1.TRADE_EXACT;\nexports.TRADE_METHODS = constants_1.TRADE_METHODS;\nexports.TRADE_METHOD_IDS = constants_1.TRADE_METHOD_IDS;\nexports.FIXED_UNDERFLOW_BEHAVIOR = constants_1.FIXED_UNDERFLOW_BEHAVIOR;\n__export(require(\"./data\"));\n__export(require(\"./computation\"));\n__export(require(\"./format\"));\n__export(require(\"./orchestration\"));\n__export(require(\"./transact\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"../constants\");\nvar data_1 = require(\"../data\");\nvar computation_1 = require(\"../computation\");\nfunction tradeExactEthForTokensWithData(reserves, ethAmount) {\n    var marketDetails = computation_1.getMarketDetails(undefined, reserves);\n    return computation_1.getTradeDetails(constants_1.TRADE_EXACT.INPUT, ethAmount, marketDetails);\n}\nexports.tradeExactEthForTokensWithData = tradeExactEthForTokensWithData;\nfunction tradeExactEthForTokens(tokenAddress, ethAmount, chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenReserves;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, data_1.getTokenReserves(tokenAddress, chainIdOrProvider)];\n                case 1:\n                    tokenReserves = _a.sent();\n                    return [2, tradeExactEthForTokensWithData(tokenReserves, ethAmount)];\n            }\n        });\n    });\n}\nexports.tradeExactEthForTokens = tradeExactEthForTokens;\nfunction tradeEthForExactTokensWithData(reserves, tokenAmount) {\n    var marketDetails = computation_1.getMarketDetails(undefined, reserves);\n    return computation_1.getTradeDetails(constants_1.TRADE_EXACT.OUTPUT, tokenAmount, marketDetails);\n}\nexports.tradeEthForExactTokensWithData = tradeEthForExactTokensWithData;\nfunction tradeEthForExactTokens(tokenAddress, tokenAmount, chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenReserves;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, data_1.getTokenReserves(tokenAddress, chainIdOrProvider)];\n                case 1:\n                    tokenReserves = _a.sent();\n                    return [2, tradeEthForExactTokensWithData(tokenReserves, tokenAmount)];\n            }\n        });\n    });\n}\nexports.tradeEthForExactTokens = tradeEthForExactTokens;\nfunction tradeExactTokensForEthWithData(reserves, tokenAmount) {\n    var marketDetails = computation_1.getMarketDetails(reserves, undefined);\n    return computation_1.getTradeDetails(constants_1.TRADE_EXACT.INPUT, tokenAmount, marketDetails);\n}\nexports.tradeExactTokensForEthWithData = tradeExactTokensForEthWithData;\nfunction tradeExactTokensForEth(tokenAddress, tokenAmount, chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenReserves;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, data_1.getTokenReserves(tokenAddress, chainIdOrProvider)];\n                case 1:\n                    tokenReserves = _a.sent();\n                    return [2, tradeExactTokensForEthWithData(tokenReserves, tokenAmount)];\n            }\n        });\n    });\n}\nexports.tradeExactTokensForEth = tradeExactTokensForEth;\nfunction tradeTokensForExactEthWithData(reserves, ethAmount) {\n    var marketDetails = computation_1.getMarketDetails(reserves, undefined);\n    return computation_1.getTradeDetails(constants_1.TRADE_EXACT.OUTPUT, ethAmount, marketDetails);\n}\nexports.tradeTokensForExactEthWithData = tradeTokensForExactEthWithData;\nfunction tradeTokensForExactEth(tokenAddress, ethAmount, chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenReserves;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, data_1.getTokenReserves(tokenAddress, chainIdOrProvider)];\n                case 1:\n                    tokenReserves = _a.sent();\n                    return [2, tradeTokensForExactEthWithData(tokenReserves, ethAmount)];\n            }\n        });\n    });\n}\nexports.tradeTokensForExactEth = tradeTokensForExactEth;\nfunction tradeExactTokensForTokensWithData(reservesInput, reservesOutput, tokenAmount) {\n    var marketDetails = computation_1.getMarketDetails(reservesInput, reservesOutput);\n    return computation_1.getTradeDetails(constants_1.TRADE_EXACT.INPUT, tokenAmount, marketDetails);\n}\nexports.tradeExactTokensForTokensWithData = tradeExactTokensForTokensWithData;\nfunction tradeExactTokensForTokens(tokenAddressInput, tokenAddressOutput, tokenAmount, chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenReservesInput, tokenReservesOutput;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, data_1.getTokenReserves(tokenAddressInput, chainIdOrProvider)];\n                case 1:\n                    tokenReservesInput = _a.sent();\n                    return [4, data_1.getTokenReserves(tokenAddressOutput, chainIdOrProvider)];\n                case 2:\n                    tokenReservesOutput = _a.sent();\n                    return [2, tradeExactTokensForTokensWithData(tokenReservesInput, tokenReservesOutput, tokenAmount)];\n            }\n        });\n    });\n}\nexports.tradeExactTokensForTokens = tradeExactTokensForTokens;\nfunction tradeTokensForExactTokensWithData(reservesInput, reservesOutput, tokenAmount) {\n    var marketDetails = computation_1.getMarketDetails(reservesInput, reservesOutput);\n    return computation_1.getTradeDetails(constants_1.TRADE_EXACT.OUTPUT, tokenAmount, marketDetails);\n}\nexports.tradeTokensForExactTokensWithData = tradeTokensForExactTokensWithData;\nfunction tradeTokensForExactTokens(tokenAddressInput, tokenAddressOutput, tokenAmount, chainIdOrProvider) {\n    return __awaiter(this, void 0, void 0, function () {\n        var tokenReservesInput, tokenReservesOutput;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0: return [4, data_1.getTokenReserves(tokenAddressInput, chainIdOrProvider)];\n                case 1:\n                    tokenReservesInput = _a.sent();\n                    return [4, data_1.getTokenReserves(tokenAddressOutput, chainIdOrProvider)];\n                case 2:\n                    tokenReservesOutput = _a.sent();\n                    return [2, tradeTokensForExactTokensWithData(tokenReservesInput, tokenReservesOutput, tokenAmount)];\n            }\n        });\n    });\n}\nexports.tradeTokensForExactTokens = tradeTokensForExactTokens;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar constants_1 = require(\"../constants\");\nvar _utils_1 = require(\"../_utils\");\nfunction removeUndefined(methodArguments) {\n    return methodArguments.filter(function (a) { return a !== undefined; });\n}\nfunction calculateSlippage(value, maxSlippage) {\n    var offset = value.multipliedBy(maxSlippage).dividedBy(constants_1._10000);\n    var minimum = value.minus(offset).integerValue(bignumber_js_1.default.ROUND_FLOOR);\n    var maximum = value.plus(offset).integerValue(bignumber_js_1.default.ROUND_CEIL);\n    return {\n        minimum: minimum.isLessThan(constants_1._0) ? constants_1._0 : minimum,\n        maximum: maximum.isGreaterThan(constants_1._MAX_UINT256) ? constants_1._MAX_UINT256 : maximum\n    };\n}\nfunction getReserves(trade) {\n    switch (trade.tradeType) {\n        case constants_1.TRADE_TYPE.ETH_TO_TOKEN: {\n            return trade.marketDetailsPre.outputReserves;\n        }\n        case constants_1.TRADE_TYPE.TOKEN_TO_ETH: {\n            return trade.marketDetailsPre.inputReserves;\n        }\n        case constants_1.TRADE_TYPE.TOKEN_TO_TOKEN: {\n            return trade.marketDetailsPre.inputReserves;\n        }\n        default: {\n            throw Error(\"tradeType \" + trade.tradeType + \" is invalid.\");\n        }\n    }\n}\nfunction getMethodName(trade, transfer) {\n    if (transfer === void 0) { transfer = false; }\n    switch (trade.tradeType) {\n        case constants_1.TRADE_TYPE.ETH_TO_TOKEN: {\n            if (trade.tradeExact === constants_1.TRADE_EXACT.INPUT && !transfer) {\n                return constants_1.TRADE_METHODS.ethToTokenSwapInput;\n            }\n            else if (trade.tradeExact === constants_1.TRADE_EXACT.INPUT && transfer) {\n                return constants_1.TRADE_METHODS.ethToTokenTransferInput;\n            }\n            else if (trade.tradeExact === constants_1.TRADE_EXACT.OUTPUT && !transfer) {\n                return constants_1.TRADE_METHODS.ethToTokenSwapOutput;\n            }\n            else {\n                return constants_1.TRADE_METHODS.ethToTokenTransferOutput;\n            }\n        }\n        case constants_1.TRADE_TYPE.TOKEN_TO_ETH: {\n            if (trade.tradeExact === constants_1.TRADE_EXACT.INPUT && !transfer) {\n                return constants_1.TRADE_METHODS.tokenToEthSwapInput;\n            }\n            else if (trade.tradeExact === constants_1.TRADE_EXACT.INPUT && transfer) {\n                return constants_1.TRADE_METHODS.tokenToEthTransferInput;\n            }\n            else if (trade.tradeExact === constants_1.TRADE_EXACT.OUTPUT && !transfer) {\n                return constants_1.TRADE_METHODS.tokenToEthSwapOutput;\n            }\n            else {\n                return constants_1.TRADE_METHODS.tokenToEthTransferOutput;\n            }\n        }\n        case constants_1.TRADE_TYPE.TOKEN_TO_TOKEN: {\n            if (trade.tradeExact === constants_1.TRADE_EXACT.INPUT && !transfer) {\n                return constants_1.TRADE_METHODS.tokenToTokenSwapInput;\n            }\n            else if (trade.tradeExact === constants_1.TRADE_EXACT.INPUT && transfer) {\n                return constants_1.TRADE_METHODS.tokenToTokenTransferInput;\n            }\n            else if (trade.tradeExact === constants_1.TRADE_EXACT.OUTPUT && !transfer) {\n                return constants_1.TRADE_METHODS.tokenToTokenSwapOutput;\n            }\n            else {\n                return constants_1.TRADE_METHODS.tokenToTokenTransferOutput;\n            }\n        }\n        default: {\n            throw Error(\"tradeType \" + trade.tradeType + \" is invalid.\");\n        }\n    }\n}\nfunction getValueAndMethodArguments(trade, methodName, maxSlippage, deadline, recipient) {\n    switch (methodName) {\n        case constants_1.TRADE_METHODS.ethToTokenSwapInput:\n        case constants_1.TRADE_METHODS.ethToTokenTransferInput: {\n            return {\n                value: trade.inputAmount.amount,\n                methodArguments: removeUndefined([\n                    calculateSlippage(trade.outputAmount.amount, maxSlippage).minimum,\n                    deadline,\n                    recipient\n                ])\n            };\n        }\n        case constants_1.TRADE_METHODS.ethToTokenSwapOutput:\n        case constants_1.TRADE_METHODS.ethToTokenTransferOutput: {\n            return {\n                value: calculateSlippage(trade.inputAmount.amount, maxSlippage).maximum,\n                methodArguments: removeUndefined([trade.outputAmount.amount, deadline, recipient])\n            };\n        }\n        case constants_1.TRADE_METHODS.tokenToEthSwapInput:\n        case constants_1.TRADE_METHODS.tokenToEthTransferInput: {\n            return {\n                value: constants_1._0,\n                methodArguments: removeUndefined([\n                    trade.inputAmount.amount,\n                    calculateSlippage(trade.outputAmount.amount, maxSlippage).minimum,\n                    deadline,\n                    recipient\n                ])\n            };\n        }\n        case constants_1.TRADE_METHODS.tokenToEthSwapOutput:\n        case constants_1.TRADE_METHODS.tokenToEthTransferOutput: {\n            return {\n                value: constants_1._0,\n                methodArguments: removeUndefined([\n                    trade.outputAmount.amount,\n                    calculateSlippage(trade.inputAmount.amount, maxSlippage).maximum,\n                    deadline,\n                    recipient\n                ])\n            };\n        }\n        case constants_1.TRADE_METHODS.tokenToTokenSwapInput:\n        case constants_1.TRADE_METHODS.tokenToTokenTransferInput: {\n            if (!trade.outputAmount.token.address) {\n                throw Error('trade does not include output token address.');\n            }\n            return {\n                value: constants_1._0,\n                methodArguments: removeUndefined([\n                    trade.inputAmount.amount,\n                    calculateSlippage(trade.outputAmount.amount, maxSlippage).minimum,\n                    constants_1._1,\n                    deadline,\n                    recipient,\n                    trade.outputAmount.token.address\n                ])\n            };\n        }\n        case constants_1.TRADE_METHODS.tokenToTokenSwapOutput:\n        case constants_1.TRADE_METHODS.tokenToTokenTransferOutput: {\n            if (!trade.outputAmount.token.address) {\n                throw Error('trade does not include output token address.');\n            }\n            return {\n                value: constants_1._0,\n                methodArguments: removeUndefined([\n                    trade.outputAmount.amount,\n                    calculateSlippage(trade.inputAmount.amount, maxSlippage).maximum,\n                    constants_1._MAX_UINT256,\n                    deadline,\n                    recipient,\n                    trade.outputAmount.token.address\n                ])\n            };\n        }\n        default: {\n            throw Error(\"methodName \" + methodName + \" is invalid.\");\n        }\n    }\n}\nfunction getExecutionDetails(trade, maxSlippage, deadline, recipient) {\n    var reserves = getReserves(trade);\n    if (!reserves.exchange || !reserves.exchange.address) {\n        throw Error('trade does not include exchange address.');\n    }\n    var methodName = getMethodName(trade, !!recipient);\n    var methodId = constants_1.TRADE_METHOD_IDS[methodName];\n    var _a = getValueAndMethodArguments(trade, methodName, maxSlippage || 200, deadline || Math.round(Date.now() / 1000 + 60 * 10), recipient && _utils_1.normalizeAddress(recipient)), value = _a.value, methodArguments = _a.methodArguments;\n    return {\n        exchangeAddress: reserves.exchange.address,\n        methodName: methodName,\n        methodId: methodId,\n        value: value,\n        methodArguments: methodArguments\n    };\n}\nexports.getExecutionDetails = getExecutionDetails;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethers_1 = require(\"ethers\");\nfunction isChainId(chainIdOrProvider) {\n    var chainId = chainIdOrProvider;\n    return typeof chainId === 'number';\n}\nexports.isChainId = isChainId;\nfunction isLowLevelProvider(chainIdOrProvider) {\n    if (isChainId(chainIdOrProvider)) {\n        return false;\n    }\n    else {\n        var provider = chainIdOrProvider;\n        return !ethers_1.ethers.providers.Provider.isProvider(provider);\n    }\n}\nexports.isLowLevelProvider = isLowLevelProvider;\nfunction areTokenReserves(reserves) {\n    var tokenReserves = reserves;\n    return (tokenReserves !== undefined && tokenReserves.ethReserve !== undefined && tokenReserves.tokenReserve !== undefined);\n}\nexports.areTokenReserves = areTokenReserves;\nfunction areETHReserves(reserves) {\n    var tokenReserves = reserves;\n    return (tokenReserves !== undefined && tokenReserves.ethReserve === undefined && tokenReserves.tokenReserve === undefined);\n}\nexports.areETHReserves = areETHReserves;\nfunction areTokenReservesNormalized(reserves) {\n    var tokenReservesNormalized = reserves;\n    return tokenReservesNormalized.ethReserve !== undefined && tokenReservesNormalized.tokenReserve !== undefined;\n}\nexports.areTokenReservesNormalized = areTokenReservesNormalized;\nfunction isFormat(flexibleFormat) {\n    var format = flexibleFormat;\n    return typeof format !== 'boolean';\n}\nexports.isFormat = isFormat;\n//# sourceMappingURL=types.js.map",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @param {boolean} [isFull] Specify a clone including symbols.\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n  var result;\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      if (isHostObject(value)) {\n        return object ? value : {};\n      }\n      result = initCloneObject(isFunc ? {} : value);\n      if (!isDeep) {\n        return copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (!isArr) {\n    var props = isFull ? getAllKeys(value) : keys(value);\n  }\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} prototype The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nfunction baseCreate(proto) {\n  return isObject(proto) ? objectCreate(proto) : {};\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var result = new buffer.constructor(buffer.length);\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n  return object;\n}\n\n/**\n * Copies own symbol properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  return baseClone(value, true, true, customizer);\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = cloneDeepWith;\n"],"sourceRoot":""}