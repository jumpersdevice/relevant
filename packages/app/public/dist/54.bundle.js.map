{"version":3,"sources":["webpack:///./src/modules/tag/tag.actions.js","webpack:///./src/modules/admin/web/topics.container.js"],"names":["styles","Alert","alert","reqOptions","tk","storage","getToken","credentials","headers","Accept","Authorization","setDiscoverTags","data","type","types","payload","selectTag","tag","deselectTag","updateParentTag","setParentTags","getDiscoverTags","dispatch","fetch","process","method","then","api","handleErrors","response","json","responseJSON","catch","err","message","searchTags","error","createTag","body","JSON","stringify","status","updateTag","getParentTags","TopicsAdmin","Component","constructor","props","super","this","state","topic","emoji","handleChange","bind","componentDidMount","actions","event","setState","target","name","value","e","archiveTag","active","saveTag","main","split","filter","t","children","newTag","_id","categoryName","category","render","tags","parentTags","style","topicsContainerStyle","placeholder","onChange","onClick","map","newId","join","textDecoration","key","count","PropTypes","object","array","display","flexDirection","alignItems","connect","auth","bindActionCreators","tagActions"],"mappings":"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","file":"54.bundle.js","sourcesContent":["import * as types from 'core/actionTypes';\nimport { storage, api, alert } from 'app/utils';\n\nconst Alert = alert.Alert();\n\nconst reqOptions = async () => {\n  const tk = await storage.getToken();\n  return {\n    credentials: 'include',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${tk}`\n    }\n  };\n};\n\nexport function setDiscoverTags(data) {\n  return {\n    type: types.SET_DISCOVER_TAGS,\n    payload: data\n  };\n}\n\nexport function selectTag(tag) {\n  return {\n    type: 'SELECT_TAG',\n    payload: tag\n  };\n}\n\nexport function deselectTag(tag) {\n  return {\n    type: 'DESELECT_TAG',\n    payload: tag\n  };\n}\n\nexport function updateParentTag(tag) {\n  return {\n    type: types.UPDATE_PARENT_TAG,\n    payload: tag\n  };\n}\n\nexport function setParentTags(data) {\n  return {\n    type: types.SET_PARENT_TAGS,\n    payload: data\n  };\n}\n\nexport function getDiscoverTags() {\n  return dispatch => {\n    fetch(process.env.API_SERVER + '/api/tag?sort=count', {\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(api.handleErrors)\n    .then(response => response.json())\n    .then(responseJSON => {\n      dispatch(setDiscoverTags(responseJSON));\n    })\n    .catch(err => Alert('Error getting tags ' + err.message));\n  };\n}\n\nexport function searchTags(tag) {\n  return dispatch => {\n    if (!tag || tag === '') {\n      return dispatch(setDiscoverTags([]));\n    }\n    return fetch(process.env.API_SERVER + '/api/tag/search/' + tag, {\n      credentials: 'include',\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(responseJSON => {\n      dispatch(setDiscoverTags(responseJSON));\n    })\n    .catch(error => {\n      Alert('Search error ', error);\n    });\n  };\n}\n\nexport function createTag(tag) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/tag', {\n      ...(await reqOptions()),\n      method: 'POST',\n      body: JSON.stringify(tag)\n    })\n    .then(response => response.json())\n    .then(responseJSON => {\n      dispatch(setParentTags([responseJSON]));\n    })\n    .catch(error => {\n      Alert('error creating tag ' + error);\n      return { status: false, data: error };\n    });\n}\n\nexport function updateTag(tag) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/tag/categories', {\n      ...(await reqOptions()),\n      method: 'PUT',\n      body: JSON.stringify(tag)\n    })\n    .then(response => response.json())\n    .then(responseJSON => {\n      dispatch(updateParentTag(responseJSON));\n    });\n}\n\nexport function getParentTags() {\n  return async dispatch => {\n    fetch(process.env.API_SERVER + '/api/tag/categories?active', {\n      method: 'GET',\n      ...(await reqOptions())\n    })\n    .then(response => response.json())\n    .then(responseJSON => {\n      dispatch(setParentTags(responseJSON));\n    })\n    .catch(error => Alert('parents error', error));\n  };\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as tagActions from 'modules/tag/tag.actions';\n\n// import styled from 'styled-components';\n\nlet styles;\n\nclass TopicsAdmin extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    tags: PropTypes.array\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      topic: '',\n      emoji: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.updateTag = this.updateTag.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.actions.getParentTags();\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  updateTag(e, tag) {\n    tag[e.target.name] = e.target.value;\n    this.props.actions.updateParentTag(tag);\n  }\n\n  archiveTag(tag) {\n    tag.active = !tag.active;\n    this.props.actions.updateTag(tag);\n  }\n\n  saveTag(tag) {\n    tag.main = tag.main.split(', ')\n    .filter(t => t !== '');\n    tag.children = tag.children.split(', ')\n    .filter(t => t !== '');\n    this.props.actions.updateTag(tag);\n  }\n\n  newTag() {\n    const tag = {\n      _id: this.state.topic + '_category_tag',\n      categoryName: this.state.topic,\n      category: true,\n      emoji: this.state.emoji\n    };\n    this.props.actions.createTag(tag);\n  }\n\n  render() {\n    let tags = this.props.tags.parentTags || [];\n    tags = [...tags.filter(tag => tag.active), ...tags.filter(tag => !tag.active)];\n\n    return (\n      <div style={styles.topicsContainerStyle}>\n        <input\n          type={'text'}\n          name={'topic'}\n          placeholder={'topic'}\n          value={this.state.topic}\n          onChange={this.handleChange}\n        />\n        <input\n          type={'text'}\n          name={'emoji'}\n          placeholder={'emoji'}\n          value={this.state.emoji}\n          onChange={this.handleChange}\n        />\n        <button onClick={() => this.newTag()}>Add new category</button>\n        {tags.map(tag => {\n          if (!tag.newId) tag.newId = tag._id;\n          if (tag.main && typeof tag.main !== 'string') {\n            tag.main = tag.main.join(', ');\n          }\n          if (tag.children && typeof tag.children !== 'string') {\n            tag.children = tag.children.join(', ');\n          }\n          return (\n            <div\n              style={tag.active ? null : { textDecoration: 'line-through' }}\n              key={tag._id}\n            >\n              {tag.emoji}\n              &nbsp;\n              <input\n                type={'text'}\n                name={'categoryName'}\n                placeholder={'topic'}\n                value={tag.categoryName}\n                onChange={e => this.updateTag(e, tag)}\n              />\n              <input\n                type={'text'}\n                name={'newId'}\n                placeholder={'_id'}\n                value={tag.newId}\n                onChange={e => this.updateTag(e, tag)}\n              />\n              <input\n                type={'text'}\n                name={'main'}\n                placeholder={'main'}\n                value={tag.main}\n                onChange={e => this.updateTag(e, tag)}\n              />\n              <input\n                type={'text'}\n                name={'children'}\n                placeholder={'children'}\n                value={tag.children}\n                onChange={e => this.updateTag(e, tag)}\n              />\n              &nbsp;\n              {tag.count}\n              &nbsp;\n              <button onClick={() => this.archiveTag(tag)}>remove</button>\n              <button onClick={() => this.saveTag(tag)}>save</button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\n// const TopicsContainer = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   alignItems: center;\n// `;\n\nstyles = {\n  topicsContainerStyle: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n};\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    tags: state.tags\n  }),\n  dispatch => ({\n    actions: bindActionCreators(tagActions, dispatch)\n  })\n)(TopicsAdmin);\n"],"sourceRoot":""}