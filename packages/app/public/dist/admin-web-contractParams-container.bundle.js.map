{"version":3,"sources":["webpack:////Users/slavab/local/relevant/node_modules/lodash/_basePickBy.js","webpack:////Users/slavab/local/relevant/node_modules/lodash/pickBy.js","webpack:///./src/core/config.js","webpack:///./src/modules/profile/apollo.demo.js","webpack:///./src/modules/admin/web/treasury.js","webpack:///./src/modules/admin/web/contractParams.container.js","webpack:///./src/modules/contract/contract.hooks.js","webpack:///./src/modules/contract/contract.selectors.js","webpack:///./src/modules/styled/web.js","webpack:///./src/utils/eth.js","webpack:///./src/utils/web3.provider.js"],"names":["baseGet","baseSet","castPath","module","exports","object","paths","predicate","index","length","result","path","value","arrayMap","baseIteratee","basePickBy","getAllKeysIn","props","prop","INFURA_PROTOCOL","process","INFURA_NETWORK","INFURA_API_KEY","NETWORK_NUMBER","SUBSCRIBE","gql","GET_ME","Test","useQuery","data","loading","error","subscribeToMore","useEffect","unsubscribe","document","message","me","handle","email","balance","contractParams","tableData","label","contract","db","GET_TREASURY","Treasury","useRelevantToken","getState","call","forEach","method","m","maxWidth","border","colors","lightGrey","p","fdirection","br","mr","flex","pl","map","row","i","key","bg","distributedTokens","toString","ParamsTable","styled","table","AdminActions","div","TokenPanel","ContractParams","userBalance","accounts","send","useContract","types","initialized","readableMethods","concat","Object","keys","pickBy","methods","_","getReadableMethods","useState","allocateAmount","setAllocateAmount","state","parseBN","mt","onClick","from","align","type","onChange","e","target","formatBalanceWrite","ParamRow","abbreviateNumber","propTypes","PropTypes","string","func","Alert","alert","_web3","getProvider","useRelevantActions","tokenActions","actions","tokenAddress","dispatch","useDispatch","getEvent","useCallback","event","events","get","at","subscribeToEvent","subscribe","args","options","useWeb3","useMetamask","web3","useWeb3State","init","web3Instance","_web3Actions","network","bindActionCreators","isInitialized","status","networkId","metamask","getMetamask","autoRefreshOnNetworkChange","enable","err","getAccounts","_accounts","getSuccess","getNetworkId","getId","on","off","useBalance","useRelevantState","haveBalance","phase","formatBN","useTxState","tx","callback","txState","payload","selectUserBalance","selectors","address","balanceOf","items","selectUserNonce","nonceOf","formatSelection","el","useSelector","id","userNonce","RelevantToken","eventCache","StyledNavLink","NavLink","fonts","header","grey","black","mixins","font","display","color","margin","View","padding","background","width","height","Text","span","InlineText","Image","img","borderRadius","Divider","layout","universalBorder","Title","title","LinkFont","link","SecondaryText","secondaryText","BodyText","altLink","commentText","bodyStyle","Button","button","buttonFont","disabled","white","activeButtonShadow","NumericalValue","numericalValue","inheritfont","InputPlain","input","sizing","blue","Input","StyledTextareaAutocomplete","ReactTextareaAutocomplete","StyledTextarea","TextareaAutosize","Form","form","Video","video","signMessage","provider","a","signer","getSigner","now","Date","exp","Math","floor","setMinutes","getMinutes","msg","JSON","stringify","signature","truncateAddress","slice","hex","getBN","decimals","numString","Number","trailingZeroes","getTrailingZeros","withoutZeros","parseFloat","toFixed","generateSalt","crypto","randomBytes","formatBalanceRead","balString","rpcUrl","defaultOptions","getRpcUrl","getNetworkName","parseInt","window","ethereum","initProvider","createProvider","Web3","protocol","apiKey","buildRpcUrl","providers","WebsocketProvider","HttpProvider"],"mappings":"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","file":"admin-web-contractParams-container.bundle.js","sourcesContent":["var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n","export const { INFURA_PROTOCOL } = process.env;\nexport const { INFURA_NETWORK } = process.env;\nexport const { INFURA_API_KEY } = process.env;\nexport const { NETWORK_NUMBER } = process.env;\n","import React, { useEffect } from 'react';\nimport { View, BodyText } from 'modules/styled/uni';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst SUBSCRIBE = gql`\n  subscription {\n    userUpdated {\n      _id\n      balance\n      handle\n      name\n      email\n    }\n  }\n`;\n\nconst GET_ME = gql`\n  query {\n    me(filter: { handle: \"slava\" }) {\n      _id\n      handle\n      balance\n      name\n      email\n    }\n  }\n`;\n\nexport default function Test() {\n  const { data, loading, error, subscribeToMore } = useQuery(GET_ME);\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({ document: SUBSCRIBE });\n    return () => unsubscribe();\n  }, [subscribeToMore]);\n  if (loading) return <BodyText>Loading...</BodyText>;\n  if (error) return <BodyText>ERROR: {error.message}</BodyText>;\n  return (\n    <View>\n      <BodyText>\n        handle: {data.me.handle}, email: {data.me.email}, balance={data.me.balance}\n      </BodyText>\n    </View>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { View, BodyText, NumericalValue } from 'modules/styled/uni';\nimport { useRelevantToken } from 'modules/contract/contract.hooks';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { colors } from 'styles';\n\nconst contractParams = [\n  'totalReleased',\n  'allocatedRewards',\n  'rewardFund',\n  'airdropFund',\n  'allocatedAirdrops'\n];\n\nconst tableData = [\n  { label: 'Total Released Tokens', contract: 'totalReleased' },\n  { label: 'Curation Reward Fund', contract: 'rewardFund', db: 'rewardFund' },\n  {\n    label: 'Allocated Curation Rewards',\n    contract: 'allocatedRewards',\n    db: 'curationRewards'\n  },\n  { label: 'Earnings', db: 'earned' },\n  { label: 'Airdrop Fund', contract: 'airdropFund' },\n  { label: 'Allocated Airdrops', contract: 'allocatedAirdrops', db: 'airdrop' }\n];\n\nconst GET_TREASURY = gql`\n  query {\n    distributedTokens {\n      balance\n      legacyTokens\n      airdropTokens\n      cashedOut\n      curationRewards\n      airdrop\n      earned\n      rewardFund\n    }\n  }\n`;\n\nexport default function Treasury() {\n  const { data, loading, error } = useQuery(GET_TREASURY);\n  const { getState, call } = useRelevantToken();\n\n  useEffect(() => {\n    call && contractParams.forEach(method => call(method));\n  }, [call]);\n\n  if (loading) return <BodyText>Loading...</BodyText>;\n  if (error) return <BodyText>ERROR: {error.message}</BodyText>;\n  return (\n    <View m={[4, 2]} maxWidth={75} border={colors.lightGrey}>\n      <View p={1} fdirection={'row'}>\n        <NumericalValue br={colors.lightGrey} mr={1} flex={1}>\n          contract\n        </NumericalValue>\n        <NumericalValue br={colors.lightGrey} mr={1} flex={1}>\n          db\n        </NumericalValue>\n        <NumericalValue flex={1} pl={1}>\n          difference\n        </NumericalValue>\n      </View>\n      {tableData.map((row, i) => (\n        <View key={i}>\n          <BodyText p={1} bg={colors.lightGrey}>\n            {row.label}\n          </BodyText>\n          <View p={1} fdirection={'row'}>\n            <BodyText br={colors.lightGrey} mr={1} flex={1}>\n              {getState(row.contract).value && getState(row.contract).value / 1e18}\n            </BodyText>\n            <BodyText br={colors.lightGrey} mr={1} flex={1}>\n              {data.distributedTokens[row.db]}\n            </BodyText>\n            <BodyText flex={1}>\n              {row.contract && row.db\n                ? (\n                    getState(row.contract).value / 1e18 -\n                    data.distributedTokens[row.db]\n                  ).toString()\n                : ''}\n            </BodyText>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n}\n","import React, { useEffect, Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport pickBy from 'lodash/pickBy';\nimport { abbreviateNumber } from 'app/utils/numbers';\nimport {\n  View,\n  Title,\n  BodyText,\n  SecondaryText,\n  Button,\n  NumericalValue\n} from 'modules/styled/uni';\nimport { useRelevantToken } from 'modules/contract/contract.hooks';\nimport { formatBalanceWrite, parseBN } from 'app/utils/eth';\nimport { Input } from 'app/modules/styled/web';\nimport Test from 'modules/profile/apollo.demo';\nimport { useContract } from 'modules/contract/contract.context';\nimport Treasury from './treasury';\n\nconst ParamsTable = styled.table`\n  margin-top: 10px;\n  margin-left: 20px;\n  th,\n  td {\n    padding: 15px;\n    text-align: left;\n  }\n  tr:nth-child(even) {\n    background-color: #f8f8f8;\n  }\n`;\n\nconst AdminActions = styled.div`\n  max-width: 280px;\n  margin-top: 10px;\n`;\n\nexport default function TokenPanel() {\n  return (\n    <Fragment>\n      <Treasury />\n      <Test />\n      <ContractParams />\n    </Fragment>\n  );\n}\n\nfunction ContractParams() {\n  const { userBalance, accounts, send, call, getState } = useRelevantToken();\n  const { types, initialized } = useContract();\n  const readableMethods = types ? getReadableMethods(types) : [];\n  const [allocateAmount, setAllocateAmount] = useState();\n\n  useEffect(() => {\n    if (!initialized) return;\n    call && readableMethods.forEach(method => call(method));\n  }, [call, initialized]); // eslint-disable-line\n\n  const releaseTokens = () => send('releaseTokens', { from: accounts[0] });\n  const allocateRewards = () =>\n    send(\n      'allocateRewards',\n      { from: accounts[0] },\n      formatBalanceWrite(allocateAmount, 18)\n    );\n\n  return (\n    <View m={4}>\n      <Title>Contract Params</Title>\n      <View>\n        <View>\n          <SecondaryText>\n            User address: {accounts && accounts[0] ? accounts[0] : 'Loading...'}\n          </SecondaryText>\n          <SecondaryText>\n            User balance:{' '}\n            {userBalance && userBalance.value\n              ? parseBN(userBalance.value).toString()\n              : 'Loading...'}\n          </SecondaryText>\n          {accounts && accounts[0] && (\n            <AdminActions>\n              <Button mr={'auto'} mt={4} onClick={() => releaseTokens()}>\n                Release Tokens\n              </Button>\n              <View mt={4} fdirection=\"row\" align={'flex-start'}>\n                <Input\n                  mt={'0'}\n                  p={1.7}\n                  type=\"text\"\n                  value={allocateAmount}\n                  onChange={e => setAllocateAmount(e.target.value)}\n                />\n                <Button mr={'auto'} onClick={() => allocateRewards()}>\n                  Allocate Rewards\n                </Button>\n              </View>\n            </AdminActions>\n          )}\n          <BodyText>\n            <ParamsTable>\n              <tbody>\n                <tr>\n                  <th>Method</th>\n                  <th>Value</th>\n                </tr>\n              </tbody>\n              <tbody>\n                {hasValue(getState) &&\n                  readableMethods.map(method => (\n                    <ParamRow\n                      key={method}\n                      method={method}\n                      getState={getState}\n                      call={call}\n                    />\n                  ))}\n              </tbody>\n            </ParamsTable>\n          </BodyText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nParamRow.propTypes = {\n  method: PropTypes.string,\n  getState: PropTypes.func,\n  call: PropTypes.func\n};\n\nfunction ParamRow({ method, call, getState }) {\n  return (\n    <tr>\n      <td>{method}</td>\n      <td>\n        <NumericalValue>{abbreviateNumber(getState(method).value)}</NumericalValue>\n      </td>\n      <td>\n        <Button onClick={() => call(method)}>Call</Button>\n      </td>\n      <td>\n        <Input />\n      </td>\n    </tr>\n  );\n}\n\n// Utils\nfunction hasValue(state) {\n  return state && state('name') && state('name').value;\n}\n\nfunction getReadableMethods(types) {\n  return ['allocatedRewards', 'totalReleased'].concat(\n    Object.keys(\n      pickBy(\n        types.methods,\n        (_, method) =>\n          !types.methods[method].send &&\n          method !== 'balanceOf' &&\n          method !== 'isMinter' &&\n          method !== 'allowance' &&\n          method !== 'partialSum' &&\n          method !== 'nonceOf' &&\n          method !== 'isOwner' &&\n          method !== 'allocatedRewards' &&\n          method !== 'totalReleased' &&\n          method !== 'currentRound' &&\n          method !== 'initializeRewardSplit' &&\n          method !== 'airdropSwitchRound'\n      )\n    )\n  );\n}\n","import { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { formatBN } from 'utils/eth';\nimport { getProvider, getMetamask } from 'utils/web3.provider';\nimport { bindActionCreators } from 'redux';\nimport { actions as _web3Actions } from 'redux-saga-web3';\nimport { alert } from 'app/utils';\nimport { useWeb3State, useRelevantState } from './contract.selectors';\nimport { useContract } from './contract.context';\n\nconst Alert = alert.Alert();\nconst _web3 = getProvider();\n\nexport const useWeb3Actions = () => {\n  const dispatch = useDispatch();\n  return {\n    init: useCallback(web3Instance => dispatch(_web3Actions.init.init(web3Instance)), [\n      dispatch\n    ]),\n    network: bindActionCreators({ ..._web3Actions.network }, dispatch),\n    accounts: bindActionCreators({ ..._web3Actions.accounts }, dispatch)\n  };\n};\n\nexport const useRelevantActions = () => {\n  const { actions: tokenActions, tokenAddress } = useContract();\n  const dispatch = useDispatch();\n  const actions = {\n    getEvent: useCallback(\n      event => {\n        dispatch(tokenActions.events[event].get({ at: tokenAddress }));\n      },\n      [dispatch, tokenActions, tokenAddress]\n    ),\n    subscribeToEvent: useCallback(\n      event => {\n        dispatch(tokenActions.events[event].get({ at: tokenAddress }));\n        return dispatch(tokenActions.events[event].subscribe({ at: tokenAddress }));\n      },\n      [dispatch, tokenActions, tokenAddress]\n    ),\n    call: useCallback(\n      (method, args) => {\n        if (args)\n          return dispatch(tokenActions.methods[method]({ at: tokenAddress }).call(args));\n        return dispatch(tokenActions.methods[method]({ at: tokenAddress }).call());\n      },\n      [dispatch, tokenActions, tokenAddress]\n    ),\n    send: useCallback(\n      (method, options, ...args) => {\n        if (args) {\n          return dispatch(\n            tokenActions.methods[method]({\n              at: tokenAddress,\n              ...options\n            }).send(...args)\n          );\n        }\n        return dispatch(\n          tokenActions.methods[method]({\n            at: tokenAddress,\n            ...options\n          }).send()\n        );\n      },\n      [dispatch, tokenActions, tokenAddress]\n    )\n  };\n  return tokenActions ? actions : {};\n};\n\nexport const useWeb3 = () => {\n  useContract();\n  useMetamask();\n  const web3 = useWeb3State();\n  const { init } = useWeb3Actions();\n  useEffect(() => {\n    // TODO this init function opens a connect popup which prevents\n    // the display of a custom popup (like connect/signature)\n    if (!web3.isInitialized) init(_web3);\n  }, [web3.status, web3.isInitialized, init]);\n  return [web3.accounts, web3.isInitialized, web3.networkId];\n};\n\n// Perhaps this should not be an effect?\n// This is just global metamask setup that should be done once.\n// But we need to consider the case where we start out with no metamask and then enable metamask.\nexport const useMetamask = () => {\n  const dispatch = useDispatch();\n  const metamask = getMetamask();\n  if (metamask) metamask.autoRefreshOnNetworkChange = false;\n\n  useEffect(() => {\n    if (!metamask) return () => {};\n    try {\n      metamask.enable();\n    } catch (err) {\n      return () => {};\n    }\n\n    const getAccounts = _accounts =>\n      dispatch(_web3Actions.accounts.getSuccess(_accounts));\n    const getNetworkId = () => dispatch(_web3Actions.network.getId());\n\n    metamask.on('accountsChanged', getAccounts);\n    metamask.on('networkChanged', getNetworkId);\n    return () => {\n      metamask.off('accountsChanged', getAccounts);\n      metamask.off('networkChanged', getNetworkId);\n    };\n  }, [dispatch, metamask]);\n  return metamask;\n};\n\nexport const useBalance = () => {\n  const { accounts } = useWeb3State();\n  const { userBalance } = useRelevantState();\n  const { call, subscribeToEvent } = useRelevantActions();\n  const haveBalance = !!userBalance;\n\n  useEffect(() => {\n    subscribeToEvent && subscribeToEvent('Transfer');\n    if (accounts && accounts.length && !haveBalance) {\n      call && call('balanceOf', accounts[0]);\n    }\n  }, [accounts, haveBalance, call, subscribeToEvent]);\n\n  const relCoins =\n    userBalance && userBalance.phase === 'SUCCESS'\n      ? formatBN(userBalance.value, 18)\n      : null;\n\n  return relCoins;\n};\n\nexport const useEventSubscription = () => {\n  const { subscribeToEvent } = useRelevantActions();\n  useEffect(() => {\n    subscribeToEvent('Released');\n  }, [subscribeToEvent]);\n};\n\n// DEPRECATED backwards compatability\n\n// Rerturns [Accounts, Relevant State, Relevant Actions]\nexport const useTokenContract = () => {\n  useContract();\n  const { getState } = useRelevantState();\n  const web3 = useWeb3State();\n  const { call, send } = useRelevantActions();\n  useWeb3();\n  useBalance();\n  // useEventSubscription(ethActions);\n  return [\n    web3.accounts,\n    { methodCache: { select: getState } },\n    { cacheMethod: call, cacheSend: send }\n  ];\n};\n\n// Rerturns [Accounts, Relevant State, Relevant Actions]\nexport const useRelevantToken = () => {\n  useContract();\n  const { getState } = useRelevantState();\n  const web3 = useWeb3State();\n  const { call, send } = useRelevantActions();\n  useWeb3();\n  useBalance();\n  // useEventSubscription(ethActions);\n  return { accounts: web3.accounts, getState, call, send };\n};\n\nexport const useTxState = ({ tx, method, callback }) => {\n  const { getState } = useRelevantState();\n  if (!tx || !getState) return null;\n\n  const txState = getState(method, ...tx.payload.args);\n\n  if (txState && txState.phase === 'RECEIPT') {\n    Alert.alert('Transaction Completed!', 'success');\n    callback();\n    return 'success';\n  }\n\n  if (txState && txState.phase === 'ERROR') {\n    Alert.alert(txState.value.get('message'));\n    callback();\n    return 'error';\n  }\n\n  return 'pending';\n};\n","import { useSelector } from 'react-redux';\nimport { parseBN } from 'app/utils/eth';\nimport { useContract } from './contract.context';\n\nexport const selectUserBalance = (selectors, state, address) =>\n  selectors.methods.balanceOf({ at: address })(\n    state,\n    state.web3 && state.web3.accounts.items && state.web3.accounts.items[0]\n  );\n\nexport const selectUserNonce = (selectors, state, address) =>\n  selectors.methods.nonceOf({ at: address })(\n    state,\n    state.web3 && state.web3.accounts.items && state.web3.accounts.items[0]\n  );\n\nexport const selectCashOut = (selectors, state, address) =>\n  selectors.methods.cashOut({ at: address })(\n    state,\n    state.web3 && state.web3.accounts.items && state.web3.accounts.items[0]\n  );\n\nexport const formatSelection = el => {\n  if (!el) return {};\n  const value = typeof parseBN(el.value) !== 'number' ? parseBN(el.value) : el.value;\n  return { ...el, value };\n};\n\nexport const useWeb3State = () => {\n  useContract();\n  return useSelector(state => ({\n    web3: state.web3,\n    status: state.web3 && state.web3.init.status,\n    isInitialized: state.web3 && state.web3.init.isInitialized,\n    networkId: state.web3 && state.web3.network.id && state.web3.network.id,\n    accounts: state.web3 && state.web3.accounts.items && state.web3.accounts.items,\n    address: state.web3 && state.web3.accounts.items && state.web3.accounts.items[0]\n  }));\n};\n\nexport const useRelevantState = () => {\n  const { selectors, tokenAddress, initialized } = useContract();\n  return useSelector(state => {\n    return initialized\n      ? {\n          userNonce: selectUserNonce(selectors, state, tokenAddress),\n          userBalance: selectUserBalance(selectors, state, tokenAddress),\n          RelevantToken: state.RelevantToken,\n          getState: (method, ...args) =>\n            selectors.methods[method]\n              ? formatSelection(\n                  selectors.methods[method]({ at: tokenAddress })(state, ...args)\n                )\n              : {},\n          eventCache: event => selectors.events[event]\n        }\n      : { getState: () => ({}) };\n  });\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { mixins, layout, fonts, colors, sizing } from 'app/styles';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport ReactTextareaAutocomplete from '@webscopeio/react-textarea-autocomplete';\n\nexport const StyledNavLink = styled(NavLink)`\n  ${fonts.header};\n  color: ${colors.grey};\n  &.active {\n    color: ${colors.black};\n  }\n  :hover {\n    color: ${colors.black};\n  }\n  ${mixins.font}\n  ${mixins.display}\n  ${mixins.color}\n  ${mixins.margin}\n`;\n\nexport const View = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.width}\n  ${mixins.height}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const Text = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const InlineText = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n`;\n\nexport const Image = styled.img`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n\nexport const ImageWrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${mixins.margin}\n  ${mixins.flex}\n`;\n\nexport const Divider = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.width}\n  ${layout.universalBorder('bottom')}\n`;\n\nexport const Header = styled(Text)`\n  ${fonts.header}\n  ${mixins.color}\n`;\n\nexport const Title = styled(Text)`\n  ${fonts.title}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const LinkFont = styled(Text)`\n  ${fonts.link}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const SecondaryText = styled(Text)`\n  ${fonts.secondaryText}\n  ${mixins.font}\n  ${mixins.color}\n`;\n\nexport const AltLink = styled(Text)`\n  ${fonts.altLink}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const CommentText = styled(Text)`\n  ${fonts.commentText}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const BodyText = styled(Text)`\n  ${fonts.bodyStyle}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const Button = styled.button`\n  ${layout.button}\n  ${layout.buttonFont}\n  ${p =>\n    p.disabled\n      ? `\n    color: ${colors.white};\n    background: ${colors.grey};\n    `\n      : ''};\n  ${mixins.flex}\n  ${mixins.background}\n  ${mixins.padding}\n  ${mixins.width}\n  ${mixins.margin}\n  ${mixins.color}\n  ${mixins.width}\n  ${mixins.height}\n  &:hover {\n    ${layout.activeButtonShadow}\n  };\n  user-select: none; cursor: pointer;\n`;\n\nexport const NumericalValue = styled(Text)`\n  ${fonts.numericalValue}\n  ${mixins.width}\n  ${mixins.font}\n  ${mixins.inheritfont}\n  ${mixins.color}\n`;\n\nexport const InputPlain = styled.input`\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const Input = styled.input`\n  padding: ${sizing(2)} ${sizing(2)};\n  margin-top: ${sizing(1)};  ${fonts.bodyStyle}\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${layout.universalBorder()}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const StyledTextareaAutocomplete = styled(ReactTextareaAutocomplete)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const StyledTextarea = styled(TextareaAutosize)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const Form = styled.form`\n  ${mixins.flex}\n  ${mixins.margin}\n`;\n\nexport const Video = styled.video`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n","import crypto from 'crypto';\n\nexport async function signMessage(provider, address) {\n  const signer = provider.getSigner();\n\n  const now = new Date();\n  const exp = Math.floor(now.setMinutes(now.getMinutes() + 5) / 1000);\n  const msg = {\n    address,\n    exp\n  };\n  const signature = await signer.signMessage(JSON.stringify(msg));\n  return { msg, signature };\n}\n\nexport function truncateAddress(address) {\n  if (!address) return null;\n  return address.slice(0, 6) + '...' + address.slice(address.length - 4, address.length);\n}\n\nexport function parseBN(value) {\n  return value && value.get ? getBN(value) : value;\n}\n\nexport function getBN(value) {\n  const hex = value.get('_hex');\n  if (hex === '0x00') {\n    return 0;\n  }\n  return formatBN(hex, 18);\n}\n\nexport function formatBN(hex, decimals = 18) {\n  const numString = Number(hex).toString();\n  // console.log('numString', numString);\n  if (numString[numString.length - 3] === '+') {\n    const trailingZeroes = getTrailingZeros(numString, decimals);\n    const result = Number(withoutZeros(numString) + trailingZeroes);\n\n    return Number.parseFloat(result).toFixed(0);\n  }\n  if (numString.length > 18) {\n    return Number(numString.slice(0, -18));\n  }\n  if (numString.length === 18) {\n    return Number(`0.${numString}`);\n  }\n  return Number(numString);\n}\n\nexport function generateSalt() {\n  return crypto.randomBytes(16).toString('hex');\n}\n\nexport function formatBalanceRead(balString) {\n  return `${balString.slice(0, -18)}.${balString.slice(-18)}`;\n}\n\nexport function formatBalanceWrite(balString, decimals = 18) {\n  return (balString * 10 ** decimals).toString();\n}\n\nexport function appendZeroes(numString, amount) {\n  return `${numString}${'0'.repeat(amount)}`;\n}\n\nexport function removeDecimal(balString) {\n  return balString.split('.').join('');\n}\n\nexport function withoutZeros(numString) {\n  return numString.slice(0, -2).toString();\n}\n\nexport function getTrailingZeros(numString, decimals) {\n  return Number(Number(numString.slice(-2)) - decimals).toString();\n}\n","import Web3 from 'web3';\nimport { INFURA_PROTOCOL, INFURA_NETWORK, INFURA_API_KEY } from 'core/config';\n\nlet web3;\nlet rpcUrl;\nlet metamask;\n\nconst defaultOptions = { rpcUrl: getRpcUrl(), metamask: null };\n\nexport function getNetworkName(id) {\n  switch (parseInt(id, 10)) {\n    case 1:\n      return 'Mainnet';\n    case 4:\n      return 'Rinkeby';\n    case 3:\n      return 'Ropsten';\n    case 5:\n      return 'Goerli';\n    case 42:\n      return 'Kovan';\n    default:\n      return 'Unknown';\n  }\n}\n\nexport function getMetamask() {\n  return metamask || initMetamask();\n}\n\nexport function getProvider(options = defaultOptions) {\n  return options.metamask || options.rpcUrl !== defaultOptions.rpcUrl\n    ? initProvider(options)\n    : web3 || initProvider();\n}\n\nexport function initMetamask() {\n  metamask = typeof window !== 'undefined' && window.ethereum ? window.ethereum : null;\n  return metamask;\n}\n\nexport function initProvider(options = defaultOptions) {\n  const provider = createProvider(options);\n  web3 = new Web3(provider);\n  return web3;\n}\n\nexport function getRpcUrl() {\n  return rpcUrl || buildRpcUrl();\n}\n\nexport function createProvider(options = defaultOptions) {\n  if (options.metamask) return options.metamask;\n  return options.rpcUrl.slice(0, 2) === 'ws'\n    ? new Web3.providers.WebsocketProvider(options.rpcUrl)\n    : new Web3.providers.HttpProvider(options.rpcUrl);\n}\n\nexport function buildRpcUrl(\n  protocol = INFURA_PROTOCOL,\n  network = INFURA_NETWORK,\n  apiKey = INFURA_API_KEY\n) {\n  rpcUrl = `${protocol}s://${network}.infura.io/${\n    protocol === 'ws' ? 'ws/' : ''\n  }v3/${apiKey}`;\n  return rpcUrl;\n}\n"],"sourceRoot":""}