{"version":3,"sources":["webpack:///./src/modules/admin/admin.actions.js","webpack:///./src/modules/admin/web/waitlist.component.js","webpack:///./src/modules/ui/web/ShadowButton.js"],"names":["Alert","alert","API","process","inviteSchema","schema","Entity","idAttribute","listSchema","setInvites","data","community","skip","type","types","payload","setWaitlist","deleteWaitlistUsers","users","updateInvite","invite","destroyInvite","setInviteCount","count","getInviteCount","dispatch","a","api","request","method","endpoint","path","message","getInvites","limit","query","responseJSON","normalize","invites","createInvite","body","JSON","stringify","res","destroy","fetch","_id","reqOptions","then","handleErrors","catch","error","console","log","getWaitlist","response","json","wait","inviteFromWaitlist","err","signupForMailingList","user","setDownvotes","getDownvotes","sendEmail","email","saveEmail","loadEmail","deleteWaitlistUser","sendPostNotification","post","require","Waitlist","props","handleChange","bind","sendInvites","state","number","this","actions","window","confirm","admin","waitList","slice","map","id","event","setState","target","name","value","waitlistId","key","className","status","onClick","waitlist","renderWaitlist","style","width","textAlign","placeholder","onChange","backgroundColor","color","maxWidth","Component","PropTypes","object","propTypes","connect","auth","bindActionCreators","adminActions","ShadowButton","children","func","node"],"mappings":"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","file":"admin-web-waitlist-component.bundle.js","sourcesContent":["/* eslint-disable no-console */\nimport { normalize, schema } from 'normalizr';\nimport * as types from 'core/actionTypes';\nimport { alert, api } from 'app/utils';\n\nconst Alert = alert.Alert();\nconst API = process.env.API_SERVER + '/api';\n\nconst inviteSchema = new schema.Entity(\n  'invites',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nconst listSchema = new schema.Entity(\n  'wait',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nexport function setInvites({ data, community, skip }) {\n  return {\n    type: types.SET_INVITES,\n    payload: {\n      data,\n      community,\n      skip\n    }\n  };\n}\n\nexport function setWaitlist(data) {\n  return {\n    type: types.SET_WAITLIST,\n    payload: data\n  };\n}\n\nexport function deleteWaitlistUsers(users) {\n  return {\n    type: types.DELETE_WAITLIST_USER,\n    payload: users\n  };\n}\n\nexport function updateInvite(invite) {\n  return {\n    type: types.UPDATE_INVITE,\n    payload: invite\n  };\n}\n\nexport function destroyInvite(invite) {\n  return {\n    type: types.DESTROY_INVITE,\n    payload: invite\n  };\n}\n\nexport function setInviteCount(count) {\n  return {\n    type: types.SET_INVITE_COUNT,\n    payload: count\n  };\n}\n\nexport function getInviteCount() {\n  return async dispatch => {\n    try {\n      const count = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invites',\n          path: '/count'\n        })\n      );\n\n      dispatch(setInviteCount(count));\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function getInvites(skip, limit, community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          query: { skip, limit },\n          endpoint: 'invites',\n          path: ''\n        })\n      );\n      const data = normalize(\n        {\n          invites: responseJSON\n        },\n        {\n          invites: [inviteSchema]\n        }\n      );\n      dispatch(setInvites({ data, community, skip }));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function createInvite(invite) {\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invites',\n          path: '/',\n          body: JSON.stringify(invite)\n        })\n      );\n      dispatch(updateInvite(res.invite[0]));\n      dispatch(setInviteCount(res.count));\n      return res;\n    } catch (error) {\n      Alert.alert(error.message);\n      return false;\n    }\n  };\n}\n\n// export function sendInvitationEmail(id) {\n//   return async dispatch =>\n//     fetch(API + '/invites/email', {\n//       method: 'POST',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         inviteId: id\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       Alert.alert('Invitation email has been sent');\n//     })\n//     .catch(error => {\n//       console.log('invites error', error);\n//     });\n// }\n\n// export function checkInviteCode(code) {\n//   return async dispatch =>\n//     fetch(API + '/invites', {\n//       method: 'PUT',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         code\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       if (responseJSON) return responseJSON;\n//       return false;\n//     })\n//     .catch(error => {\n//       Alert.alert(error.message);\n//       console.log('invites error', error);\n//     });\n// }\n\nexport function destroy(invite) {\n  return async dispatch =>\n    fetch(API + '/invites/' + invite._id, {\n      method: 'DELETE',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert('removed item');\n        dispatch(destroyInvite(invite));\n      })\n      .catch(error => {\n        Alert.alert(error.message);\n        console.log('invites error', error);\n      });\n}\n\nexport function getWaitlist() {\n  return async dispatch =>\n    fetch(API + '/list', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        const data = normalize(\n          {\n            wait: responseJSON\n          },\n          {\n            wait: [listSchema]\n          }\n        );\n        dispatch(setWaitlist(data));\n      })\n      .catch(error => {\n        console.log('invites error', error);\n      });\n}\n\nexport function inviteFromWaitlist(invites) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'PUT',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(invites)\n    })\n      .then(api.handleErrors)\n      // .then(response => response.json())\n      .then(() => {\n        Alert.alert('users have been invited!');\n        dispatch(deleteWaitlistUsers(invites));\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function signupForMailingList(user) {\n  return async () =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'POST',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(user)\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert(\"You've been added to the waitlist.\", 'success');\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function setDownvotes(data) {\n  return {\n    type: types.SET_DOWNVOTES,\n    payload: data\n  };\n}\n\nexport function getDownvotes(skip, limit) {\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: {\n          skip,\n          limit\n        },\n        endpoint: 'invest',\n        path: '/downvotes'\n      })\n    )\n      .then(res => dispatch(setDownvotes(res)))\n      .catch(err => Alert.alert(err.message));\n}\n\nexport function sendEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been sent');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function saveEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/save',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been saved');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function loadEmail() {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'email',\n          path: '/load'\n        })\n      );\n      return responseJSON;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function deleteWaitlistUser(user) {\n  return async dispatch => {\n    try {\n      const result = await fetch(API + '/list/' + user._id, {\n        method: 'DELETE',\n        ...(await api.reqOptions())\n      });\n      // console.log(result)\n      if (result) {\n        dispatch(deleteWaitlistUsers([user]));\n      }\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function sendPostNotification(post) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'post',\n          path: '/sendPostNotification',\n          body: JSON.stringify(post)\n        })\n      );\n      return Alert.alert('Notification sent!');\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\n// export function updateWaitlist(user) {\n//   return async dispatch =>\n//   fetch(API + '/list/' + user._id, {\n//     method: 'PUT',\n//     ...await api.reqOptions(),\n//     body: JSON.stringify({ user })\n//   })\n//   .then(api.handleErrors)\n//   .then((response) => response.json())\n//   .then((responseJSON) => {\n//     dispatch(updateWaitlist(responseJSON));\n//     if (responseJSON) return responseJSON;\n//     return false;\n//   })\n//   .catch((error) => {\n//     Alert.alert(error.message);\n//     console.log('invites error', error);\n//   });\n// }\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as adminActions from 'modules/admin/admin.actions';\nimport ShadowButton from 'modules/ui/web/ShadowButton';\n\nif (process.env.BROWSER === true) {\n  require('./admin.css');\n}\n\nclass Waitlist extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    admin: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendInvites = this.sendInvites.bind(this);\n    this.state = {\n      number: 1\n    };\n  }\n\n  componentDidMount() {\n    this.props.actions.getWaitlist();\n  }\n\n  destroy(invite) {\n    const c = window.confirm('Are you sure you would like to delete this invite?');\n    if (c) this.props.actions.destroy(invite);\n  }\n\n  sendInvites() {\n    const userIds = this.props.admin.waitList.slice(0, this.state.number);\n    const users = userIds.map(id => this.props.admin.wait[id]);\n    this.props.actions.inviteFromWaitlist(users);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  renderWaitlist(waitlistId) {\n    const user = this.props.admin.wait[waitlistId];\n    if (!user) return null;\n    return (\n      <div key={waitlistId} className={'adminRow'}>\n        <span>{user.name}</span>\n        <span>{user.email}</span>\n        <span>{user.status}</span>\n        <button onClick={() => this.props.actions.inviteFromWaitlist([user])}>Send Invite</button>\n        <button onClick={() => this.props.actions.deleteWaitlistUser(user)}>Remove</button>\n      </div>\n    );\n  }\n\n  render() {\n    const waitlist = this.props.admin.waitList.map(id => this.renderWaitlist(id));\n\n    return (\n      <div className=\"adminContainer\">\n        <h2>Waitlist</h2>\n\n        <div className=\"adminInner\">\n          <input\n            className={'blueInput'}\n            style={{ width: '40px', textAlign: 'right' }}\n            type={'text'}\n            name={'number'}\n            placeholder={'number of users'}\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n\n          <ShadowButton backgroundColor={'white'} color={'#3E3EFF'} onClick={this.sendInvites}>\n            {'Invite the next ' + (this.state.number === 1 ? 'user' : this.state.number + ' users')}\n          </ShadowButton>\n        </div>\n\n        <div key={'inviteId'} className={'titleRow'}>\n          <span>Name</span>\n          <span>Email</span>\n          <span>Status</span>\n          <span style={{ maxWidth: 130 }} />\n        </div>\n        {waitlist}\n      </div>\n    );\n  }\n}\n\nWaitlist.propTypes = {\n  actions: PropTypes.object,\n  admin: PropTypes.object\n};\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    admin: state.admin\n  }),\n  dispatch => ({\n    actions: bindActionCreators(adminActions, dispatch)\n  })\n)(Waitlist);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function ShadowButton(props) {\n  return (\n    <button\n      className=\"shadowButton\"\n      onClick={() => (props.onClick ? props.onClick() : null)}\n      style={{\n        ...props.style\n      }}\n    >\n      <span>{props.children}</span>\n    </button>\n  );\n}\n\nShadowButton.propTypes = {\n  onClick: PropTypes.func,\n  style: PropTypes.object,\n  children: PropTypes.node\n};\n"],"sourceRoot":""}