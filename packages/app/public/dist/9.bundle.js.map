{"version":3,"sources":["webpack:///./src/modules/form/selectField.component.js","webpack:///./src/modules/form/createSelectField.component.js","webpack:///./src/modules/form/asyncAdminField.component.js","webpack:///./src/modules/styled/form/checkbox.js","webpack:///./src/modules/admin/web/communityAdminForm.component.js","webpack:///./src/modules/form/validators.js","webpack:///./src/modules/styled/form/reduxformfield.component.js","webpack:///./src/modules/ui/web/imageUpload.component.js","webpack:///./src/modules/styled/form/reduxformimageupload.component.js","webpack:///./src/modules/styled/web.js","webpack:///./src/modules/user/user.actions.js"],"names":["SelectField","Component","inputValue","value","this","props","input","onChange","render","label","error","options","defaultValue","opts","map","o","mt","zIndex","c","colors","black","mb","styles","menu","position","top","handleChange","red","PropTypes","object","array","oneOfType","string","node","components","DropdownIndicator","CreatableMulti","option","setState","event","state","key","preventDefault","componentDidUpdate","vals","v","placeholder","isClearable","isMulti","menuIsOpen","onInputChange","handleInputChange","onKeyDown","handleKeyDown","AsyncAdminField","newValue","replace","val","length","actions","searchUser","u","handle","formattedVals","get","cacheOptions","defaultOptions","loadOptions","connect","userSearch","user","search","dispatch","bindActionCreators","Checkbox","type","meta","name","autocomplete","dirty","touched","warning","fdirection","autoComplete","mr","html-for","propTypes","defaultProps","CommunityAdminForm","e","initialValues","close","window","confirm","deleteCommunity","values","history","community","image","preview","fileName","s3","toS3Advanced","url","isUpdate","updateCommunity","createCommunity","push","slug","err","handleSubmit","imageProps","p","w","h","bg","blue","bradius","customFields","customParams","component","ReduxFormField","FORM_FIELDS","ReduxFormImageUpload","imageComponent","validate","required","text","display","m","onSubmit","submit","field","index","Field","justify","_id","ml","white","onClick","func","bool","withRouter","ownProps","auth","Object","keys","admins","embeddedUser","superAdmins","routing","enableReinitialize","reduxForm","form","undefined","email","test","validCharacters","NAME_PATTERN","asyncEmail","checkUser","asyncUsername","signupAsyncValidation","errors","username","passwordsShouldMatch","password","confirmPassword","compose","validators","reduce","validator","border","Alert","alert","ImageUpload","processImage","file","fileInput","files","img","loadImage","then","dataURL","extension","split","substr","lastIndexOf","catch","uploadImage","upload","renderPreview","React","cloneElement","source","uri","src","style","maxWidth","previewImage","align","ref","bind","accept","StyledNavLink","styled","NavLink","fonts","header","grey","mixins","font","color","margin","View","div","padding","flex","background","width","height","Text","span","InlineText","Image","borderRadius","Divider","layout","universalBorder","Title","title","LinkFont","link","SecondaryText","secondaryText","BodyText","altLink","commentText","bodyStyle","Button","button","buttonFont","disabled","activeButtonShadow","NumericalValue","numericalValue","inheritfont","InputPlain","sizing","Input","StyledTextareaAutocomplete","ReactTextareaAutocomplete","StyledTextarea","TextareaAutosize","Form","Video","video","updateLocalUser","types","payload","getUsersLoading","getUserLoading","setUserList","users","topic","clearUserList","clearSelectedUser","setSelectedUserData","data","setUserSearch","userName","res","api","request","method","endpoint","path","query","limit","errorActions","message","getSelectedUser","updateBlock","block","unblock","process","fetch","body","JSON","stringify","reqOptions","handleErrors","response","json","responseJSON","action","getBlocked"],"mappings":"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","file":"9.bundle.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport Select from 'react-select';\n\nexport default class SelectField extends Component {\n  static propTypes = {\n    input: PropTypes.object,\n    options: PropTypes.array,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    error: PropTypes.string\n  };\n\n  state = { inputValue: '' };\n\n  handleChange = value => {\n    this.props.input.onChange(value.value);\n  };\n\n  render() {\n    const { label, error, options, input } = this.props;\n    const defaultValue = { value: input.value, label: input.value };\n    const opts = options.map(o => ({ label: o, value: o }));\n    return (\n      <View mt={2} zIndex={0}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <Select\n          styles={{\n            menu: styles => ({ ...styles, position: 'relative', top: 0, zIndex: 10 })\n          }}\n          // isMulti\n          // cacheOptions\n          defaultValue={defaultValue}\n          onChange={this.handleChange}\n          options={opts}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CreatableSelect from 'react-select/creatable';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\n\nconst components = {\n  DropdownIndicator: null,\n};\n\nconst createOption = (label) => ({\n  label,\n  value: label,\n});\n\nexport default class CreatableMulti extends Component {\n  static propTypes = {\n    // initialValues: PropTypes.array,\n    input: PropTypes.object,\n    placeholder: PropTypes.string,\n    label: PropTypes.string,\n    error: PropTypes.string,\n  };\n\n  state = {\n    inputValue: '',\n    value: this.props.input.value\n      ? this.props.input.value.map((option) => ({ value: option, label: option }))\n      : [],\n  };\n\n  componentDidUpdate() {\n    const vals = this.state.value.map((v) => v.label);\n    // console.log('did update', vals);\n    this.props.input.onChange(vals);\n  }\n\n  handleChange = (value) => {\n    this.setState({ value });\n  };\n\n  handleInputChange = (inputValue) => {\n    this.setState({ inputValue });\n  };\n\n  handleKeyDown = (event) => {\n    const { inputValue, value } = this.state;\n    if (!inputValue) return;\n    switch (event.key) {\n      case 'Enter':\n      case 'Tab':\n        // console.group('Value Added');\n        // console.log(value);\n        // console.groupEnd();\n        this.setState({\n          inputValue: '',\n          value: [...value, createOption(inputValue)],\n        });\n        event.preventDefault();\n        break;\n      default:\n        // console.log('DEFAULT');\n        break;\n    }\n  };\n\n  render() {\n    const { placeholder, label, error, input } = this.props;\n    const { inputValue } = this.state;\n    const vals = input.value ? input.value.map((v) => ({ label: v, value: v })) : [];\n    return (\n      <View key=\"tags-input\" mt={2}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <CreatableSelect\n          key=\"tags-input-select\"\n          components={components}\n          inputValue={inputValue}\n          isClearable\n          isMulti\n          menuIsOpen={false}\n          onChange={this.handleChange}\n          onInputChange={this.handleInputChange}\n          onKeyDown={this.handleKeyDown}\n          placeholder={placeholder}\n          value={vals}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport AsyncSelect from 'react-select/async';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { searchUser } from 'modules/user/user.actions';\n\nclass AsyncAdminField extends Component {\n  static propTypes = {\n    input: PropTypes.object,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    error: PropTypes.string,\n    actions: PropTypes.object,\n    // userSearch: PropTypes.array\n  };\n\n  state = { inputValue: '' };\n\n  handleInputChange = (newValue) => {\n    const inputValue = newValue.replace(/\\W/g, '');\n    this.setState({ inputValue });\n    return inputValue;\n  };\n\n  loadOptions = async (val) => {\n    if (!val.length) return null;\n    const userSearch = await this.props.actions.searchUser(val);\n    return userSearch.map((u) => ({ label: u.handle, value: u.handle }));\n  };\n\n  handleChange = (vals) => {\n    const formattedVals = vals.map((v) => v.value);\n    this.props.input.onChange(formattedVals);\n  };\n\n  render() {\n    const { label, error, input } = this.props;\n    const vals = get(input, 'value', []).map((u) => ({ label: u, value: u }));\n    return (\n      <View mt={2} zIndex={0}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <AsyncSelect\n          styles={{ menu: (styles) => ({ ...styles, position: 'relative', top: 0 }) }}\n          isMulti\n          cacheOptions\n          defaultOptions\n          value={vals}\n          loadOptions={this.loadOptions}\n          onChange={this.handleChange}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userSearch: state.user.search,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        searchUser,\n      },\n      dispatch\n    ),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsyncAdminField);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, InputPlain } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst Checkbox = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View fdirection=\"column\" mt={3}>\n      <View fdirection=\"row\">\n        <InputPlain\n          {...input}\n          placeholder={placeholder || label}\n          autoComplete={autocomplete}\n          name={name}\n          type={type}\n          mr={1}\n        />{' '}\n        {label ? (\n          <label html-for={name}>\n            <LinkFont c={colors.black}>{label}</LinkFont>\n          </label>\n        ) : null}\n        {(dirty || touched) &&\n          ((error && (\n            <SecondaryText c={colors.red} mt={1}>\n              {error}\n            </SecondaryText>\n          )) ||\n            (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n      </View>\n    </View>\n  );\n};\n\nCheckbox.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nCheckbox.defaultProps = {\n  autocomplete: null\n};\n\nexport default Checkbox;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { s3 } from 'app/utils';\nimport { connect } from 'react-redux';\nimport {\n  updateCommunity,\n  createCommunity,\n  deleteCommunity,\n} from 'modules/community/community.actions';\nimport SelectField from 'modules/form/selectField.component';\nimport CreatableMulti from 'modules/form/createSelectField.component';\nimport AsyncAdminField from 'modules/form/asyncAdminField.component';\nimport ReduxFormImageUpload from 'modules/styled/form/reduxformimageupload.component';\nimport ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport Checkbox from 'modules/styled/form/checkbox';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, View, Button, Title } from 'modules/styled/web';\nimport { Image, LinkFont, SecondaryText } from 'modules/styled/uni';\nimport { required } from 'modules/form/validators';\nimport { colors } from 'styles';\n\nclass CommunityAdminForm extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    handleSubmit: PropTypes.func,\n    isUpdate: PropTypes.bool,\n    initialValues: PropTypes.object,\n    close: PropTypes.func,\n    history: PropTypes.object,\n  };\n\n  deleteCommunity = async (e) => {\n    e.preventDefault();\n    const { initialValues, close } = this.props;\n    if (\n      // eslint-disable-next-line\n      window.confirm(\n        `Are you sure you want to delete this community: ${initialValues.name}?`\n      )\n    ) {\n      const success = await this.props.actions.deleteCommunity(initialValues);\n      if (success && close) close();\n    }\n  };\n\n  submit = async (values) => {\n    const { history } = this.props;\n    try {\n      const community = { ...values };\n      if (community.image && community.image.preview && community.image.fileName) {\n        const image = await s3.toS3Advanced(\n          community.image.preview,\n          community.image.fileName\n        );\n        community.image = image.url;\n      }\n      const { isUpdate } = this.props;\n      if (isUpdate) {\n        this.props.actions.updateCommunity(community);\n      } else {\n        await this.props.actions.createCommunity(community);\n        history.push(`/${community.slug}/new`);\n      }\n    } catch (err) {\n      // TODO error handling\n    }\n  };\n\n  render() {\n    const { handleSubmit, initialValues } = this.props;\n    const imageProps = {\n      p: 2,\n      w: 9,\n      h: 9,\n      bg: colors.blue,\n      bradius: '50%',\n    };\n\n    const customFields = initialValues.customParams\n      ? [\n          {\n            name: 'customParams.auth.points',\n            label: 'REQUIRED FOR POSTING: Added Points of Interest',\n            component: ReduxFormField,\n            type: 'number',\n          },\n          {\n            name: 'customParams.auth.tokens',\n            label: 'REQUIRED FOR POSTING: FOAM token balance',\n            component: ReduxFormField,\n            type: 'number',\n          },\n        ]\n      : [];\n\n    const FORM_FIELDS = [\n      {\n        name: 'image',\n        component: ReduxFormImageUpload,\n        placeholder: '/img/blueR.png',\n        imageComponent: <Image mt={1} bg={colors.blue} {...imageProps} />,\n        type: 'file-upload',\n        label: 'Community Image',\n        validate: [],\n      },\n      {\n        name: 'name',\n        label: 'Name',\n        component: ReduxFormField,\n        type: 'text',\n        validate: [required],\n      },\n      // {\n      //   name: 'private',\n      //   label: 'Private',\n      //   component: Checkbox,\n      //   type: 'checkbox'\n      // },\n      {\n        name: 'slug',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Slug (cannot be changed in the future)</LinkFont>\n            <SecondaryText>\n              Determines the url of the community, ex: relevant.community/{'<slug>'}\n            </SecondaryText>\n          </View>\n        ),\n        placeholder: 'slug',\n        component: ReduxFormField,\n        type: 'text',\n        validate: [required],\n      },\n      {\n        name: 'description',\n        component: ReduxFormField,\n        type: 'text',\n        label: 'Description',\n        validate: [required],\n      },\n      {\n        name: 'topics',\n        component: CreatableMulti,\n        type: 'text',\n        label: 'Tags',\n        validate: [],\n      },\n      {\n        name: 'sectionTitle',\n        text: 'Admins & Moderators',\n      },\n      {\n        name: 'superAdmins',\n        component: AsyncAdminField,\n        type: 'text',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Admins</LinkFont>\n            <SecondaryText>\n              Users with admin priveleges (ability to edit community parameters and add or\n              remove moderators)\n            </SecondaryText>\n          </View>\n        ),\n        validate: [],\n      },\n      {\n        name: 'admins',\n        component: AsyncAdminField,\n        type: 'text',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Moderators</LinkFont>\n            <SecondaryText>\n              Users that will have high reputation by default (but not necessarily admin\n              priveleges)',\n            </SecondaryText>\n          </View>\n        ),\n        validate: [],\n      },\n      {\n        name: 'sectionTitle',\n        text: 'Community Settings',\n      },\n      {\n        name: 'defaultPost',\n        label: 'Default Post Type',\n        component: SelectField,\n        // input: { value: [] },\n        // value: 'link',\n        options: ['link', 'text'],\n      },\n      ...customFields,\n      {\n        name: 'betEnabled',\n        label: 'Enable Betting',\n        component: Checkbox,\n        type: 'checkbox',\n      },\n      {\n        name: 'hidden',\n        label: 'Unlisted (anyone with link can still see and join the community)',\n        component: Checkbox,\n        type: 'checkbox',\n      },\n    ];\n    return (\n      <View display=\"flex\" fdirection=\"column\" m={'0 4'} mb={16}>\n        <Form\n          onSubmit={handleSubmit(this.submit)}\n          fdirection=\"column\"\n          key=\"community-admin-form\"\n        >\n          {FORM_FIELDS.map((field, index) => {\n            if (field.name === 'sectionTitle')\n              return (\n                <Fragment key={field.text + index}>\n                  <Title mt={4}>{field.text}</Title>\n                </Fragment>\n              );\n            return <Field {...field} key={index} />;\n          })}\n          <View justify=\"flex-end\" mt={3} fdirection=\"row\">\n            {initialValues._id ? (\n              <Button\n                ml={2}\n                c={colors.white}\n                bg={colors.red}\n                onClick={this.deleteCommunity}\n              >\n                Delete\n              </Button>\n            ) : null}\n            <Button ml={2} c={colors.white} type=\"submit\">\n              Submit\n            </Button>\n          </View>\n        </Form>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { close, history } = ownProps;\n  let slug = get(ownProps, 'match.params.slug') || state.auth.community;\n  if (get(ownProps, 'match.path') === '/admin/community/new') slug = null;\n  if (get(ownProps, 'match.path') === '/communities/new') slug = null;\n  const community = get(state.community, `communities.${slug}`, {});\n  const isUpdate = !!Object.keys(community).length;\n  const admins = get(community, 'admins', []).map((m) => m.embeddedUser.handle);\n  const superAdmins = get(community, 'superAdmins', []).map((m) => m.embeddedUser.handle);\n\n  const initialValues = { ...community, admins, superAdmins };\n\n  return {\n    routing: state.routing,\n    community: state.community,\n    isUpdate,\n    initialValues,\n    enableReinitialize: true,\n    close,\n    history,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  actions: bindActionCreators(\n    {\n      updateCommunity,\n      createCommunity,\n      deleteCommunity,\n    },\n    dispatch\n  ),\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    reduxForm({\n      form: 'communityAdmin',\n    })(CommunityAdminForm)\n  )\n);\n","import { NAME_PATTERN } from 'app/utils/text';\nimport { checkUser } from 'modules/auth/auth.actions';\n\nexport const required = value =>\n  value || typeof value === 'number' ? undefined : 'Required';\n\nexport const email = value => {\n  if (!value) {\n    return undefined;\n  }\n  const valid = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,15}$/i.test(value);\n  if (valid) {\n    return undefined;\n  }\n  return 'Not a valid e-mail';\n};\n\nexport const validCharacters = value => {\n  const match = NAME_PATTERN.test(value);\n  if (!match) {\n    return 'Can only contain letters, \\nnumbers, dashes and underscores';\n  }\n  return undefined;\n};\n\nexport const asyncEmail = async value => {\n  const results = await checkUser(value, 'email', true)();\n  if (results) {\n    return 'This email has already been used';\n  }\n  return undefined;\n};\n\nexport const asyncUsername = async value => {\n  if (value) {\n    const results = await checkUser(value, 'name', true)();\n    // TODO: no error if username is own username\n    if (results) {\n      return 'This username is already taken';\n    }\n  }\n  return undefined;\n};\n\nexport const signupAsyncValidation = async values => {\n  // console.log('props  ', props  );\n  const errors = {};\n  if (values.username) {\n    const error = await asyncUsername(values.username);\n    if (error) {\n      errors.username = error;\n    }\n  }\n  if (values.email) {\n    const error = await asyncEmail(values.email);\n    if (error) {\n      errors.email = error;\n    }\n  }\n  if (values.handle) {\n    const error = await asyncUsername(values.handle);\n    if (error) {\n      errors.handle = error;\n    }\n  }\n  if (Object.keys(errors).length) {\n    throw errors;\n  }\n};\n\nexport const passwordsShouldMatch = values => {\n  const errors = {};\n  if (!values.password || !values.confirmPassword) {\n    return null;\n  }\n  if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  return errors;\n};\n\nexport const compose = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, Input } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <Input\n        {...input}\n        placeholder={placeholder || label}\n        autoComplete={autocomplete}\n        name={name}\n        type={type}\n        border={1}\n        p=\"2 2\"\n        mt={1}\n      />\n      {(dirty || touched) &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nReduxFormField.defaultProps = {\n  autocomplete: null\n};\n\nexport default ReduxFormField;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { img, s3, alert } from 'app/utils';\nimport { View } from 'modules/styled/uni';\n\nconst Alert = alert.Alert();\n\nexport default class ImageUpload extends Component {\n  static propTypes = {\n    placeholder: PropTypes.string,\n    imageComponent: PropTypes.node,\n    onChange: PropTypes.func\n  };\n\n  state = {\n    preview: null,\n    fileName: null\n  };\n\n  processImage() {\n    const file = this.fileInput.files[0];\n    img\n      .loadImage(file)\n      .then(dataURL => {\n        const extension = dataURL\n          .split(',')[0]\n          .split('/')[1]\n          .split(';')[0];\n        const name = file.name.substr(0, extension.lastIndexOf('.')) + '.' + extension;\n        this.setState({ preview: dataURL, fileName: name });\n        this.props.onChange({ preview: dataURL, fileName: name });\n      })\n      .catch(e => {\n        Alert.alert('Error uploading image ' + e);\n      });\n  }\n\n  async uploadImage() {\n    if (!this.state.fileName || !this.state.preview) {\n      Alert('Please select an image');\n      return null;\n    }\n    const upload = await s3.toS3Advanced(this.state.preview, this.state.fileName);\n    this.setState({ preview: null, fileName: null });\n    this.props.onChange(upload);\n    return upload;\n  }\n\n  renderPreview() {\n    const { placeholder, imageComponent } = this.props;\n    const { preview } = this.state;\n    if (!preview && placeholder) {\n      return React.cloneElement(imageComponent, { source: { uri: placeholder } });\n    }\n    if (preview && imageComponent) {\n      return React.cloneElement(imageComponent, { source: { uri: preview } });\n    }\n    if (preview) {\n      return <img src={preview} style={{ maxWidth: '300px' }} />;\n    }\n    return null;\n  }\n\n  render() {\n    const previewImage = this.renderPreview();\n\n    return (\n      <View display=\"flex\" fdirection=\"row\" align=\"center\">\n        <View mr={2}>{previewImage}</View>\n        <input\n          ref={c => (this.fileInput = c)}\n          onChange={this.processImage.bind(this)}\n          accept={'image/*'}\n          name={'img'}\n          type={'file'}\n        />\n      </View>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageUpload from 'modules/ui/web/imageUpload.component';\nimport { View, LinkFont, SecondaryText } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, meta, name, placeholder, imageComponent } = props;\n  const {\n    input: { onChange, value }\n  } = props;\n  const { touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <ImageUpload\n        placeholder={value || placeholder}\n        imageComponent={imageComponent}\n        onChange={vals => {\n          onChange(vals);\n        }}\n      />\n\n      {touched &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  placeholder: PropTypes.node,\n  imageComponent: PropTypes.node\n};\n\nexport default ReduxFormField;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { mixins, layout, fonts, colors, sizing } from 'app/styles';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport ReactTextareaAutocomplete from '@webscopeio/react-textarea-autocomplete';\n\nexport const StyledNavLink = styled(NavLink)`\n  ${fonts.header};\n  color: ${colors.grey};\n  &.active {\n    color: ${colors.black};\n  }\n  :hover {\n    color: ${colors.black};\n  }\n  ${mixins.font}\n  ${mixins.display}\n  ${mixins.color}\n  ${mixins.margin}\n`;\n\nexport const View = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.width}\n  ${mixins.height}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const Text = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.flex}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n  ${p => (p.onClick ? 'cursor: pointer;' : '')}\n`;\n\nexport const InlineText = styled.span`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.font}\n  ${mixins.background}\n  ${mixins.border}\n  ${mixins.color}\n`;\n\nexport const Image = styled.img`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n\nexport const ImageWrapper = styled.span`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${mixins.margin}\n  ${mixins.flex}\n`;\n\nexport const Divider = styled.div`\n  ${mixins.margin}\n  ${mixins.padding}\n  ${mixins.width}\n  ${layout.universalBorder('bottom')}\n`;\n\nexport const Header = styled(Text)`\n  ${fonts.header}\n  ${mixins.color}\n`;\n\nexport const Title = styled(Text)`\n  ${fonts.title}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const LinkFont = styled(Text)`\n  ${fonts.link}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const SecondaryText = styled(Text)`\n  ${fonts.secondaryText}\n  ${mixins.font}\n  ${mixins.color}\n`;\n\nexport const AltLink = styled(Text)`\n  ${fonts.altLink}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const CommentText = styled(Text)`\n  ${fonts.commentText}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const BodyText = styled(Text)`\n  ${fonts.bodyStyle}\n  ${mixins.color}\n  ${mixins.font}\n`;\n\nexport const Button = styled.button`\n  ${layout.button}\n  ${layout.buttonFont}\n  ${p =>\n    p.disabled\n      ? `\n    color: ${colors.white};\n    background: ${colors.grey};\n    `\n      : ''};\n  ${mixins.flex}\n  ${mixins.background}\n  ${mixins.padding}\n  ${mixins.width}\n  ${mixins.margin}\n  ${mixins.color}\n  ${mixins.width}\n  ${mixins.height}\n  &:hover {\n    ${layout.activeButtonShadow}\n  };\n  user-select: none; cursor: pointer;\n`;\n\nexport const NumericalValue = styled(Text)`\n  ${fonts.numericalValue}\n  ${mixins.width}\n  ${mixins.font}\n  ${mixins.inheritfont}\n  ${mixins.color}\n`;\n\nexport const InputPlain = styled.input`\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const Input = styled.input`\n  padding: ${sizing(2)} ${sizing(2)};\n  margin-top: ${sizing(1)};  ${fonts.bodyStyle}\n  ${mixins.font}\n  ${mixins.flex}\n  ${mixins.border}\n  ${layout.universalBorder()}\n  ${mixins.padding}\n  ${mixins.margin}\n  ::placeholder: {\n    font-size: ${sizing(1.75)};\n    line-height: ${sizing(1.75)};\n  };\n  :focus {\n    outline: none !important;\n    ${layout.universalBorder('', colors.blue)}\n  }\n`;\n\nexport const StyledTextareaAutocomplete = styled(ReactTextareaAutocomplete)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const StyledTextarea = styled(TextareaAutosize)`\n  ${fonts.bodyStyle}\n  ${mixins.border}\n  ${mixins.flex}\n  ${layout.universalBorder()}\n  padding: ${sizing(2)} ${sizing(2)};\n  min-width: 0;\n  &: focus {\n    outline: 1px solid ${colors.blue};\n  }\n  ${mixins.padding}\n  ${mixins.margin}\n  ${mixins.height}\n`;\n\nexport const Form = styled.form`\n  ${mixins.flex}\n  ${mixins.margin}\n`;\n\nexport const Video = styled.video`\n  ${mixins.margin}\n  ${mixins.height}\n  ${mixins.width}\n  ${mixins.padding}\n  ${mixins.background}\n  ${mixins.borderRadius}\n  ${mixins.flex}\n`;\n","import { api, alert } from 'app/utils';\nimport * as errorActions from 'modules/ui/error.actions';\nimport * as types from 'core/actionTypes';\n\nconst Alert = alert.Alert();\n\nexport function updateLocalUser(user) {\n  return {\n    type: types.UPDATE_USER,\n    payload: user\n  };\n}\n\nexport function getUsersLoading() {\n  return {\n    type: 'GET_USER_LIST'\n  };\n}\n\nexport function getUserLoading() {\n  return {\n    type: 'GET_USER_LOADING'\n  };\n}\n\nexport function setUserList(users, index, topic) {\n  return {\n    type: 'SET_USER_LIST',\n    payload: {\n      users,\n      index,\n      topic\n    }\n  };\n}\n\nexport function clearUserList() {\n  return {\n    type: 'CLEAR_USER_LIST'\n  };\n}\n\nexport function clearSelectedUser() {\n  return {\n    type: 'CLEAR_SELECTED_USER'\n  };\n}\n\nexport function setSelectedUserData(data) {\n  return {\n    type: types.SET_SELECTED_USER_DATA,\n    payload: data\n  };\n}\n\nexport function setUserSearch(data) {\n  return {\n    type: 'SET_USER_SEARCH',\n    payload: data\n  };\n}\n\nexport function searchUser(userName) {\n  const limit = 50;\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'user',\n          path: '/search',\n          query: { limit, search: userName }\n        })\n      );\n      dispatch(setUserSearch(res));\n      return res;\n    } catch (err) {\n      dispatch(errorActions.setError('activity', true, err.message));\n      return false;\n    }\n  };\n}\n\nexport function getSelectedUser(userName) {\n  return async dispatch => {\n    try {\n      dispatch(getUserLoading());\n      const user = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'user',\n          path: '/user/' + userName\n        })\n      );\n      dispatch(setSelectedUserData(user));\n      dispatch(errorActions.setError('profile', false));\n      return true;\n    } catch (err) {\n      dispatch(errorActions.setError('profile', true, err.message));\n      return false;\n    }\n  };\n}\n\nexport function updateBlock(block, unblock) {\n  let url = process.env.API_SERVER + '/api/user/block';\n  if (unblock) {\n    url = process.env.API_SERVER + '/api/user/unblock';\n  }\n  return async dispatch =>\n    fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify({\n        block\n      }),\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        let action = 'blocked';\n        if (unblock) action = 'unblocked';\n        Alert.alert('user ' + block + ' has been ' + action);\n        // console.log('block result ', responseJSON);\n        dispatch(updateLocalUser(responseJSON));\n      })\n      .catch(null);\n}\n\nexport function getBlocked() {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/user/blocked', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        dispatch(updateLocalUser(responseJSON));\n      })\n      .catch(null);\n}\n"],"sourceRoot":""}