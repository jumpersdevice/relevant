{"version":3,"sources":["webpack:///./public/img/icons/3box.png","webpack:///./public/img/icons/twitter_white.png","webpack:///./src/modules/auth/web/signupSocial.js"],"names":["twitterIcon","require","boxIcon","twitterIconComponent","resizeMode","source","w","h","mr","boxIconComponent","SignupSocial","this","props","location","auth","redirect","queryString","parse","search","pathname","invitecode","display","fdirection","align-items","align","justify","mt","to","external","rel","bg","colors","twitterBlue","image","text","onClick","e","preventDefault","actions","showModal","c","blue","Component","PropTypes","object","withRouter","connect","state","user","initialValues","enableReinitialize","dispatch","bindActionCreators"],"mappings":"iJAAA,OAAe,cAA0B,6B,oECAzC,OAAe,cAA0B,sC,+4CCWzC,IAAMA,EAAcC,EAAQ,wCACtBC,EAAUD,EAAQ,+BAMlBE,EACJ,kBAAC,IAAD,CAAOC,WAAY,UAAWC,OAAQL,EAAaM,EAAG,EAAGC,EAAG,EAAGC,GAAI,MAE/DC,EACJ,kBAAC,IAAD,CAAOL,WAAY,UAAWC,OAAQH,EAASI,EAAG,EAAGC,EAAG,EAAGC,GAAI,MAG3DE,E,qIAOK,aACoBC,KAAKC,MAAxBC,EADD,EACCA,SAAUC,EADX,EACWA,KACZC,EAAaC,IAAYC,MAAMJ,EAASK,QAAxCH,SACDA,IAAUA,EAAWF,EAASM,UAH5B,IAICC,EAAeN,EAAfM,WAER,OACE,kBAAC,IAAD,CAAMC,QAAQ,OAAOC,WAAW,SAASC,cAAY,cACnD,kBAAC,IAAD,8BACA,kBAAC,IAAD,CACEF,QAAQ,OACRC,WAAY,CAAC,MAAO,UACpBE,MAAO,CAAC,SAAU,WAClBC,QAAS,aACTC,GAAI,CAAC,EAAG,IAER,kBAAC,IAAD,CACEC,GAAE,mCAA8BP,EAA9B,qBAAqDL,GACvDa,UAAQ,EACRC,IAAI,WACJrB,GAAI,CAAC,EAAG,IAER,kBAAC,IAAD,CACEsB,GAAIC,IAAOC,YACXC,MAAO9B,EACP+B,KAAK,0BAIT,kBAAC,IAAD,CACEP,GAAI,IACJnB,GAAI,CAAC,EAAG,GACR2B,QAAS,SAAAC,GACPA,EAAEC,iBACF,EAAKzB,MAAM0B,QAAQC,UAAU,gBAG/B,kBAAC,IAAD,CAAUC,EAAGT,IAAOU,MAClB,kBAAC,IAAD,CACEX,GAAI,kBACJG,MAAOxB,EACPyB,KAAK,wBAiBX,kBAAC,IAAD,CACEP,GAAI,IACJD,GAAI,CAAC,EAAG,GACRS,QAAS,SAAAC,GACPA,EAAEC,iBAEF,EAAKzB,MAAM0B,QAAQC,UAAU,iBAG/B,kBAAC,IAAD,CAAUC,EAAGT,IAAOU,MAApB,wBAIJ,kBAAC,IAAD,CAAUf,GAAI,GAAd,sBACsB,IACpB,uBAAGS,QAAS,kBAAM,EAAKvB,MAAM0B,QAAQC,UAAU,WAA/C,iB,GAhFiBG,a,IAArBhC,E,YACe,CACjBG,SAAU8B,IAAUC,OACpBN,QAASK,IAAUC,OACnB9B,KAAM6B,IAAUC,SAmGLC,sBAAWC,aAhBF,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMjC,KAAKkC,KACjBlC,KAAMiC,EAAMjC,KACZmC,cAAe,GACfC,oBAAoB,MAGK,SAAAC,GAAQ,MAAK,CACtCb,QAASc,6BACP,CACEb,uBAEFY,MAIsBL,CAA6CpC","file":"auth-web-signupSocial.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"public/img/icons/3box.png\";","export default __webpack_public_path__ + \"public/img/icons/twitter_white.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Image, LinkFont, SecondaryText, View, ButtonWithIcon } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport ULink from 'modules/navigation/ULink.component';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { showModal } from 'modules/navigation/navigation.actions';\n\nconst twitterIcon = require('public/img/icons/twitter_white.png');\nconst boxIcon = require('public/img/icons/3box.png');\n\n// const redditIcon = require('public/img/icons/reddit.png');\n// const redditIconComponent = (\n//   <Image resizeMode={'contain'} source={redditIcon} w={3} h={3} mr={1.5} />\n// );\nconst twitterIconComponent = (\n  <Image resizeMode={'contain'} source={twitterIcon} w={3} h={3} mr={1.5} />\n);\nconst boxIconComponent = (\n  <Image resizeMode={'contain'} source={boxIcon} w={3} h={3} mr={1.5} />\n);\n\nclass SignupSocial extends Component {\n  static propTypes = {\n    location: PropTypes.object,\n    actions: PropTypes.object,\n    auth: PropTypes.object\n  };\n\n  render() {\n    const { location, auth } = this.props;\n    let { redirect } = queryString.parse(location.search);\n    if (!redirect) redirect = location.pathname;\n    const { invitecode } = auth;\n\n    return (\n      <View display=\"flex\" fdirection=\"column\" align-items=\"flex-start\">\n        <SecondaryText>Sign up for Relevant.</SecondaryText>\n        <View\n          display=\"flex\"\n          fdirection={['row', 'column']}\n          align={['center', 'stretch']}\n          justify={'flex-start'}\n          mt={[7, 4]}\n        >\n          <ULink\n            to={`/auth/twitter?invitecode=${invitecode}&redirect=${redirect}`}\n            external\n            rel=\"nofollow\"\n            mr={[4, 0]}\n          >\n            <ButtonWithIcon\n              bg={colors.twitterBlue}\n              image={twitterIconComponent}\n              text=\"Sign up with Twitter\"\n            />\n          </ULink>\n\n          <ULink\n            to={'#'}\n            mr={[4, 0]}\n            onClick={e => {\n              e.preventDefault();\n              this.props.actions.showModal('signup3Box');\n            }}\n          >\n            <LinkFont c={colors.blue}>\n              <ButtonWithIcon\n                bg={'rgb(248,49,255)'}\n                image={boxIconComponent}\n                text=\"Sign up with 3Box\"\n              />\n            </LinkFont>\n          </ULink>\n\n          {/*          <ULink\n            to={`/auth/reddit?invitecode=${invitecode}&redirect=${redirect}`}\n            external\n            mr={[4, 0]}\n            mt={[0, 3]}\n          >\n            <ButtonWithIcon\n              bg={colors.redditColor}\n              image={redditIconComponent}\n              text=\"Sign up with Reddit\"\n            />\n          </ULink> */}\n          <ULink\n            to={'#'}\n            mt={[0, 3]}\n            onClick={e => {\n              e.preventDefault();\n              // this.setState({ provider: 'email' });\n              this.props.actions.showModal('signupEmail');\n            }}\n          >\n            <LinkFont c={colors.blue}>Sign up with Email</LinkFont>\n          </ULink>\n        </View>\n\n        <LinkFont mt={4}>\n          Already registered?{' '}\n          <a onClick={() => this.props.actions.showModal('login')}>Sign In</a>\n        </LinkFont>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  auth: state.auth,\n  initialValues: {},\n  enableReinitialize: true\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      showModal\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SignupSocial));\n"],"sourceRoot":""}