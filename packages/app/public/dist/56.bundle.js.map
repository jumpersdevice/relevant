{"version":3,"sources":["webpack:///./src/modules/auth/web/auth.container.js"],"names":["AuthContainer","Component","componentDidMount","this","openModal","componentDidUpdate","prevProps","match","params","modal","props","user","role","actions","showModal","render","PropTypes","bool","object","withRouter","connect","state","auth","dispatch","bindActionCreators","authActions","hideModal"],"mappings":"srCAQA,MAAMA,UAAsBC,YAQ1BC,oBACEC,KAAKC,YAGPC,mBAAmBC,GACbA,EAAUC,MAAMC,OAAOC,QAAUN,KAAKO,MAAMH,MAAMC,OAAOC,OAC3DN,KAAKC,YAITA,YACE,IACIK,GADE,KAAEE,EAAF,MAAQJ,GAAUJ,KAAKO,MAEzBH,EAAMC,OAAOC,QACfA,EAAQF,EAAMC,OAAOC,OAEnBE,GAAsB,SAAdA,EAAKC,OACfH,EAAQ,aAEI,YAAVA,GAAiC,iBAAVA,EACzBN,KAAKO,MAAMG,QAAQC,UAAU,WACV,WAAVL,EACTN,KAAKO,MAAMG,QAAQC,UAAU,UACV,UAAVL,EACTN,KAAKO,MAAMG,QAAQC,UAAU,SACV,WAAVL,EACTN,KAAKO,MAAMG,QAAQC,UAAU,gBACV,cAAVL,EACTN,KAAKO,MAAMG,QAAQC,UAAU,aACV,kBAAVL,GACTN,KAAKO,MAAMG,QAAQC,UAAU,iBAIjCC,SACE,OAAO,+B,IA3CLf,E,YACe,CACjBS,MAAOO,IAAUC,KACjBJ,QAASG,IAAUE,OACnBP,KAAMK,IAAUE,OAChBX,MAAOS,IAAUE,SA0DNC,sBACbC,YAjBsBC,IAAS,CAC/BV,KAAMU,EAAMC,KAAKX,KACjBW,KAAMD,EAAMC,OAGaC,IAAY,CACrCV,QAASW,6BAAmB,EAAD,KAEpBC,GAFoB,IAGvBC,sBACAZ,wBAEFS,KAKFH,CAGEpB","file":"56.bundle.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { hideModal, showModal } from 'modules/navigation/navigation.actions';\nimport * as authActions from 'modules/auth/auth.actions';\n\nclass AuthContainer extends Component {\n  static propTypes = {\n    modal: PropTypes.bool,\n    actions: PropTypes.object,\n    user: PropTypes.object,\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    this.openModal();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.modal !== this.props.match.params.modal) {\n      this.openModal();\n    }\n  }\n\n  openModal() {\n    const { user, match } = this.props;\n    let modal;\n    if (match.params.modal) {\n      modal = match.params.modal;\n    }\n    if (user && user.role === 'temp') {\n      modal = 'setHandle';\n    }\n    if (modal === 'confirm' || modal === 'confirmEmail') {\n      this.props.actions.showModal('confirm');\n    } else if (modal === 'forgot') {\n      this.props.actions.showModal('forgot');\n    } else if (modal === 'login') {\n      this.props.actions.showModal('login');\n    } else if (modal === 'signup') {\n      this.props.actions.showModal('signupSocial');\n    } else if (modal === 'setHandle') {\n      this.props.actions.showModal('setHandle');\n    } else if (modal === 'resetPassword') {\n      this.props.actions.showModal('resetPassword');\n    }\n  }\n\n  render() {\n    return <div />;\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...authActions,\n      hideModal,\n      showModal\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(AuthContainer)\n);\n"],"sourceRoot":""}