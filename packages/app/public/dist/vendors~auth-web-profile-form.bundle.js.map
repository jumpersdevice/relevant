{"version":3,"sources":["webpack:////Users/slavab/local/relevant/node_modules/final-form/dist/final-form.es.js","webpack:////Users/slavab/local/relevant/node_modules/react-final-form/dist/react-final-form.es.js"],"names":["keysCache","keysRegex","toPath","key","length","Error","split","filter","Boolean","getIn","state","complexKey","path","current","i","Array","isArray","isNaN","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","setIn","value","destroyArrays","setInRecursor","index","_extends2","_ref","_result2","_result","numKeys","Object","keys","map","numericKey","_result3","_array","result","array","concat","splice","ARRAY_ERROR","publishFieldState","formState","field","errors","initialValues","lastSubmittedValues","submitErrors","submitFailed","submitSucceeded","submitting","values","active","blur","change","data","focus","modified","name","touched","validating","visited","error","submitError","initial","pristine","isEqual","valid","dirty","dirtySinceLastSubmit","invalid","fieldSubscriptionItems","shallowEqual","a","b","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","subscriptionFilter","dest","src","previous","subscription","shallowEqualKeys","different","forEach","indexOf","filterFieldState","previousState","force","formSubscriptionItems","shallowEqualKeys$1","filterFormState","memoize","fn","lastArgs","lastResult","_len","arguments","args","_key","some","apply","isPromise","obj","then","tripleEquals","hasAnyError","notifySubscriber","subscriber","lastState","notification","notify","_ref2","entries","entry","notified","createForm","config","debug","destroyOnUnregister","keepDirtyOnReinitialize","mutators","onSubmit","validate","validateOnBlur","subscribers","fieldSubscribers","fields","lastFormState","inBatch","validationPaused","validationBlocked","nextAsyncValidationKey","asyncValidationPromises","changeValue","mutate","after","renameField","from","to","_extends3","api","lastFieldState","getMutatorApi","mutatableState","returnValue","resetFieldState","runValidation","notifyFieldListeners","notifyFormListeners","mutatorsApi","reduce","getValidators","validators","validator","push","fieldChanged","callback","safeFields","fieldKeys","limitedFieldLevelValidation","changedField","validateFields","recordLevelErrors","fieldLevelErrors","promises","setErrors","errorsOrPromise","runRecordLevelValidation","setError","errorOrPromise","promise","runFieldLevelValidation","hasAsyncValidations","asyncValidationPromiseKey","Promise","all","processErrors","merged","forEachError","recordLevelError","errorFromParent","hasFieldLevelValidation","fieldLevelError","existing","copy","afterPromise","notifyField","fieldState","fieldSubscriber","markAllFieldsTouched","calculateNextFormState","safeFieldKeys","foundDirty","dirtyFields","dirtyFieldsSinceLastSubmit","nonNullLastSubmittedValues","nextFormState","hasSubmitErrors","hasValidationErrors","convertToExternalFormState","_safeFieldKeys$reduce","notifying","scheduleNotification","batch","getFieldState","getRegisteredFields","getState","initialize","savedDirtyValues","isValidationPaused","pauseValidation","registerField","fieldConfig","afterSubmit","beforeSubmit","haveValidator","silent","getValidator","initialValue","defaultValue","validatorRemoved","lastOne","reset","resumeValidation","setConfig","submit","asyncValidationPromisesKeys","console","resolvePromise","completeCalled","complete","resolve","subscribe","memoized","renderComponent","props","lazyProps","render","children","component","rest","assign","useWhenValueChanges","useRef","useEffect","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","useLatest","ref","addLazyState","defineProperty","get","enumerable","addLazyFormState","versions","ReactFinalForm","init","decorators","alternateFormApi","form","initialValuesEqual","_ref$subscription","f","_React$useState","initialState","setState","stateRef","unsubscriptions","s","decorator","reverse","unsubscribe","renderProps","eventOrValues","handleSubmit","event","preventDefault","Provider","__versions","useForm","componentName","isReactNative","window","navigator","product","all$1","defaultFormat","defaultParse","defaultIsEqual","useField","_config","allowNull","_config$format","format","formatOnBlur","multiple","_config$parse","parse","_config$subscription","type","_value","configRef","register","_configRef$current","_configRef$current$fo","formatted","firstRender","handlers","onBlur","onChange","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","checked","slice","options","option","selected","getSelectedValues","getValue","onFocus","meta","addLazyFieldMetaState"],"mappings":"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","file":"vendors~auth-web-profile-form.bundle.js","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n//      \nvar keysCache = {};\nvar keysRegex = /[.[\\]]+/;\n\nvar toPath = function toPath(key) {\n  if (key === null || key === undefined || !key.length) {\n    return [];\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('toPath() expects a string');\n  }\n\n  if (keysCache[key] == null) {\n    keysCache[key] = key.split(keysRegex).filter(Boolean);\n  }\n\n  return keysCache[key];\n};\n\n//      \n\nvar getIn = function getIn(state, complexKey) {\n  // Intentionally using iteration rather than recursion\n  var path = toPath(complexKey);\n  var current = state;\n\n  for (var i = 0; i < path.length; i++) {\n    var key = path[i];\n\n    if (current === undefined || current === null || typeof current !== 'object' || Array.isArray(current) && isNaN(key)) {\n      return undefined;\n    }\n\n    current = current[key];\n  }\n\n  return current;\n};\n\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\n\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\nvar setInRecursor = function setInRecursor(current, index, path, value, destroyArrays) {\n  if (index >= path.length) {\n    // end of recursion\n    return value;\n  }\n\n  var key = path[index]; // determine type of key\n\n  if (isNaN(key)) {\n    var _extends2;\n\n    // object set\n    if (current === undefined || current === null) {\n      var _ref;\n\n      // recurse\n      var _result2 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // delete or create an object\n\n\n      return _result2 === undefined ? undefined : (_ref = {}, _ref[key] = _result2, _ref);\n    }\n\n    if (Array.isArray(current)) {\n      throw new Error('Cannot set a non-numeric property on an array');\n    } // current exists, so make a copy of all its values, and add/update the new one\n\n\n    var _result = setInRecursor(current[key], index + 1, path, value, destroyArrays);\n\n    if (_result === undefined) {\n      var numKeys = Object.keys(current).length;\n\n      if (current[key] === undefined && numKeys === 0) {\n        // object was already empty\n        return undefined;\n      }\n\n      if (current[key] !== undefined && numKeys <= 1) {\n        // only key we had was the one we are deleting\n        if (!isNaN(path[index - 1]) && !destroyArrays) {\n          // we are in an array, so return an empty object\n          return {};\n        } else {\n          return undefined;\n        }\n      }\n\n      var _removed = current[key],\n          _final = _objectWithoutPropertiesLoose(current, [key].map(_toPropertyKey));\n\n      return _final;\n    } // set result in key\n\n\n    return _extends({}, current, (_extends2 = {}, _extends2[key] = _result, _extends2));\n  } // array set\n\n\n  var numericKey = Number(key);\n\n  if (current === undefined || current === null) {\n    // recurse\n    var _result3 = setInRecursor(undefined, index + 1, path, value, destroyArrays); // if nothing returned, delete it\n\n\n    if (_result3 === undefined) {\n      return undefined;\n    } // create an array\n\n\n    var _array = [];\n    _array[numericKey] = _result3;\n    return _array;\n  }\n\n  if (!Array.isArray(current)) {\n    throw new Error('Cannot set a numeric property on an object');\n  } // recurse\n\n\n  var existingValue = current[numericKey];\n  var result = setInRecursor(existingValue, index + 1, path, value, destroyArrays); // current exists, so make a copy of all its values, and add/update the new one\n\n  var array = [].concat(current);\n\n  if (destroyArrays && result === undefined) {\n    array.splice(numericKey, 1);\n\n    if (array.length === 0) {\n      return undefined;\n    }\n  } else {\n    array[numericKey] = result;\n  }\n\n  return array;\n};\n\nvar setIn = function setIn(state, key, value, destroyArrays) {\n  if (destroyArrays === void 0) {\n    destroyArrays = false;\n  }\n\n  if (state === undefined || state === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(state) + \" state\");\n  }\n\n  if (key === undefined || key === null) {\n    throw new Error(\"Cannot call setIn() with \" + String(key) + \" key\");\n  } // Recursive function needs to accept and return State, but public API should\n  // only deal with Objects\n\n\n  return setInRecursor(state, 0, toPath(key), value, destroyArrays);\n};\n\nvar FORM_ERROR = 'FINAL_FORM/form-error';\nvar ARRAY_ERROR = 'FINAL_FORM/array-error';\n\n//      \n/**\n * Converts internal field state to published field state\n */\n\nfunction publishFieldState(formState, field) {\n  var errors = formState.errors,\n      initialValues = formState.initialValues,\n      lastSubmittedValues = formState.lastSubmittedValues,\n      submitErrors = formState.submitErrors,\n      submitFailed = formState.submitFailed,\n      submitSucceeded = formState.submitSucceeded,\n      submitting = formState.submitting,\n      values = formState.values;\n  var active = field.active,\n      blur = field.blur,\n      change = field.change,\n      data = field.data,\n      focus = field.focus,\n      modified = field.modified,\n      name = field.name,\n      touched = field.touched,\n      validating = field.validating,\n      visited = field.visited;\n  var value = getIn(values, name);\n  var error = getIn(errors, name);\n\n  if (error && error[ARRAY_ERROR]) {\n    error = error[ARRAY_ERROR];\n  }\n\n  var submitError = submitErrors && getIn(submitErrors, name);\n  var initial = initialValues && getIn(initialValues, name);\n  var pristine = field.isEqual(initial, value);\n  var dirtySinceLastSubmit = !!(lastSubmittedValues && !field.isEqual(getIn(lastSubmittedValues, name), value));\n  var valid = !error && !submitError;\n  return {\n    active: active,\n    blur: blur,\n    change: change,\n    data: data,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    focus: focus,\n    initial: initial,\n    invalid: !valid,\n    length: Array.isArray(value) ? value.length : undefined,\n    modified: modified,\n    name: name,\n    pristine: pristine,\n    submitError: submitError,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitting: submitting,\n    touched: touched,\n    valid: valid,\n    value: value,\n    visited: visited,\n    validating: validating\n  };\n}\n\n//      \nvar fieldSubscriptionItems = ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'value', 'visited', 'validating'];\n\n//      \nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//      \nfunction subscriptionFilter (dest, src, previous, subscription, keys, shallowEqualKeys) {\n  var different = false;\n  keys.forEach(function (key) {\n    if (subscription[key]) {\n      dest[key] = src[key];\n\n      if (!previous || (~shallowEqualKeys.indexOf(key) ? !shallowEqual(src[key], previous[key]) : src[key] !== previous[key])) {\n        different = true;\n      }\n    }\n  });\n  return different;\n}\n\n//      \nvar shallowEqualKeys = ['data'];\n/**\n * Filters items in a FieldState based on a FieldSubscription\n */\n\nvar filterFieldState = function filterFieldState(state, previousState, subscription, force) {\n  var result = {\n    blur: state.blur,\n    change: state.change,\n    focus: state.focus,\n    name: state.name\n  };\n  var different = subscriptionFilter(result, state, previousState, subscription, fieldSubscriptionItems, shallowEqualKeys) || !previousState;\n  return different || force ? result : undefined;\n};\n\n//      \nvar formSubscriptionItems = ['active', 'dirty', 'dirtyFields', 'dirtyFieldsSinceLastSubmit', 'dirtySinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitting', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'touched', 'valid', 'validating', 'values', 'visited'];\n\n//      \nvar shallowEqualKeys$1 = ['touched', 'visited'];\n/**\n * Filters items in a FormState based on a FormSubscription\n */\n\nfunction filterFormState(state, previousState, subscription, force) {\n  var result = {};\n  var different = subscriptionFilter(result, state, previousState, subscription, formSubscriptionItems, shallowEqualKeys$1) || !previousState;\n  return different || force ? result : undefined;\n}\n\n//      \n\nvar memoize = function memoize(fn) {\n  var lastArgs;\n  var lastResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (!lastArgs || args.length !== lastArgs.length || args.some(function (arg, index) {\n      return !shallowEqual(lastArgs[index], arg);\n    })) {\n      lastArgs = args;\n      lastResult = fn.apply(void 0, args);\n    }\n\n    return lastResult;\n  };\n};\n\nvar isPromise = (function (obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n});\n\nvar version = \"4.19.1\";\n\nvar configOptions = ['debug', 'initialValues', 'keepDirtyOnReinitialize', 'mutators', 'onSubmit', 'validate', 'validateOnBlur'];\n\nvar tripleEquals = function tripleEquals(a, b) {\n  return a === b;\n};\n\nvar hasAnyError = function hasAnyError(errors) {\n  return Object.keys(errors).some(function (key) {\n    var value = errors[key];\n\n    if (value && typeof value === 'object' && !(value instanceof Error)) {\n      return hasAnyError(value);\n    }\n\n    return typeof value !== 'undefined';\n  });\n};\n\nfunction convertToExternalFormState(_ref) {\n  var active = _ref.active,\n      dirtySinceLastSubmit = _ref.dirtySinceLastSubmit,\n      error = _ref.error,\n      errors = _ref.errors,\n      initialValues = _ref.initialValues,\n      pristine = _ref.pristine,\n      submitting = _ref.submitting,\n      submitFailed = _ref.submitFailed,\n      submitSucceeded = _ref.submitSucceeded,\n      submitError = _ref.submitError,\n      submitErrors = _ref.submitErrors,\n      valid = _ref.valid,\n      validating = _ref.validating,\n      values = _ref.values;\n  return {\n    active: active,\n    dirty: !pristine,\n    dirtySinceLastSubmit: dirtySinceLastSubmit,\n    error: error,\n    errors: errors,\n    hasSubmitErrors: !!(submitError || submitErrors && hasAnyError(submitErrors)),\n    hasValidationErrors: !!(error || hasAnyError(errors)),\n    invalid: !valid,\n    initialValues: initialValues,\n    pristine: pristine,\n    submitting: submitting,\n    submitFailed: submitFailed,\n    submitSucceeded: submitSucceeded,\n    submitError: submitError,\n    submitErrors: submitErrors,\n    valid: valid,\n    validating: validating > 0,\n    values: values\n  };\n}\n\nfunction notifySubscriber(subscriber, subscription, state, lastState, filter, force) {\n  var notification = filter(state, lastState, subscription, force);\n\n  if (notification) {\n    subscriber(notification);\n    return true;\n  }\n\n  return false;\n}\n\nfunction notify(_ref2, state, lastState, filter, force) {\n  var entries = _ref2.entries;\n  Object.keys(entries).forEach(function (key) {\n    var entry = entries[Number(key)]; // istanbul ignore next\n\n    if (entry) {\n      var subscription = entry.subscription,\n          subscriber = entry.subscriber,\n          notified = entry.notified;\n\n      if (notifySubscriber(subscriber, subscription, state, lastState, filter, force || !notified)) {\n        entry.notified = true;\n      }\n    }\n  });\n}\n\nfunction createForm(config) {\n  if (!config) {\n    throw new Error('No config specified');\n  }\n\n  var debug = config.debug,\n      destroyOnUnregister = config.destroyOnUnregister,\n      keepDirtyOnReinitialize = config.keepDirtyOnReinitialize,\n      initialValues = config.initialValues,\n      mutators = config.mutators,\n      onSubmit = config.onSubmit,\n      validate = config.validate,\n      validateOnBlur = config.validateOnBlur;\n\n  if (!onSubmit) {\n    throw new Error('No onSubmit function specified');\n  }\n\n  var state = {\n    subscribers: {\n      index: 0,\n      entries: {}\n    },\n    fieldSubscribers: {},\n    fields: {},\n    formState: {\n      dirtySinceLastSubmit: false,\n      errors: {},\n      initialValues: initialValues && _extends({}, initialValues),\n      invalid: false,\n      pristine: true,\n      submitting: false,\n      submitFailed: false,\n      submitSucceeded: false,\n      valid: true,\n      validating: 0,\n      values: initialValues ? _extends({}, initialValues) : {}\n    },\n    lastFormState: undefined\n  };\n  var inBatch = 0;\n  var validationPaused = false;\n  var validationBlocked = false;\n  var nextAsyncValidationKey = 0;\n  var asyncValidationPromises = {};\n\n  var clearAsyncValidationPromise = function clearAsyncValidationPromise(key) {\n    return function (result) {\n      delete asyncValidationPromises[key];\n      return result;\n    };\n  };\n\n  var changeValue = function changeValue(state, name, mutate) {\n    var before = getIn(state.formState.values, name);\n    var after = mutate(before);\n    state.formState.values = setIn(state.formState.values, name, after) || {};\n  };\n\n  var renameField = function renameField(state, from, to) {\n    if (state.fields[from]) {\n      var _extends2, _extends3;\n\n      state.fields = _extends({}, state.fields, (_extends2 = {}, _extends2[to] = _extends({}, state.fields[from], {\n        name: to,\n        // rebind event handlers\n        blur: function blur() {\n          return api.blur(to);\n        },\n        change: function change(value) {\n          return api.change(to, value);\n        },\n        focus: function focus() {\n          return api.focus(to);\n        },\n        lastFieldState: undefined\n      }), _extends2));\n      delete state.fields[from];\n      state.fieldSubscribers = _extends({}, state.fieldSubscribers, (_extends3 = {}, _extends3[to] = state.fieldSubscribers[from], _extends3));\n      delete state.fieldSubscribers[from];\n      var value = getIn(state.formState.values, from);\n      state.formState.values = setIn(state.formState.values, from, undefined) || {};\n      state.formState.values = setIn(state.formState.values, to, value);\n      delete state.lastFormState;\n    }\n  }; // bind state to mutators\n\n\n  var getMutatorApi = function getMutatorApi(key) {\n    return function () {\n      // istanbul ignore next\n      if (mutators) {\n        // ^^ causes branch coverage warning, but needed to appease the Flow gods\n        var mutatableState = {\n          formState: state.formState,\n          fields: state.fields,\n          fieldSubscribers: state.fieldSubscribers,\n          lastFormState: state.lastFormState\n        };\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        var returnValue = mutators[key](args, mutatableState, {\n          changeValue: changeValue,\n          getIn: getIn,\n          renameField: renameField,\n          resetFieldState: api.resetFieldState,\n          setIn: setIn,\n          shallowEqual: shallowEqual\n        });\n        state.formState = mutatableState.formState;\n        state.fields = mutatableState.fields;\n        state.fieldSubscribers = mutatableState.fieldSubscribers;\n        state.lastFormState = mutatableState.lastFormState;\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n        return returnValue;\n      }\n    };\n  };\n\n  var mutatorsApi = mutators ? Object.keys(mutators).reduce(function (result, key) {\n    result[key] = getMutatorApi(key);\n    return result;\n  }, {}) : {};\n\n  var runRecordLevelValidation = function runRecordLevelValidation(setErrors) {\n    var promises = [];\n\n    if (validate) {\n      var errorsOrPromise = validate(_extends({}, state.formState.values)); // clone to avoid writing\n\n      if (isPromise(errorsOrPromise)) {\n        promises.push(errorsOrPromise.then(setErrors));\n      } else {\n        setErrors(errorsOrPromise);\n      }\n    }\n\n    return promises;\n  };\n\n  var getValidators = function getValidators(field) {\n    return Object.keys(field.validators).reduce(function (result, index) {\n      var validator = field.validators[Number(index)]();\n\n      if (validator) {\n        result.push(validator);\n      }\n\n      return result;\n    }, []);\n  };\n\n  var runFieldLevelValidation = function runFieldLevelValidation(field, setError) {\n    var promises = [];\n    var validators = getValidators(field);\n\n    if (validators.length) {\n      var error;\n      validators.forEach(function (validator) {\n        var errorOrPromise = validator(getIn(state.formState.values, field.name), state.formState.values, validator.length === 3 ? publishFieldState(state.formState, state.fields[field.name]) : undefined);\n\n        if (errorOrPromise && isPromise(errorOrPromise)) {\n          field.validating = true;\n          var promise = errorOrPromise.then(function (error) {\n            field.validating = false;\n            setError(error);\n          }); // errors must be resolved, not rejected\n\n          promises.push(promise);\n        } else if (!error) {\n          // first registered validator wins\n          error = errorOrPromise;\n        }\n      });\n      setError(error);\n    }\n\n    return promises;\n  };\n\n  var runValidation = function runValidation(fieldChanged, callback) {\n    if (validationPaused) {\n      validationBlocked = true;\n      callback();\n      return;\n    }\n\n    var fields = state.fields,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var fieldKeys = Object.keys(safeFields);\n\n    if (!validate && !fieldKeys.some(function (key) {\n      return getValidators(safeFields[key]).length;\n    })) {\n      callback();\n      return; // no validation rules\n    } // pare down field keys to actually validate\n\n\n    var limitedFieldLevelValidation = false;\n\n    if (fieldChanged) {\n      var changedField = safeFields[fieldChanged];\n\n      if (changedField) {\n        var validateFields = changedField.validateFields;\n\n        if (validateFields) {\n          limitedFieldLevelValidation = true;\n          fieldKeys = validateFields.length ? validateFields.concat(fieldChanged) : [fieldChanged];\n        }\n      }\n    }\n\n    var recordLevelErrors = {};\n    var fieldLevelErrors = {};\n    var promises = [].concat(runRecordLevelValidation(function (errors) {\n      recordLevelErrors = errors || {};\n    }), fieldKeys.reduce(function (result, name) {\n      return result.concat(runFieldLevelValidation(fields[name], function (error) {\n        fieldLevelErrors[name] = error;\n      }));\n    }, []));\n    var hasAsyncValidations = promises.length > 0;\n    var asyncValidationPromiseKey = ++nextAsyncValidationKey;\n    var promise = Promise.all(promises).then(clearAsyncValidationPromise(asyncValidationPromiseKey)); // backwards-compat: add promise to submit-blocking promises iff there are any promises to await\n\n    if (hasAsyncValidations) {\n      asyncValidationPromises[asyncValidationPromiseKey] = promise;\n    }\n\n    var processErrors = function processErrors() {\n      var merged = _extends({}, limitedFieldLevelValidation ? formState.errors : {}, {}, recordLevelErrors);\n\n      var forEachError = function forEachError(fn) {\n        fieldKeys.forEach(function (name) {\n          if (fields[name]) {\n            // make sure field is still registered\n            // field-level errors take precedent over record-level errors\n            var recordLevelError = getIn(recordLevelErrors, name);\n            var errorFromParent = getIn(merged, name);\n            var hasFieldLevelValidation = getValidators(safeFields[name]).length;\n            var fieldLevelError = fieldLevelErrors[name];\n            fn(name, hasFieldLevelValidation && fieldLevelError || validate && recordLevelError || (!recordLevelError && !limitedFieldLevelValidation ? errorFromParent : undefined));\n          }\n        });\n      };\n\n      forEachError(function (name, error) {\n        merged = setIn(merged, name, error) || {};\n      });\n      forEachError(function (name, error) {\n        if (error && error[ARRAY_ERROR]) {\n          var existing = getIn(merged, name);\n          var copy = [].concat(existing);\n          copy[ARRAY_ERROR] = error[ARRAY_ERROR];\n          merged = setIn(merged, name, copy);\n        }\n      });\n\n      if (!shallowEqual(formState.errors, merged)) {\n        formState.errors = merged;\n      }\n\n      formState.error = recordLevelErrors[FORM_ERROR];\n    }; // process sync errors\n\n\n    processErrors(); // sync errors have been set. notify listeners while we wait for others\n\n    callback();\n\n    if (hasAsyncValidations) {\n      state.formState.validating++;\n      callback();\n\n      var afterPromise = function afterPromise() {\n        state.formState.validating--;\n        callback();\n      };\n\n      promise.then(function () {\n        if (nextAsyncValidationKey > asyncValidationPromiseKey) {\n          // if this async validator has been superseded by another, ignore its results\n          return;\n        }\n\n        processErrors();\n      }).then(afterPromise, afterPromise);\n    }\n  };\n\n  var notifyFieldListeners = function notifyFieldListeners(name) {\n    if (inBatch) {\n      return;\n    }\n\n    var fields = state.fields,\n        fieldSubscribers = state.fieldSubscribers,\n        formState = state.formState;\n\n    var safeFields = _extends({}, fields);\n\n    var notifyField = function notifyField(name) {\n      var field = safeFields[name];\n      var fieldState = publishFieldState(formState, field);\n      var lastFieldState = field.lastFieldState;\n      field.lastFieldState = fieldState;\n      var fieldSubscriber = fieldSubscribers[name];\n\n      if (fieldSubscriber) {\n        notify(fieldSubscriber, fieldState, lastFieldState, filterFieldState, lastFieldState === undefined);\n      }\n    };\n\n    if (name) {\n      notifyField(name);\n    } else {\n      Object.keys(safeFields).forEach(notifyField);\n    }\n  };\n\n  var markAllFieldsTouched = function markAllFieldsTouched() {\n    Object.keys(state.fields).forEach(function (key) {\n      state.fields[key].touched = true;\n    });\n  };\n\n  var hasSyncErrors = function hasSyncErrors() {\n    return !!(state.formState.error || hasAnyError(state.formState.errors));\n  };\n\n  var calculateNextFormState = function calculateNextFormState() {\n    var fields = state.fields,\n        formState = state.formState,\n        lastFormState = state.lastFormState;\n\n    var safeFields = _extends({}, fields);\n\n    var safeFieldKeys = Object.keys(safeFields); // calculate dirty/pristine\n\n    var foundDirty = false;\n    var dirtyFields = safeFieldKeys.reduce(function (result, key) {\n      var dirty = !safeFields[key].isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n      if (dirty) {\n        foundDirty = true;\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    var dirtyFieldsSinceLastSubmit = safeFieldKeys.reduce(function (result, key) {\n      // istanbul ignore next\n      var nonNullLastSubmittedValues = formState.lastSubmittedValues || {}; // || {} is for flow, but causes branch coverage complaint\n\n      if (!safeFields[key].isEqual(getIn(formState.values, key), getIn(nonNullLastSubmittedValues, key))) {\n        result[key] = true;\n      }\n\n      return result;\n    }, {});\n    formState.pristine = !foundDirty;\n    formState.dirtySinceLastSubmit = !!(formState.lastSubmittedValues && Object.values(dirtyFieldsSinceLastSubmit).some(function (value) {\n      return value;\n    }));\n    formState.valid = !formState.error && !formState.submitError && !hasAnyError(formState.errors) && !(formState.submitErrors && hasAnyError(formState.submitErrors));\n    var nextFormState = convertToExternalFormState(formState);\n\n    var _safeFieldKeys$reduce = safeFieldKeys.reduce(function (result, key) {\n      result.modified[key] = safeFields[key].modified;\n      result.touched[key] = safeFields[key].touched;\n      result.visited[key] = safeFields[key].visited;\n      return result;\n    }, {\n      modified: {},\n      touched: {},\n      visited: {}\n    }),\n        modified = _safeFieldKeys$reduce.modified,\n        touched = _safeFieldKeys$reduce.touched,\n        visited = _safeFieldKeys$reduce.visited;\n\n    nextFormState.dirtyFields = lastFormState && shallowEqual(lastFormState.dirtyFields, dirtyFields) ? lastFormState.dirtyFields : dirtyFields;\n    nextFormState.dirtyFieldsSinceLastSubmit = lastFormState && shallowEqual(lastFormState.dirtyFieldsSinceLastSubmit, dirtyFieldsSinceLastSubmit) ? lastFormState.dirtyFieldsSinceLastSubmit : dirtyFieldsSinceLastSubmit;\n    nextFormState.modified = lastFormState && shallowEqual(lastFormState.modified, modified) ? lastFormState.modified : modified;\n    nextFormState.touched = lastFormState && shallowEqual(lastFormState.touched, touched) ? lastFormState.touched : touched;\n    nextFormState.visited = lastFormState && shallowEqual(lastFormState.visited, visited) ? lastFormState.visited : visited;\n    return lastFormState && shallowEqual(lastFormState, nextFormState) ? lastFormState : nextFormState;\n  };\n\n  var callDebug = function callDebug() {\n    return debug && \"development\" !== 'production' && debug(calculateNextFormState(), Object.keys(state.fields).reduce(function (result, key) {\n      result[key] = state.fields[key];\n      return result;\n    }, {}));\n  };\n\n  var notifying = false;\n  var scheduleNotification = false;\n\n  var notifyFormListeners = function notifyFormListeners() {\n    if (notifying) {\n      scheduleNotification = true;\n    } else {\n      notifying = true;\n      callDebug();\n\n      if (!inBatch && !validationPaused) {\n        var lastFormState = state.lastFormState;\n        var nextFormState = calculateNextFormState();\n\n        if (nextFormState !== lastFormState) {\n          state.lastFormState = nextFormState;\n          notify(state.subscribers, nextFormState, lastFormState, filterFormState);\n        }\n      }\n\n      notifying = false;\n\n      if (scheduleNotification) {\n        scheduleNotification = false;\n        notifyFormListeners();\n      }\n    }\n  };\n\n  var beforeSubmit = function beforeSubmit() {\n    return Object.keys(state.fields).some(function (name) {\n      return state.fields[name].beforeSubmit && state.fields[name].beforeSubmit() === false;\n    });\n  };\n\n  var afterSubmit = function afterSubmit() {\n    return Object.keys(state.fields).forEach(function (name) {\n      return state.fields[name].afterSubmit && state.fields[name].afterSubmit();\n    });\n  }; // generate initial errors\n\n\n  runValidation(undefined, function () {\n    notifyFormListeners();\n  });\n  var api = {\n    batch: function batch(fn) {\n      inBatch++;\n      fn();\n      inBatch--;\n      notifyFieldListeners();\n      notifyFormListeners();\n    },\n    blur: function blur(name) {\n      var fields = state.fields,\n          formState = state.formState;\n      var previous = fields[name];\n\n      if (previous) {\n        // can only blur registered fields\n        delete formState.active;\n        fields[name] = _extends({}, previous, {\n          active: false,\n          touched: true\n        });\n\n        if (validateOnBlur) {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        } else {\n          notifyFieldListeners();\n          notifyFormListeners();\n        }\n      }\n    },\n    change: function change(name, value) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      if (getIn(formState.values, name) !== value) {\n        changeValue(state, name, function () {\n          return value;\n        });\n        var previous = fields[name];\n\n        if (previous) {\n          // only track modified for registered fields\n          fields[name] = _extends({}, previous, {\n            modified: true\n          });\n        }\n\n        if (validateOnBlur) {\n          notifyFieldListeners();\n          notifyFormListeners();\n        } else {\n          runValidation(name, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n        }\n      }\n    },\n\n    get destroyOnUnregister() {\n      return !!destroyOnUnregister;\n    },\n\n    set destroyOnUnregister(value) {\n      destroyOnUnregister = value;\n    },\n\n    focus: function focus(name) {\n      var field = state.fields[name];\n\n      if (field && !field.active) {\n        state.formState.active = name;\n        field.active = true;\n        field.visited = true;\n        notifyFieldListeners();\n        notifyFormListeners();\n      }\n    },\n    mutators: mutatorsApi,\n    getFieldState: function getFieldState(name) {\n      var field = state.fields[name];\n      return field && field.lastFieldState;\n    },\n    getRegisteredFields: function getRegisteredFields() {\n      return Object.keys(state.fields);\n    },\n    getState: function getState() {\n      return calculateNextFormState();\n    },\n    initialize: function initialize(data) {\n      var fields = state.fields,\n          formState = state.formState;\n\n      var safeFields = _extends({}, fields);\n\n      var values = typeof data === 'function' ? data(formState.values) : data;\n\n      if (!keepDirtyOnReinitialize) {\n        formState.values = values;\n      }\n      /**\n       * Hello, inquisitive code reader! Thanks for taking the time to dig in!\n       *\n       * The following code is the way it is to allow for non-registered deep\n       * field values to be set via initialize()\n       */\n      // save dirty values\n\n\n      var savedDirtyValues = keepDirtyOnReinitialize ? Object.keys(safeFields).reduce(function (result, key) {\n        var field = safeFields[key];\n        var pristine = field.isEqual(getIn(formState.values, key), getIn(formState.initialValues || {}, key));\n\n        if (!pristine) {\n          result[key] = getIn(formState.values, key);\n        }\n\n        return result;\n      }, {}) : {}; // update initalValues and values\n\n      formState.initialValues = values;\n      formState.values = values; // restore the dirty values\n\n      Object.keys(savedDirtyValues).forEach(function (key) {\n        formState.values = setIn(formState.values, key, savedDirtyValues[key]);\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    isValidationPaused: function isValidationPaused() {\n      return validationPaused;\n    },\n    pauseValidation: function pauseValidation() {\n      validationPaused = true;\n    },\n    registerField: function registerField(name, subscriber, subscription, fieldConfig) {\n      if (subscription === void 0) {\n        subscription = {};\n      }\n\n      if (!state.fieldSubscribers[name]) {\n        state.fieldSubscribers[name] = {\n          index: 0,\n          entries: {}\n        };\n      }\n\n      var index = state.fieldSubscribers[name].index++; // save field subscriber callback\n\n      state.fieldSubscribers[name].entries[index] = {\n        subscriber: memoize(subscriber),\n        subscription: subscription,\n        notified: false\n      };\n\n      if (!state.fields[name]) {\n        // create initial field state\n        state.fields[name] = {\n          active: false,\n          afterSubmit: fieldConfig && fieldConfig.afterSubmit,\n          beforeSubmit: fieldConfig && fieldConfig.beforeSubmit,\n          blur: function blur() {\n            return api.blur(name);\n          },\n          change: function change(value) {\n            return api.change(name, value);\n          },\n          data: fieldConfig && fieldConfig.data || {},\n          focus: function focus() {\n            return api.focus(name);\n          },\n          isEqual: fieldConfig && fieldConfig.isEqual || tripleEquals,\n          lastFieldState: undefined,\n          modified: false,\n          name: name,\n          touched: false,\n          valid: true,\n          validateFields: fieldConfig && fieldConfig.validateFields,\n          validators: {},\n          validating: false,\n          visited: false\n        };\n      }\n\n      var haveValidator = false;\n      var silent = fieldConfig && fieldConfig.silent;\n\n      var notify = function notify() {\n        if (silent) {\n          notifyFieldListeners(name);\n        } else {\n          notifyFormListeners();\n          notifyFieldListeners();\n        }\n      };\n\n      if (fieldConfig) {\n        haveValidator = !!(fieldConfig.getValidator && fieldConfig.getValidator());\n\n        if (fieldConfig.getValidator) {\n          state.fields[name].validators[index] = fieldConfig.getValidator;\n        }\n\n        if (fieldConfig.initialValue !== undefined && getIn(state.formState.values, name) === undefined // only initialize if we don't yet have any value for this field\n        ) {\n            state.formState.initialValues = setIn(state.formState.initialValues || {}, name, fieldConfig.initialValue);\n            state.formState.values = setIn(state.formState.values, name, fieldConfig.initialValue);\n            runValidation(undefined, notify);\n          }\n\n        if (fieldConfig.defaultValue !== undefined && fieldConfig.initialValue === undefined && getIn(state.formState.initialValues, name) === undefined) {\n          state.formState.values = setIn(state.formState.values, name, fieldConfig.defaultValue);\n        }\n      }\n\n      if (haveValidator) {\n        runValidation(undefined, notify);\n      } else {\n        notify();\n      }\n\n      return function () {\n        var validatorRemoved = false; // istanbul ignore next\n\n        if (state.fields[name]) {\n          // state.fields[name] may have been removed by a mutator\n          validatorRemoved = !!(state.fields[name].validators[index] && state.fields[name].validators[index]());\n          delete state.fields[name].validators[index];\n        }\n\n        delete state.fieldSubscribers[name].entries[index];\n        var lastOne = !Object.keys(state.fieldSubscribers[name].entries).length;\n\n        if (lastOne) {\n          delete state.fieldSubscribers[name];\n          delete state.fields[name];\n\n          if (validatorRemoved) {\n            state.formState.errors = setIn(state.formState.errors, name, undefined) || {};\n          }\n\n          if (destroyOnUnregister) {\n            state.formState.values = setIn(state.formState.values, name, undefined, true) || {};\n          }\n        }\n\n        if (!silent) {\n          if (validatorRemoved) {\n            runValidation(undefined, function () {\n              notifyFormListeners();\n              notifyFieldListeners();\n            });\n          } else if (lastOne) {\n            // values or errors may have changed\n            notifyFormListeners();\n          }\n        }\n      };\n    },\n    reset: function reset(initialValues) {\n      if (initialValues === void 0) {\n        initialValues = state.formState.initialValues;\n      }\n\n      if (state.formState.submitting) {\n        throw Error('Cannot reset() in onSubmit(), use setTimeout(form.reset)');\n      }\n\n      state.formState.submitFailed = false;\n      state.formState.submitSucceeded = false;\n      delete state.formState.submitError;\n      delete state.formState.submitErrors;\n      delete state.formState.lastSubmittedValues;\n      api.initialize(initialValues || {});\n    },\n\n    /**\n     * Resets all field flags (e.g. touched, visited, etc.) to their initial state\n     */\n    resetFieldState: function resetFieldState(name) {\n      state.fields[name] = _extends({}, state.fields[name], {}, {\n        active: false,\n        lastFieldState: undefined,\n        modified: false,\n        touched: false,\n        valid: true,\n        validating: false,\n        visited: false\n      });\n      runValidation(undefined, function () {\n        notifyFieldListeners();\n        notifyFormListeners();\n      });\n    },\n    resumeValidation: function resumeValidation() {\n      validationPaused = false;\n\n      if (validationBlocked) {\n        // validation was attempted while it was paused, so run it now\n        runValidation(undefined, function () {\n          notifyFieldListeners();\n          notifyFormListeners();\n        });\n      }\n\n      validationBlocked = false;\n    },\n    setConfig: function setConfig(name, value) {\n      switch (name) {\n        case 'debug':\n          debug = value;\n          break;\n\n        case 'destroyOnUnregister':\n          destroyOnUnregister = value;\n          break;\n\n        case 'initialValues':\n          api.initialize(value);\n          break;\n\n        case 'keepDirtyOnReinitialize':\n          keepDirtyOnReinitialize = value;\n          break;\n\n        case 'mutators':\n          mutators = value;\n\n          if (value) {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              if (!(key in value)) {\n                delete mutatorsApi[key];\n              }\n            });\n            Object.keys(value).forEach(function (key) {\n              mutatorsApi[key] = getMutatorApi(key);\n            });\n          } else {\n            Object.keys(mutatorsApi).forEach(function (key) {\n              delete mutatorsApi[key];\n            });\n          }\n\n          break;\n\n        case 'onSubmit':\n          onSubmit = value;\n          break;\n\n        case 'validate':\n          validate = value;\n          runValidation(undefined, function () {\n            notifyFieldListeners();\n            notifyFormListeners();\n          });\n          break;\n\n        case 'validateOnBlur':\n          validateOnBlur = value;\n          break;\n\n        default:\n          throw new Error('Unrecognised option ' + name);\n      }\n    },\n    submit: function submit() {\n      var formState = state.formState;\n\n      if (formState.submitting) {\n        return;\n      }\n\n      if (hasSyncErrors()) {\n        markAllFieldsTouched();\n        state.formState.submitFailed = true;\n        notifyFormListeners();\n        notifyFieldListeners();\n        return; // no submit for you!!\n      }\n\n      var asyncValidationPromisesKeys = Object.keys(asyncValidationPromises);\n\n      if (asyncValidationPromisesKeys.length) {\n        // still waiting on async validation to complete...\n        Promise.all(asyncValidationPromisesKeys.map(function (key) {\n          return asyncValidationPromises[Number(key)];\n        })).then(api.submit, console.error);\n        return;\n      }\n\n      var submitIsBlocked = beforeSubmit();\n\n      if (submitIsBlocked) {\n        return;\n      }\n\n      var resolvePromise;\n      var completeCalled = false;\n\n      var complete = function complete(errors) {\n        formState.submitting = false;\n\n        if (errors && hasAnyError(errors)) {\n          formState.submitFailed = true;\n          formState.submitSucceeded = false;\n          formState.submitErrors = errors;\n          formState.submitError = errors[FORM_ERROR];\n          markAllFieldsTouched();\n        } else {\n          formState.submitFailed = false;\n          formState.submitSucceeded = true;\n          afterSubmit();\n        }\n\n        notifyFormListeners();\n        notifyFieldListeners();\n        completeCalled = true;\n\n        if (resolvePromise) {\n          resolvePromise(errors);\n        }\n\n        return errors;\n      };\n\n      delete formState.submitErrors;\n      delete formState.submitError;\n      formState.submitting = true;\n      formState.submitFailed = false;\n      formState.submitSucceeded = false;\n      formState.lastSubmittedValues = _extends({}, formState.values); // onSubmit is either sync, callback or async with a Promise\n\n      var result = onSubmit(formState.values, api, complete);\n\n      if (!completeCalled) {\n        if (result && isPromise(result)) {\n          // onSubmit is async with a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return result.then(complete, function (error) {\n            complete();\n            throw error;\n          });\n        } else if (onSubmit.length >= 3) {\n          // must be async, so we should return a Promise\n          notifyFormListeners(); // let everyone know we are submitting\n\n          notifyFieldListeners(); // notify fields also\n\n          return new Promise(function (resolve) {\n            resolvePromise = resolve;\n          });\n        } else {\n          // onSubmit is sync\n          complete(result);\n        }\n      }\n    },\n    subscribe: function subscribe(subscriber, subscription) {\n      if (!subscriber) {\n        throw new Error('No callback given.');\n      }\n\n      if (!subscription) {\n        throw new Error('No subscription provided. What values do you want to listen to?');\n      }\n\n      var memoized = memoize(subscriber);\n      var subscribers = state.subscribers;\n      var index = subscribers.index++;\n      subscribers.entries[index] = {\n        subscriber: memoized,\n        subscription: subscription,\n        notified: false\n      };\n      var nextFormState = calculateNextFormState();\n      notifySubscriber(memoized, subscription, nextFormState, nextFormState, filterFormState, true);\n      return function () {\n        delete subscribers.entries[index];\n      };\n    }\n  };\n  return api;\n}\n\nexport { ARRAY_ERROR, FORM_ERROR, configOptions, createForm, fieldSubscriptionItems, formSubscriptionItems, getIn, setIn, version };\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React__default, { createElement, createContext, useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.4.0\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = useRef(true);\n  var onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, {}, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all$1 = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all$1 : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.name, format, formatOnBlur]),\n    onChange: useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type;\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: useCallback(function (event) {\n      state.focus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      if (type === 'checkbox') {\n        if (_value === undefined) {\n          return !!state.value;\n        } else {\n          return !!(Array.isArray(state.value) && ~state.value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return state.value === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = function Field(_ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, {}, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return createElement(component, _extends({}, field.input, {\n      children: children\n    }, rest));\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component\n  }, rest), field, \"Field(\" + name + \")\");\n};\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n"],"sourceRoot":""}