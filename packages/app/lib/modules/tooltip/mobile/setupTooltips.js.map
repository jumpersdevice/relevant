{"version":3,"sources":["../../../../src/modules/tooltip/mobile/setupTooltips.js"],"names":["defaultData","vertical","horizontal","horizontalOffset","verticalOffset","setupMobileTooltips","tooltips","dispatch","initTooltips","forEach","tooltip","data","desktopOnly","name","toggle","toggleTooltip","el","current","measureInWindow","x","y","w","h","parent","fullHeight","Dimensions","get","height"],"mappings":"uSAAA,gDACA,2C,yyBAEA,GAAMA,CAAAA,WAAW,CAAG,CAClBC,QAAQ,CAAE,KADQ,CAElBC,UAAU,CAAE,OAFM,CAGlBC,gBAAgB,CAAE,CAHA,CAIlBC,cAAc,CAAE,EAJE,CAApB,CAOO,QAASC,CAAAA,mBAAT,MAAqD,IAAtBC,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZC,QAAY,MAAZA,QAAY,CAG1D,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBF,QAAQ,CAACG,OAAT,CAAiB,SAAAC,OAAO,CAAI,CAC1B,GAAIA,OAAO,CAACC,IAAR,CAAaC,WAAjB,CAA8B,MAAO,KAAP,CAC9B,MAAOL,CAAAA,QAAQ,CACb,4BAAe,CACbM,IAAI,CAAEH,OAAO,CAACG,IADD,CAEbC,MAAM,CAAE,wBAAMC,CAAAA,aAAa,CAACL,OAAO,CAACG,IAAT,CAAnB,EAFK,CAAf,CADa,CAAf,CAMD,CARD,EASD,CAVD,CAYA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAF,IAAI,CAAI,CAC5BP,QAAQ,CAACG,OAAT,CAAiB,SAAAC,OAAO,CAAI,CAC1B,GAAIA,OAAO,CAACC,IAAR,CAAaC,WAAjB,CAA8B,OAC9B,GAAI,CAACF,OAAO,CAACM,EAAR,CAAWC,OAAhB,CAAyB,OACzBP,OAAO,CAACM,EAAR,CAAWC,OAAX,CAAmBC,eAAnB,CAAmC,SAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAUC,CAAV,CAAgB,CACjD,GAAMC,CAAAA,MAAM,CAAG,CAAEJ,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQC,CAAC,CAADA,CAAR,CAAWC,CAAC,CAADA,CAAX,CAAf,CACA,GAAIH,CAAC,CAAGC,CAAJ,CAAQC,CAAR,CAAYC,CAAZ,GAAkB,CAAtB,CAAyB,OACzB,GAAME,CAAAA,UAAU,CAAGC,2BAAWC,GAAX,CAAe,QAAf,EAAyBC,MAA5C,CACA,GAAIP,CAAC,CAAGI,UAAU,CAAG,EAArB,CAAyB,OACzBjB,QAAQ,CACN,yDACEM,IAAI,CAAEH,OAAO,CAACG,IADhB,CAEEU,MAAM,CAANA,MAFF,EAGKvB,WAHL,MAIEW,IAAI,CAAED,OAAO,CAACC,IAJhB,GADM,CAAR,CAQAJ,QAAQ,CAAC,yBAAYM,IAAZ,CAAD,CAAR,CACD,CAdD,EAeD,CAlBD,EAmBD,CApBD,CAsBA,MAAO,CAAEL,YAAY,CAAZA,YAAF,CAAgBO,aAAa,CAAbA,aAAhB,CAAP,CACD","sourcesContent":["import { Dimensions } from 'react-native';\nimport { setTooltipData, showTooltip } from 'modules/tooltip/tooltip.actions';\n\nconst defaultData = {\n  vertical: 'top',\n  horizontal: 'right',\n  horizontalOffset: 0,\n  verticalOffset: 10\n};\n\nexport function setupMobileTooltips({ tooltips, dispatch }) {\n  // this is used to programatically trigger toolitps\n  // needs name refactor\n  const initTooltips = () => {\n    tooltips.forEach(tooltip => {\n      if (tooltip.data.desktopOnly) return null;\n      return dispatch(\n        setTooltipData({\n          name: tooltip.name,\n          toggle: () => toggleTooltip(tooltip.name)\n        })\n      );\n    });\n  };\n\n  const toggleTooltip = name => {\n    tooltips.forEach(tooltip => {\n      if (tooltip.data.desktopOnly) return;\n      if (!tooltip.el.current) return;\n      tooltip.el.current.measureInWindow((x, y, w, h) => {\n        const parent = { x, y, w, h };\n        if (x + y + w + h === 0) return;\n        const fullHeight = Dimensions.get('window').height;\n        if (y > fullHeight - 50) return;\n        dispatch(\n          setTooltipData({\n            name: tooltip.name,\n            parent,\n            ...defaultData,\n            data: tooltip.data\n          })\n        );\n        dispatch(showTooltip(name));\n      });\n    });\n  };\n\n  return { initTooltips, toggleTooltip };\n}\n"],"file":"setupTooltips.js"}