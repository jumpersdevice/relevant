{"version":3,"sources":["../../../src/modules/tooltip/tooltip.component.js"],"names":["InfoImage","require","isNative","process","env","WEB","AbsoluteWrapper","styled","Text","TooltipContainer","propTypes","name","PropTypes","string","data","object","children","info","bool","inline","oneOfType","number","rest","ReactTooltip","rebuild","shouldRegister","initTooltip","dispatch","el","tooltips","toggleTooltip","Wrapper","View","desktopOnly","position","JSON","stringify","type","props"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { View, Image, Text } from 'modules/styled/uni';\nimport styled from 'styled-components/primitives';\nimport { setupMobileTooltips } from 'modules/tooltip/mobile/setupTooltips';\nimport ReactTooltip from 'react-tooltip';\n\nconst InfoImage = require('public/img/info.png');\n\nconst isNative = process.env.WEB !== 'true';\n\nconst AbsoluteWrapper = styled.Text`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  overflow: hidden;\n  z-index: 1;\n`;\n\nTooltipContainer.propTypes = {\n  name: PropTypes.string,\n  data: PropTypes.object,\n  children: PropTypes.object,\n  info: PropTypes.bool,\n  inline: PropTypes.oneOfType([PropTypes.bool, PropTypes.number])\n};\n\nexport default function TooltipContainer({\n  children,\n  name,\n  data,\n  info,\n  inline,\n  ...rest\n}) {\n  useEffect(() => {\n    if (ReactTooltip.rebuild) ReactTooltip.rebuild();\n  }, [data, name, children]);\n\n  useEffect(() => data.shouldRegister && initTooltip(), [\n    data.shouldRegister,\n    initTooltip\n  ]);\n\n  const dispatch = useDispatch();\n  const el = useRef();\n  const { toggleTooltip, initTooltip } = setupMobileTooltips({\n    tooltips: [{ name, el, data }],\n    dispatch\n  });\n\n  const Wrapper = (children && View) || AbsoluteWrapper;\n\n  return info ? (\n    <Text\n      ref={el}\n      // onLongPress={() => toggleTooltip(name)}\n      onPress={data.desktopOnly || !isNative ? null : () => toggleTooltip(name)}\n      inline={inline}\n    >\n      <Image\n        data-event-off=\"click\"\n        data-place={data.position}\n        data-for=\"mainTooltip\"\n        data-tip={JSON.stringify({\n          type: 'TEXT',\n          props: data\n        })}\n        {...rest}\n        source={InfoImage}\n        resizeMode={'contain'}\n        h={1.7}\n        w={1.7}\n        inline={inline}\n        {...rest}\n      />\n    </Text>\n  ) : (\n    <Wrapper\n      ref={el}\n      data-event-off=\"click\"\n      data-place={data.position}\n      data-for=\"mainTooltip\"\n      data-tip={JSON.stringify({\n        type: 'TEXT',\n        props: data\n      })}\n      onLongPress={() => toggleTooltip(name)}\n      onPress={data.desktopOnly || !isNative ? null : () => toggleTooltip(name)}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n"],"file":"tooltip.component.js"}