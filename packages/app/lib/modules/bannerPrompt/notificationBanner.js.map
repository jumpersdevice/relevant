{"version":3,"sources":["../../../src/modules/bannerPrompt/notificationBanner.js"],"names":["TEXT_DEFAULTS","messageText","actionText","dismissText","MESSAGE_TEXT_DEFAULTS","upvoteComment","upvotePost","createComment","createPost","PushNotification","propTypes","PropTypes","string","type","user","state","auth","dispatch","handleClick","handleClickMobile","handleDismiss","now","Date","getTime","storage","set","mainText","isNative","title","onDismiss","onClick"],"mappings":"iWAAA,oDACA,uCACA,6DACA,kCACA,sDAIA,oCACA,0CACA,+DACA,iE,4GAEA,GAAMA,CAAAA,aAAa,CAAG,CACpBC,WAAW,CAAE,0DADO,CAEpBC,UAAU,CAAE,QAFQ,CAGpBC,WAAW,CAAE,SAHO,CAAtB,CAMA,GAAMC,CAAAA,qBAAqB,CAAG,CAC5BC,aAAa,CAAE,mDADa,CAE5BC,UAAU,CAAE,uDAFgB,CAG5BC,aAAa,CAAE,mDAHa,CAI5BC,UAAU,CAAE,gDAJgB,CAA9B,CAOAC,gBAAgB,CAACC,SAAjB,CAA6B,CAC3BT,WAAW,CAAEU,mBAAUC,MADI,CAE3BV,UAAU,CAAES,mBAAUC,MAFK,CAG3BT,WAAW,CAAEQ,mBAAUC,MAHI,CAI3BC,IAAI,CAAEF,mBAAUC,MAJW,CAA7B,CAOA,QAASH,CAAAA,gBAAT,MAKG,2BAJDR,WAIC,CAJDA,WAIC,2BAJaD,aAAa,CAACC,WAI3B,uCAHDC,UAGC,CAHDA,UAGC,0BAHYF,aAAa,CAACE,UAG1B,uCAFDC,WAEC,CAFDA,WAEC,2BAFaH,aAAa,CAACG,WAE3B,kBADDU,IACC,MADDA,IACC,CACD,GAAMC,CAAAA,IAAI,CAAG,4BAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,IAAf,EAAjB,CAAb,CACA,GAAMG,CAAAA,QAAQ,CAAG,6BAAjB,CAEA,GAAMC,CAAAA,WAAW,+EAAG,oKAAYD,QAAQ,CAAC,0CAAD,CAApB,wDAAH,kBAAXC,CAAAA,WAAW,2CAAjB,CACA,GAAMC,CAAAA,iBAAiB,+EAAG,0KAAYF,QAAQ,CAAC,oCAA0BH,IAA1B,CAAD,CAApB,0DAAH,kBAAjBK,CAAAA,iBAAiB,2CAAvB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BH,QAAQ,CAAC,gCAAD,CAAR,CACA,GAAMI,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAAZ,CACAC,eAAQC,GAAR,CAAY,eAAZ,CAA6BJ,GAA7B,EACD,CAJD,CAMA,GAAMK,CAAAA,QAAQ,CAAGzB,WAAW,EAAIG,qBAAqB,CAACS,IAAD,CAArD,CAEA,GAAIc,gBAAJ,CAAc,CACZ,oBAAY,CACVC,KAAK,CAAE,iBADG,CAEV3B,WAAW,CAAEyB,QAFH,CAKVG,SAAS,CAAET,aALD,CAMVU,OAAO,CAAEX,iBANC,CAAZ,EAQAF,QAAQ,CAAC,gCAAD,CAAR,CACA,MAAO,KAAP,CACD,CAED,MACE,8BAAC,gBAAD,EACE,OAAO,CAAEC,WADX,CAEE,SAAS,CAAEE,aAFb,CAGE,WAAW,CAAEM,QAAQ,CAAG,IAH1B,CAIE,WAAW,CAAEvB,WAJf,CAKE,UAAU,CAAED,UALd,gEADF,CASD,C,aAEcO,gB","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { storage } from 'utils';\nimport {\n  enableDesktopNotifications,\n  hideBannerPrompt\n} from 'modules/activity/activity.actions';\nimport { isNative } from 'styles';\nimport { enableMobileNotifications } from 'modules/auth/auth.actions';\nimport MobileAlert from './banner.mobile';\nimport Banner from './banner.desktop';\n\nconst TEXT_DEFAULTS = {\n  messageText: 'Enable notifications and get alerted when people respond',\n  actionText: 'Enable',\n  dismissText: 'Dismiss'\n};\n\nconst MESSAGE_TEXT_DEFAULTS = {\n  upvoteComment: 'Get notified when someone comments on this thread',\n  upvotePost: 'Get notified when you earn rewards for upvoting posts',\n  createComment: 'Get notified when someone replies to your comment',\n  createPost: 'Get notified when someone replies to your post'\n};\n\nPushNotification.propTypes = {\n  messageText: PropTypes.string,\n  actionText: PropTypes.string,\n  dismissText: PropTypes.string,\n  type: PropTypes.string\n};\n\nfunction PushNotification({\n  messageText = TEXT_DEFAULTS.messageText,\n  actionText = TEXT_DEFAULTS.actionText,\n  dismissText = TEXT_DEFAULTS.dismissText,\n  type\n}) {\n  const user = useSelector(state => state.auth.user);\n  const dispatch = useDispatch();\n\n  const handleClick = async () => dispatch(enableDesktopNotifications());\n  const handleClickMobile = async () => dispatch(enableMobileNotifications(user));\n\n  const handleDismiss = () => {\n    dispatch(hideBannerPrompt());\n    const now = new Date().getTime();\n    storage.set('pushDismissed', now);\n  };\n\n  const mainText = messageText || MESSAGE_TEXT_DEFAULTS[type];\n\n  if (isNative) {\n    MobileAlert({\n      title: 'Stay up to date',\n      messageText: mainText,\n      // actionText: 'Enable',\n      // dismissText,\n      onDismiss: handleDismiss,\n      onClick: handleClickMobile\n    });\n    dispatch(hideBannerPrompt());\n    return null;\n  }\n\n  return (\n    <Banner\n      onClick={handleClick}\n      onDismiss={handleDismiss}\n      messageText={mainText + ': '}\n      dismissText={dismissText}\n      actionText={actionText}\n    />\n  );\n}\n\nexport default PushNotification;\n"],"file":"notificationBanner.js"}