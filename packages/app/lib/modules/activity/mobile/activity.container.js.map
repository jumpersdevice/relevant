{"version":3,"sources":["../../../../src/modules/activity/mobile/activity.container.js"],"names":["localStyles","StyleSheet","create","styles","globalStyles","Activity","props","context","state","view","renderRow","bind","changeView","getViewData","load","needsReload","Date","getTime","scrollToTop","tabs","id","title","auth","user","notif","count","actions","markRead","prev","refresh","reload","next","navigation","isFocused","component","listview","scrollToOffset","offset","setState","length","getActivity","rowData","screenSize","PostComponent","loaded","online","data","personal","activityEl","forEach","tab","tabData","active","push","flex","c","error","fullContainer","Component","PropTypes","object","number","bool","array","mapStateToProps","stats","activity","posts","mapDispatchToProps","dispatch","postActions","notifActions","statsActions","userActions","tooltipActions","navigationActions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as postActions from 'modules/post/post.actions';\nimport * as userActions from 'modules/user/user.actions';\nimport * as statsActions from 'modules/stats/stats.actions';\nimport * as tooltipActions from 'modules/tooltip/tooltip.actions';\nimport * as navigationActions from 'modules/navigation/navigation.actions';\nimport { globalStyles } from 'app/styles/global';\nimport DiscoverUser from 'modules/discover/mobile/discoverUser.component';\nimport CustomListView from 'modules/listview/mobile/customList.component';\nimport { withNavigation } from 'react-navigation';\nimport SingleActivity from 'modules/activity/activity.component';\nimport PostComponent from 'modules/post/mobile/post.component';\nimport * as notifActions from '../activity.actions';\n\nconst localStyles = StyleSheet.create({});\nconst styles = { ...localStyles, ...globalStyles };\n\nclass Activity extends Component {\n  static propTypes = {\n    auth: PropTypes.object,\n    notif: PropTypes.object,\n    actions: PropTypes.object,\n    refresh: PropTypes.number,\n    reload: PropTypes.number,\n    error: PropTypes.bool,\n    online: PropTypes.array,\n    loaded: PropTypes.bool,\n    screenSize: PropTypes.number\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      view: 0\n    };\n    this.renderRow = this.renderRow.bind(this);\n    this.changeView = this.changeView.bind(this);\n    this.getViewData = this.getViewData.bind(this);\n    this.load = this.load.bind(this);\n    this.needsReload = new Date().getTime();\n    this.scrollToTop = this.scrollToTop.bind(this);\n\n    this.tabs = [{ id: 0, title: 'Personal' }];\n  }\n\n  componentDidMount() {\n    if (this.props.auth.user && this.props.notif.count) {\n      this.props.actions.markRead();\n    }\n  }\n\n  componentDidUpdate(prev) {\n    const { refresh, reload, actions } = this.props;\n    if (refresh !== prev.refresh) this.scrollToTop();\n    if (reload !== prev.reload) {\n      actions.markRead();\n      this.needsReload = new Date().getTime();\n    }\n  }\n\n  shouldComponentUpdate(next) {\n    return next.navigation.isFocused();\n  }\n\n  scrollToTop() {\n    if (this.tabs[this.state.view].component) {\n      const view = this.tabs[this.state.view].component.listview;\n      if (view) view.scrollToOffset({ offset: 0 });\n    }\n  }\n\n  changeView(view) {\n    if (view === this.state.view) this.scrollToTop();\n    this.setState({ view });\n  }\n\n  load(view, length) {\n    if (!view) view = this.state.view;\n    if (!length) length = 0;\n\n    switch (view) {\n      case 0:\n        this.props.actions.getActivity(length);\n        break;\n      default:\n    }\n  }\n\n  renderRow(rowData) {\n    const { screenSize, actions } = this.props;\n    if (this.state.view === 0) {\n      return (\n        <SingleActivity\n          screenSize={screenSize}\n          PostComponent={PostComponent}\n          singleActivity={rowData}\n          actions={actions}\n        />\n      );\n    }\n    return <DiscoverUser user={rowData} {...this.props} styles={styles} />;\n  }\n\n  getViewData(view) {\n    const { loaded, notif, online } = this.props;\n    switch (view) {\n      case 0:\n        return { data: notif.personal, loaded: notif.loaded };\n      case 1:\n        return { data: online, loaded };\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const activityEl = [];\n    this.tabs.forEach(tab => {\n      const tabData = this.getViewData(tab.id) || { data: [] };\n      const active = this.state.view === tab.id;\n\n      activityEl.push(\n        <CustomListView\n          style={{ flex: 1 }}\n          ref={c => {\n            this.tabs[tab.id].component = c;\n          }}\n          key={tab.id}\n          data={tabData.data}\n          loaded={tabData.loaded}\n          renderRow={this.renderRow}\n          type={'activity'}\n          parent={'activity'}\n          load={this.load}\n          view={tab.id}\n          active={active}\n          needsReload={this.needsReload}\n          error={this.props.error}\n        />\n      );\n    });\n\n    return <View style={[styles.fullContainer]}>{activityEl}</View>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  notif: state.notif,\n  loaded: state.user.loaded,\n  online: state.user.online,\n  stats: state.stats,\n  error: state.error.activity,\n  refresh: state.navigation.activity.refresh,\n  reload: state.navigation.activity.reload,\n  screenSize: state.navigation.screenSize,\n  posts: state.posts\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...postActions,\n      ...notifActions,\n      ...statsActions,\n      ...userActions,\n      ...tooltipActions,\n      ...navigationActions\n    },\n    dispatch\n  )\n});\n\nexport default withNavigation(connect(mapStateToProps, mapDispatchToProps)(Activity));\n"],"file":"activity.container.js"}