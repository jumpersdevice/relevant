{"version":3,"sources":["../../../../src/modules/discover/mobile/discoverUser.component.js"],"names":["styles","DiscoverUser","props","context","setSelected","bind","user","type","actions","_id","goToProfile","showRelevance","relevance","topic","stats","right","renderRight","bioEl","bioContainer","discoverBio","darkGrey","bio","discoverUserContainer","discoverUser","alignItems","justifyContent","Component","PropTypes","string","object","func","bool","number","localStyles","StyleSheet","create","marginLeft","fontFamily","fontSize","lineHeight","paddingTop","paddingBottom","flex","flexDirection","paddingVertical","paddingHorizontal","mainPadding","borderBottomWidth","hairlineWidth","borderBottomColor","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, View, TouchableHighlight, Text } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { globalStyles, mainPadding } from 'app/styles/global';\nimport Stats from 'modules/stats/mobile/stats.component';\nimport AvatarBox from 'modules/user/avatarbox.component';\nimport TextBody from 'modules/text/mobile/textBody.component';\n\nlet styles;\n\nclass DiscoverUser extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    user: PropTypes.object,\n    actions: PropTypes.object,\n    topic: PropTypes.string,\n    renderRight: PropTypes.func,\n    bio: PropTypes.bool,\n    relevance: PropTypes.number,\n    showRelevance: PropTypes.bool\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.setSelected = this.setSelected.bind(this);\n  }\n\n  setSelected() {\n    const { user, type, actions } = this.props;\n    if (type === 'invite') return;\n    if (!user._id) return;\n    actions.goToProfile(user);\n  }\n\n  render() {\n    const { user, showRelevance } = this.props;\n    if (!user) return null;\n    const relevance = this.props.topic\n      ? user[this.props.topic + '_relevance']\n      : user.relevance;\n\n    const stats = (\n      <Stats\n        type={'percent'}\n        topic={this.props.topic}\n        entity={user}\n        renderLeft={this.props.topic ? <Text /> : null}\n      />\n    );\n    const right = this.props.renderRight ? this.props.renderRight() : stats;\n\n    const bioEl = (\n      <View style={styles.bioContainer}>\n        <TextBody\n          actions={this.props.actions}\n          style={[styles.discoverBio, styles.darkGrey]}\n          numberOfLines={3}\n        >\n          {this.props.user.bio}\n        </TextBody>\n      </View>\n    );\n    return (\n      <TouchableHighlight\n        underlayColor={'transparent'}\n        onPress={() => this.setSelected()}\n      >\n        <View style={styles.discoverUserContainer}>\n          <View style={[styles.discoverUser]}>\n            <AvatarBox\n              bio={this.props.bio}\n              big\n              inline={1}\n              type={this.props.type}\n              relevance={this.props.topic ? false : this.props.relevance}\n              user={{ ...user, relevance }}\n              setSelected={this.setSelected}\n              showRelevance={showRelevance}\n            />\n            <View\n              style={{\n                alignItems: 'flex-end',\n                justifyContent: 'center'\n              }}\n            >\n              {right}\n            </View>\n          </View>\n          {this.props.user.bio && this.props.bio ? bioEl : null}\n        </View>\n      </TouchableHighlight>\n    );\n  }\n}\n\nexport default DiscoverUser;\n\nconst localStyles = StyleSheet.create({\n  bioContainer: {\n    marginLeft: 51\n  },\n  discoverBio: {\n    fontFamily: 'Georgia',\n    fontSize: 30 / 2,\n    lineHeight: 40 / 2,\n    paddingTop: 15,\n    paddingBottom: 5\n  },\n  discoverUser: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  discoverUserContainer: {\n    paddingVertical: 20,\n    paddingHorizontal: mainPadding,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#242425'\n  }\n});\n\nstyles = { ...localStyles, ...globalStyles };\n"],"file":"discoverUser.component.js"}