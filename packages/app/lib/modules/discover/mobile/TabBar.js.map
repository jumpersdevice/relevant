{"version":3,"sources":["../../../../src/modules/discover/mobile/TabBar.js"],"names":["styles","TabBar","propTypes","position","PropTypes","object","navigationState","setTab","func","inputRange","routes","map","x","i","nRoutes","length","tabUnderlineStyle","width","fullWidth","height","backgroundColor","colors","blue","bottom","getColor","inactive","active","Animated","round","interpolate","outputRange","inputIndex","extrapolate","left","tabs","route","color","title","tab","fontWeight","transform","translateX","localStyles","StyleSheet","create","flex","alignItems","justifyContent","flexDirection","borderBottomWidth","hairlineWidth","borderColor","borderGrey","globalStyles"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, TouchableOpacity } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Animated from 'react-native-reanimated';\nimport { NumericalValue } from 'modules/styled/uni';\nimport { globalStyles, fullWidth } from 'app/styles/global';\nimport { colors } from 'styles';\n\nlet styles;\n\nTabBar.propTypes = {\n  position: PropTypes.object,\n  navigationState: PropTypes.object,\n  setTab: PropTypes.func\n};\n\nexport default function TabBar({ navigationState, position, setTab }) {\n  const inputRange = navigationState.routes.map((x, i) => i);\n  const nRoutes = navigationState.routes.length;\n\n  const tabUnderlineStyle = {\n    position: 'absolute',\n    width: fullWidth / nRoutes,\n    height: 4,\n    backgroundColor: colors.blue,\n    bottom: 0\n  };\n\n  function getColor(inactive, active, i) {\n    return Animated.round(\n      Animated.interpolate(position, {\n        inputRange,\n        outputRange: inputRange.map(inputIndex => (inputIndex === i ? active : inactive)),\n        extrapolate: 'clamp'\n      })\n    );\n  }\n\n  const left = Animated.interpolate(position, {\n    inputRange: [0, 1],\n    outputRange: [0, fullWidth / nRoutes],\n    extrapolate: 'clamp'\n  });\n\n  return (\n    <View style={styles.tabs}>\n      {navigationState.routes.map((route, i) => {\n        const color = Animated.color(\n          getColor(33, 0, i),\n          getColor(33, 0, i),\n          getColor(33, 255, i)\n        );\n\n        return (\n          <TouchableOpacity\n            key={route.title}\n            activeOpacity={0.6}\n            style={styles.tab}\n            onPress={() => setTab(i)}\n          >\n            <NumericalValue>\n              <Animated.Text style={[{ color, fontWeight: 'bold' }]}>\n                {route.title}\n              </Animated.Text>\n            </NumericalValue>\n          </TouchableOpacity>\n        );\n      })}\n      <Animated.View style={[tabUnderlineStyle, { transform: [{ translateX: left }] }]} />\n    </View>\n  );\n}\n\nconst localStyles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  tabs: {\n    height: 50,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: colors.borderGrey\n  }\n});\n\nstyles = { ...globalStyles, ...localStyles };\n"],"file":"TabBar.js"}