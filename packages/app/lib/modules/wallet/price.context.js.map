{"version":3,"sources":["../../../src/modules/wallet/price.context.js"],"names":["process","env","WEB","require","TOKEN_ADDRESS","DISABLE_PRICE","UPDATE_INTERVAL","PriceContext","React","createContext","exchangeLink","tokenEnabled","usePrice","amount","type","price","PriceProvider","propTypes","children","PropTypes","node","priceReducer","loading","error","data","refresh","state","dispatch","didCancel","fetchData","tokenPrice","fetch","res","json","ethPrice","payload","bid","setTimeout","computePrice","priceString","action","Error","ethReserve","tokenReserve","priceInEth","div","usdPrice","times","parseFloat","toString"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { getTokenReserves } from '@uniswap/sdk';\nimport { abbreviateNumber } from 'utils/numbers';\n\nif (process.env.WEB !== 'true') {\n  require('../../../publicenv');\n}\n\nconst { TOKEN_ADDRESS, DISABLE_PRICE } = process.env;\nconst UPDATE_INTERVAL = 1 * 60 * 1000;\n\nexport const PriceContext = React.createContext(0);\n\nexport function exchangeLink() {\n  return `https://uniswap.exchange/swap?theme=dark&outputCurrency=${TOKEN_ADDRESS}`;\n}\n\nexport function tokenEnabled() {\n  return !!TOKEN_ADDRESS;\n}\n\nexport function usePrice(amount, type) {\n  const { price } = useContext(PriceContext);\n  if (!price) return '';\n  if (type === 'number') return abbreviateNumber(price * amount);\n  return ` ($${abbreviateNumber(price * amount, 2)})`;\n}\n\nPriceProvider.propTypes = {\n  children: PropTypes.node\n};\n\nexport default function PriceProvider({ children }) {\n  const [state, dispatch] = useReducer(priceReducer, {\n    loading: false,\n    error: false,\n    data: null,\n    refresh: 0\n  });\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchData = async () => {\n      dispatch({ type: 'FETCH_PRICE_INIT' });\n      if (!TOKEN_ADDRESS || DISABLE_PRICE) return;\n      try {\n        const tokenPrice = await getTokenReserves(TOKEN_ADDRESS);\n        const res = await fetch('https://api.infura.io/v1/ticker/ethusd');\n        const ethPrice = await res.json();\n\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_PRICE_SUCCESS',\n            payload: { ...tokenPrice, ethPrice: ethPrice.bid }\n          });\n        }\n      } catch (err) {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_PRICE_ERROR', payload: err });\n        }\n      }\n    };\n    fetchData();\n\n    setTimeout(() => {\n      dispatch({ type: 'REFRESH_PRICE' });\n    }, UPDATE_INTERVAL);\n\n    return () => {\n      didCancel = true;\n    };\n  }, [state.refresh]);\n\n  const price = computePrice(state.data);\n  const priceString = `($${abbreviateNumber(price, 2)})`;\n\n  return (\n    <PriceContext.Provider value={{ price, priceString }}>\n      {children}\n    </PriceContext.Provider>\n  );\n}\n\nconst priceReducer = (state, action) => {\n  switch (action.type) {\n    case 'REFRESH_PRICE':\n      return {\n        ...state,\n        refresh: state.refresh + 1\n      };\n    case 'FETCH_PRICE_INIT':\n      return {\n        ...state,\n        loading: true,\n        error: false\n      };\n    case 'FETCH_PRICE_SUCCESS':\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        data: action.payload\n      };\n    case 'FETCH_PRICE_ERROR':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      throw new Error();\n  }\n};\n\nfunction computePrice(data) {\n  if (!data) return null;\n  const { ethReserve, tokenReserve, ethPrice } = data;\n  if (!ethReserve || !tokenReserve) return null;\n  const priceInEth = ethReserve.amount.div(tokenReserve.amount);\n  const usdPrice = priceInEth.times(ethPrice);\n  return parseFloat(usdPrice.toString());\n}\n"],"file":"price.context.js"}