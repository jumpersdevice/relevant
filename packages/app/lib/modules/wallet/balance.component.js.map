{"version":3,"sources":["../../../src/modules/wallet/balance.component.js"],"names":["Balance","user","state","auth","screenSize","navigation","maxUSD","CASHOUT_MAX","metaMaskTokens","tokenBalance","airdropTokens","lockedTokens","stakingPower","balance","Math","round","unclaimed","accountDetail","getAccountDetail","ethAddress","map","detail","value","alwayShow","text","tip","replace","max","alwaysShow","stringValue"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { abbreviateNumber } from 'app/utils/numbers';\nimport { truncateAddress } from 'app/utils/eth';\nimport { usePrice } from 'modules/wallet/price.context';\nimport { View, BodyText, Header, SecondaryText } from 'modules/styled/uni';\nimport CoinStat from 'modules/stats/coinStat.component';\nimport { CASHOUT_MAX } from '@r3l/common';\nimport Tooltip from 'modules/tooltip/tooltip.component';\n// import { updateNotificationSettings } from 'modules/auth/auth.actions';\n// import { TEXT } from 'modules/bannerPrompt/betBanner';\n// import { NotificationToggle } from 'modules/profile/settings/settings.toggle';\nimport WalletLinks from './walletLinks';\n\nexport function Balance() {\n  const user = useSelector(state => state.auth.user);\n  const screenSize = useSelector(state => state.navigation.screenSize);\n  // const dispatch = useDispatch();\n\n  const maxUSD = usePrice(CASHOUT_MAX);\n\n  if (!user) return null;\n  const metaMaskTokens = user.tokenBalance;\n\n  const { airdropTokens, lockedTokens } = user;\n  const stakingPower = user.balance\n    ? Math.round(100 * (1 - lockedTokens / user.balance))\n    : 0;\n\n  const unclaimed = user.balance - user.airdropTokens;\n\n  const accountDetail = getAccountDetail({\n    unclaimed,\n    metaMaskTokens,\n    airdropTokens,\n    lockedTokens,\n    stakingPower\n  });\n\n  // const enableManualBet = () => {\n  //   dispatch(updateNotificationSettings({ bet: { manual: true } }));\n  // };\n\n  return (\n    <View m={['0 4 2 4', '2 2 0 2']}>\n      {!screenSize ? (\n        <View>\n          <BodyText mt={2}>\n            These are coins you earned as rewards. You can transfer up to {CASHOUT_MAX}\n            {maxUSD} coins to your Ethereum wallet (this limit will be increased as the\n            network grows).\n          </BodyText>\n        </View>\n      ) : null}\n      <View br bl bt p=\"2\" mt={2}>\n        <View fdirection=\"row\" justify=\"space-between\" wrap>\n          <BodyText mb={0.5}>Account Balance</BodyText>\n          <SecondaryText>{truncateAddress(user.ethAddress[0])}</SecondaryText>\n        </View>\n        <View fdirection=\"row\" align=\"center\" display=\"flex\" mt={2}>\n          <CoinStat fs={4.5} lh={5} size={5} user={user} align=\"center\" showPrice />\n        </View>\n      </View>\n\n      <View fdirection=\"row\" wrap border={1} p=\"2\">\n        {accountDetail.map(\n          detail =>\n            (!!detail.value || !detail.alwayShow) && (\n              <View key={detail.text}>\n                {detail.tip && (\n                  <Tooltip\n                    name={detail.text.replace(' ', '')}\n                    data={{ text: detail.tip }}\n                  />\n                )}\n                <SecondaryText mr={2}>\n                  {detail.text}: {abbreviateNumber(detail.value)}\n                </SecondaryText>\n              </View>\n            )\n        )}\n      </View>\n      <WalletLinks />\n\n      {/*      <BodyText inline={1}>\n        {TEXT.messageText}\n        <ULink to=\"#\">\n          <Text inline={1} onClick={enableManualBet}>\n            {TEXT.actionText}\n          </Text>\n        </ULink>\n      </BodyText> */}\n      {/*      <View maxWidth={40}>\n        <NotificationToggle\n          notification={user.notificationSettings.bet.manual}\n          parent={'bet'}\n          label={'manual'}\n          togglePosition={'right'}\n          DescriptionComponent={BodyText}\n          text={{\n            description: 'Enable manual betting:'\n          }}\n        />\n      </View> */}\n\n      <Header mt={[9, 4]}>Recent Activity</Header>\n      {!screenSize ? (\n        <BodyText mt={2}>\n          Your rewards for upvoting links and discussion threads that are relevant to the\n          community.\n        </BodyText>\n      ) : null}\n    </View>\n  );\n}\n\nfunction getAccountDetail({\n  unclaimed,\n  metaMaskTokens,\n  airdropTokens,\n  lockedTokens,\n  stakingPower\n}) {\n  return [\n    {\n      text: 'Unclaimed Coins',\n      value: Math.max(unclaimed, 0),\n      tip: 'You can transfer these coins to your Ethereum wallet.'\n    },\n    {\n      text: 'Metamask Coins',\n      value: metaMaskTokens,\n      tip: 'These are the coins located in your connected Ethereum wallet.'\n    },\n    {\n      text: 'Airdrop Coins',\n      value: airdropTokens,\n      tip:\n        'These are coins you got for referrals and verifying social accounts.\\nYou cannot transfer these coins to Metamask.',\n      alwaysShow: true\n    },\n    {\n      text: 'Locked Tokens Coins',\n      value: lockedTokens,\n      tip:\n        'These are coins that you are currently betting on posts.\\nThey get unlocked once the bets expire.'\n    },\n    {\n      text: 'Staking Power',\n      value: stakingPower + '%',\n      tip: 'This is the ratio between unlocked and locked coins.',\n      alwaysShow: true,\n      stringValue: true\n    }\n  ];\n}\n\nexport default memo(Balance);\n"],"file":"balance.component.js"}