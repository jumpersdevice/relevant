{"version":3,"sources":["../../../../src/modules/wallet/web/wallet.container.js"],"names":["PAGE_SIZE","WalletContainer","reloading","page","length","hasMore","props","actions","getEarnings","load","item","screenSize","earning","payout","month","createdAt","showMonth","previousMonth","_id","PostPreview","earnings","list","entities","map","id","renderHeader","p","position","marginBottom","renderRow","Component","PropTypes","object","number","mapStateToProps","state","navigation","mapDispatchToProps","dispatch","authActions","earningsActions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport * as authActions from 'modules/auth/auth.actions';\nimport * as earningsActions from 'modules/wallet/earnings.actions';\nimport Earning from 'modules/wallet/earning.component';\nimport BalanceComponent from 'modules/wallet/balance.component';\nimport { View } from 'modules/styled/uni';\nimport InfScroll from 'modules/listview/web/infScroll.component';\nimport { computeUserPayout } from 'app/utils/rewards';\nimport PostPreview from 'modules/post/postPreview.container';\nimport { getMonth } from 'app/utils/numbers';\n\nconst PAGE_SIZE = 50;\n\nclass WalletContainer extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    earnings: PropTypes.object,\n    screenSize: PropTypes.number\n  };\n\n  state = {\n    reloading: false\n  };\n\n  hasMore = true;\n\n  load = (page, length) => {\n    this.hasMore = page * PAGE_SIZE <= length;\n    if (this.hasMore) {\n      this.props.actions.getEarnings(null, PAGE_SIZE, length);\n    }\n  };\n\n  reload = () => this.load(0, 0);\n\n  renderHeader = () => (\n    <View>\n      <BalanceComponent isWeb />\n    </View>\n  );\n\n  renderRow = ({ item }) => {\n    const { screenSize } = this.props;\n    if (!item) return null;\n    const earning = item;\n\n    const payout = computeUserPayout(earning);\n    // if (!payout) return null;\n\n    const month = getMonth(earning.createdAt);\n    const showMonth = this.previousMonth !== month;\n    this.previousMonth = month;\n\n    return (\n      <Earning\n        key={earning._id}\n        earning={earning}\n        payout={payout}\n        month={showMonth ? month : null}\n        PostPreview={PostPreview}\n        screenSize={screenSize}\n      />\n    );\n  };\n\n  render() {\n    const { earnings } = this.props;\n    const { list } = earnings;\n    const entities = list.map(id => earnings.entities[id]);\n    this.previousMonth = null;\n\n    return (\n      <View mb={8}>\n        {this.renderHeader()}\n        <View>\n          <InfScroll\n            data={list}\n            loadMore={p => this.load(p, list.length)}\n            hasMore={this.hasMore}\n            key=\"recent-activity\"\n            className={'parent'}\n            style={{ position: 'relative', marginBottom: 20 }}\n          >\n            {entities.map(item => this.renderRow({ item }))}\n          </InfScroll>\n        </View>\n      </View>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    earnings: state.earnings,\n    screenSize: state.navigation.screenSize\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...authActions,\n      ...earningsActions\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WalletContainer);\n"],"file":"wallet.container.js"}