{"version":3,"sources":["../../../../src/modules/wallet/web/cashOutModal.js"],"names":["TxProgress","View","colors","modalBackground","AddEthAddress","propTypes","close","PropTypes","func","accounts","networkId","dispatch","user","state","auth","canClaim","balance","airdropTokens","account","unclaimedSig","useUnclaimedSig","warning","CashOutHandler","number","string","oneOfType","object","bool","currentTx","setCurrentTx","send","maxClaim","role","Math","min","max","CASHOUT_MAX","cashedOut","initAmnt","amount","setAmount","usdAmount","maxUSD","cashOut","customAmount","sendCashoutAction","amnt","sig","from","tx","txState","method","callback","earningId","validateAmount","value","target","right","bottom","text","userNonce","nonce","phase","call"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  View,\n  BodyText,\n  Title,\n  SecondaryText,\n  Warning,\n  Text\n} from 'modules/styled/uni';\nimport { Input } from 'modules/styled/web';\nimport Web3Warning from 'modules/wallet/web/web3Warning/web3Warning.component';\nimport {\n  useWeb3,\n  useMetamask,\n  useRelevantActions,\n  useTxState\n} from 'modules/contract/contract.hooks';\nimport { useRelevantState } from 'modules/contract/contract.selectors';\nimport { useCurrentWarning } from 'modules/wallet/web/web3Warning/web3Warning.hooks';\nimport { parseBN } from 'app/utils/eth';\nimport { cashOutCall, connectAddress } from 'modules/wallet/wallet.actions';\nimport { updateCashoutLog } from 'modules/wallet/earnings.actions';\nimport { hideModal } from 'modules/navigation/navigation.actions'; // eslint-disable-line\nimport styled from 'styled-components/primitives';\nimport { colors, sizing } from 'styles';\nimport { ActivityIndicator } from 'react-native-web';\nimport { CASHOUT_MAX } from '@r3l/common';\nimport Tooltip from 'modules/tooltip/tooltip.component';\nimport { usePrice } from 'modules/wallet/price.context';\nimport { CashoutFooter } from './cashoutFooter';\n// import ULink from 'modules/navigation/ULink.component';\n\nconst TxProgress = styled(View)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${colors.modalBackground};\n`;\n\nAddEthAddress.propTypes = {\n  close: PropTypes.func\n};\n\nexport default function AddEthAddress({ close }) {\n  const [accounts, , networkId] = useWeb3();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n\n  const canClaim = user.balance - (user.airdropTokens || 0);\n  const account = accounts && accounts[0];\n\n  useMetamask();\n\n  const unclaimedSig = useUnclaimedSig(user, account);\n\n  const warning = useCurrentWarning({\n    accounts,\n    user,\n    networkId,\n    unclaimedSig,\n    canClaim\n  });\n\n  return (\n    <View>\n      <Title>Claim Your Relevant Coins</Title>\n      <BodyText mt={1} mb={4}>\n        Transfer Coins to your Ethereum Wallet\n      </BodyText>\n      {warning ? (\n        <Web3Warning\n          connectAddress={() => dispatch(connectAddress(account))}\n          warning={warning}\n        />\n      ) : (\n        <CashOutHandler\n          close={close}\n          canClaim={canClaim}\n          account={account}\n          unclaimedSig={unclaimedSig}\n        />\n      )}\n    </View>\n  );\n}\n\nCashOutHandler.propTypes = {\n  canClaim: PropTypes.number,\n  account: PropTypes.string,\n  unclaimedSig: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  close: PropTypes.func\n};\n\nfunction CashOutHandler({ canClaim, account, unclaimedSig, close }) {\n  const [currentTx, setCurrentTx] = useState();\n  const { send } = useRelevantActions();\n  const user = useSelector(state => state.auth.user);\n  const maxClaim =\n    user.role === 'admin'\n      ? Math.min(1000 * 1e6, canClaim)\n      : Math.min(canClaim, Math.max(CASHOUT_MAX - user.cashedOut, 0));\n\n  const initAmnt = unclaimedSig && !currentTx ? unclaimedSig.amount / 1e18 : maxClaim;\n\n  const [amount, setAmount] = useState(initAmnt);\n  const dispatch = useDispatch();\n\n  const usdAmount = usePrice(amount, 'number');\n  const maxUSD = usePrice(maxClaim);\n\n  useEffect(() => {\n    if (unclaimedSig) setAmount(unclaimedSig.amount / 1e18);\n  }, [unclaimedSig]);\n\n  const cashOut = async customAmount => {\n    const sendCashoutAction = (amnt, sig) =>\n      send('claimTokens', { from: account }, amnt, sig);\n    const tx = await dispatch(cashOutCall(customAmount, sendCashoutAction));\n    setCurrentTx(tx);\n  };\n\n  const txState = useTxState({\n    tx: currentTx,\n    method: 'claimTokens',\n    callback: () => {\n      dispatch(updateCashoutLog(user.cashOut.earningId));\n      setCurrentTx(null);\n    }\n  });\n\n  if (txState === 'success') {\n    close();\n  }\n\n  const validateAmount = value => (value < 0 ? 0 : value > maxClaim ? maxClaim : value);\n\n  return (\n    <Fragment>\n      {unclaimedSig && !currentTx && (\n        <Warning mb={2}>\n          Warning: You have not completed a previous transfer attempt, press the\n          'Transfer' button below to complete.\n        </Warning>\n      )}{' '}\n      <View fdirection={'row'}>\n        <View flex={1} mr={1}>\n          <Input\n            mt={'0'}\n            flex={1}\n            type=\"number\"\n            onChange={({ target: { value } }) =>\n              unclaimedSig ? amount : setAmount(validateAmount(value))\n            }\n            value={amount}\n            h={6}\n            fs={amount ? 4 : 2}\n            p={'0 1.5 0 1.5'}\n            fw={'bold'}\n          />\n          <Text\n            h={6}\n            style={{ right: sizing(1), bottom: sizing(0) }}\n            position=\"absolute\"\n            fs={4}\n          >\n            {'$' + usdAmount}\n          </Text>\n        </View>\n        <Button\n          disabled={!amount || amount === ''}\n          h={7}\n          mr={'auto'}\n          onClick={() => cashOut(amount)}\n        >\n          Transfer coins to wallet\n        </Button>\n      </View>\n      <View fdirection=\"row\">\n        <SecondaryText mr={2} mt={1} onPress={() => setAmount(maxClaim)}>\n          <Tooltip\n            data={{\n              text: 'This is the maximum amount of coins you can claim at this time.'\n            }}\n          />\n          Maximum claim: {maxClaim}\n          {maxUSD} Coins\n        </SecondaryText>\n        <SecondaryText mt={1}>\n          <Tooltip data={{ text: 'Total unclaimed coins.' }} />\n          Unclaimed: {canClaim} Coins\n        </SecondaryText>\n      </View>\n      <CashoutFooter />\n      {txState === 'pending' && (\n        <TxProgress align=\"center\" justify={'center'}>\n          <ActivityIndicator />\n          <BodyText mt={2}>Processing Transaction</BodyText>\n        </TxProgress>\n      )}\n    </Fragment>\n  );\n}\n\nfunction useUnclaimedSig(user, account) {\n  const { userNonce } = useRelevantState();\n  const nonce = userNonce && userNonce.phase === 'SUCCESS' && parseBN(userNonce.value);\n  const unclaimedSig =\n    user && user.cashOut && user.cashOut.nonce === nonce && user.cashOut;\n\n  const { call } = useRelevantActions();\n\n  useEffect(() => {\n    account && call && call('nonceOf', account);\n  }, [account, call]);\n\n  return unclaimedSig;\n}\n"],"file":"cashOutModal.js"}