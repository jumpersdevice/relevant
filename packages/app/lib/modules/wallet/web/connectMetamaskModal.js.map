{"version":3,"sources":["../../../../src/modules/wallet/web/connectMetamaskModal.js"],"names":["AddEthAddress","propTypes","close","PropTypes","func","accounts","networkId","dispatch","user","state","auth","canClaim","balance","airdropTokens","account","warning","title","Connected","string","usdAmount"],"mappings":"wWAAA,qDACA,uCACA,6DACA,qCACA,wFACA,uDACA,6DACA,yCACA,+DACA,uCACA,8C,4GAEAA,aAAa,CAACC,SAAd,CAA0B,CACxBC,KAAK,CAAEC,mBAAUC,IADO,CAA1B,CAIe,QAASJ,CAAAA,aAAT,MAAkC,IAATE,CAAAA,KAAS,MAATA,KAAS,aACf,uBADe,iDACxCG,QADwC,aAC5BC,SAD4B,aAE/C,GAAMC,CAAAA,QAAQ,CAAG,6BAAjB,CACA,GAAMC,CAAAA,IAAI,CAAG,4BAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,IAAf,EAAjB,CAAb,CAEA,GAAMG,CAAAA,QAAQ,CAAGH,IAAI,CAACI,OAAL,EAAgBJ,IAAI,CAACK,aAAL,EAAsB,CAAtC,CAAjB,CACA,GAAMC,CAAAA,OAAO,CAAGT,QAAQ,EAAIA,QAAQ,CAAC,CAAD,CAApC,CAEA,4BAEA,GAAMU,CAAAA,OAAO,CAAG,oCAAkB,CAChCV,QAAQ,CAARA,QADgC,CAEhCG,IAAI,CAAJA,IAFgC,CAGhCF,SAAS,CAATA,SAHgC,CAIhCK,QAAQ,CAARA,QAJgC,CAAlB,CAAhB,CAOA,GAAMK,CAAAA,KAAK,CAAGD,OAAO,CACjB,8BADiB,CAEjB,+BAFJ,CAIA,MACE,8BAAC,SAAD,iEACE,6BAAC,UAAD,iEAAQC,KAAR,CADF,CAEGD,OAAO,CACN,6BAAC,oBAAD,EACE,cAAc,CAAE,gCAAMR,CAAAA,QAAQ,CAAC,2BAAeO,OAAf,CAAD,CAAd,EADlB,CAEE,OAAO,CAAEC,OAFX,gEADM,CAMN,6BAAC,SAAD,EAAW,KAAK,CAAEb,KAAlB,CAAyB,OAAO,CAAEY,OAAlC,gEARJ,CADF,CAaD,CAEDG,SAAS,CAAChB,SAAV,CAAsB,CACpBa,OAAO,CAAEX,mBAAUe,MADC,CAAtB,CAIA,QAASD,CAAAA,SAAT,OAAgC,IAAXH,CAAAA,OAAW,OAAXA,OAAW,CAC9B,GAAMF,CAAAA,OAAO,CAAG,0BAAhB,CACA,GAAMO,CAAAA,SAAS,CAAG,oBAASP,OAAT,CAAkB,QAAlB,CAAlB,CAEA,MACE,8BAAC,eAAD,iEACE,6BAAC,aAAD,EAAU,EAAE,CAAE,CAAd,sFAAqCE,OAArC,CADF,CAEE,6BAAC,aAAD,EAAU,EAAE,CAAE,CAAd,+FAC+BF,OAD/B,WAC+CO,SAD/C,KAFF,CAKE,6BAAC,4BAAD,iEALF,CADF,CASD","sourcesContent":["import React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { View, BodyText, Title } from 'modules/styled/uni';\nimport Web3Warning from 'modules/wallet/web/web3Warning/web3Warning.component';\nimport { useWeb3, useMetamask, useBalance } from 'modules/contract/contract.hooks';\nimport { useCurrentWarning } from 'modules/wallet/web/web3Warning/web3Warning.hooks';\nimport { connectAddress } from 'modules/wallet/wallet.actions';\nimport { hideModal } from 'modules/navigation/navigation.actions'; // eslint-disable-line\nimport { usePrice } from 'modules/wallet/price.context';\nimport { CashoutFooter } from './cashoutFooter';\n\nAddEthAddress.propTypes = {\n  close: PropTypes.func\n};\n\nexport default function AddEthAddress({ close }) {\n  const [accounts, , networkId] = useWeb3();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n\n  const canClaim = user.balance - (user.airdropTokens || 0);\n  const account = accounts && accounts[0];\n\n  useMetamask();\n\n  const warning = useCurrentWarning({\n    accounts,\n    user,\n    networkId,\n    canClaim\n  });\n\n  const title = warning\n    ? 'Connect Your Ethereum Wallet'\n    : 'Ethereum Address is Connected';\n\n  return (\n    <View>\n      <Title>{title}</Title>\n      {warning ? (\n        <Web3Warning\n          connectAddress={() => dispatch(connectAddress(account))}\n          warning={warning}\n        />\n      ) : (\n        <Connected close={close} account={account} />\n      )}\n    </View>\n  );\n}\n\nConnected.propTypes = {\n  account: PropTypes.string\n};\n\nfunction Connected({ account }) {\n  const balance = useBalance();\n  const usdAmount = usePrice(balance, 'number');\n\n  return (\n    <Fragment>\n      <BodyText mt={4}>Connected account: {account}</BodyText>\n      <BodyText mt={2}>\n        Balance in Ethereum wallet: {balance} REL (${usdAmount})\n      </BodyText>\n      <CashoutFooter />\n    </Fragment>\n  );\n}\n"],"file":"connectMetamaskModal.js"}