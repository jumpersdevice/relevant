{"version":3,"sources":["../../../../src/modules/wallet/mobile/wallet.container.js"],"names":["PAGE_SIZE","WalletContainer","reloading","Date","getTime","next","navigation","isFocused","view","listview","scrollToOffset","offset","length","loading","props","actions","getEarnings","load","item","i","parseInt","previousMonth","earning","payout","month","createdAt","showMonth","screenSize","PostPreview","earnings","list","prevProps","refresh","scrollToTop","reload","needsReload","contract","initialized","entities","map","id","createListItem","filter","el","c","renderRow","renderHeader","Component","user","PropTypes","object","auth","number","store","mapStateToProps","state","drizzleStatus","accounts","contracts","accountBalances","drizzle","transactions","web3","transactionStack","wallet","mapDispatchToProps","dispatch","authActions","earningsActions"],"mappings":"0qCAAA,qDACA,uCACA,4BACA,6DACA,4EACA,4EACA,qEACA,qEACA,qCACA,uDACA,8FACA,+CACA,qFACA,iDACA,+C,umDAEA,GAAMA,CAAAA,SAAS,CAAG,EAAlB,C,GAEMC,CAAAA,e,sbAgBI,CACNC,SAAS,CAAE,KADL,C,wFAIM,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,E,kGAEU,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,UAAL,CAAgBC,SAAhB,EAAJ,E,wFAmBd,UAAM,CAClB,GAAMC,CAAAA,IAAI,CAAG,MAAKC,QAAlB,CACA,GAAID,IAAI,EAAIA,IAAI,CAACC,QAAjB,CAA2B,CACzBD,IAAI,CAACC,QAAL,CAAcC,cAAd,CAA6B,CAAEC,MAAM,CAAE,CAAV,CAA7B,EACD,CACF,C,8JAEM,iBAAOH,IAAP,CAAaI,MAAb,uHACD,MAAKC,OADJ,yDACoB,IADpB,SAEL,MAAKA,OAAL,CAAe,IAAf,CAFK,sBAGC,OAAKC,KAAL,CAAWC,OAAX,CAAmBC,WAAnB,CAA+B,IAA/B,CAAqChB,SAArC,CAAgDY,MAAhD,CAHD,QAIL,MAAKC,OAAL,CAAe,KAAf,CAJK,gCAKE,IALF,wD,qJAQE,iBAAM,OAAKI,IAAL,CAAU,CAAV,CAAa,CAAb,CAAN,E,yFAEM,iBACb,8BAAC,SAAD,iEACE,6BAAC,gBAAD,0BAAsB,MAAKH,KAA3B,kEADF,CADa,E,2FAME,SAACI,IAAD,CAAOC,CAAP,CAAa,CAC5B,GAAIC,QAAQ,CAACD,CAAD,CAAI,EAAJ,CAAR,GAAoB,CAAxB,CAA2B,MAAKE,aAAL,CAAqB,IAArB,CAC3B,GAAI,CAACH,IAAL,CAAW,MAAO,KAAP,CACX,GAAMI,CAAAA,OAAO,CAAGJ,IAAhB,CAEA,GAAMK,CAAAA,MAAM,CAAG,+BAAkBD,OAAlB,CAAf,CAEA,GAAME,CAAAA,KAAK,CAAG,sBAASF,OAAO,CAACG,SAAjB,CAAd,CACA,GAAMC,CAAAA,SAAS,CAAGF,KAAK,GAAK,MAAKH,aAAjC,CACA,MAAKA,aAAL,CAAqBG,KAArB,CACA,MAAO,CACLF,OAAO,CAAPA,OADK,CAELC,MAAM,CAANA,MAFK,CAGLC,KAAK,CAAEE,SAAS,CAAGF,KAAH,CAAW,IAHtB,CAAP,CAKD,C,sFAEW,SAAAN,IAAI,CAAI,IACVS,CAAAA,UADU,CACK,MAAKb,KADV,CACVa,UADU,IAEVL,CAAAA,OAFU,CAEiBJ,IAFjB,CAEVI,OAFU,CAEDC,MAFC,CAEiBL,IAFjB,CAEDK,MAFC,CAEOC,KAFP,CAEiBN,IAFjB,CAEOM,KAFP,CAGlB,MACE,8BAAC,gBAAD,EACE,UAAU,CAAEG,UADd,CAEE,OAAO,CAAEL,OAFX,CAGE,MAAM,CAAEC,MAHV,CAIE,KAAK,CAAEC,KAJT,CAKE,WAAW,CAAEI,oBALf,iEADF,CASD,C,sHArEmB,CAClB,GAAI,CAAC,KAAKd,KAAL,CAAWe,QAAX,CAAoBC,IAApB,CAAyBlB,MAA9B,CAAsC,CACpC,KAAKK,IAAL,CAAU,CAAV,CAAa,CAAb,EACD,CACF,C,8DAEkBc,S,CAAW,CAC5B,GAAI,KAAKjB,KAAL,CAAWkB,OAAX,GAAuBD,SAAS,CAACC,OAArC,CAA8C,CAC5C,KAAKC,WAAL,GACD,CAED,GAAI,KAAKnB,KAAL,CAAWoB,MAAX,GAAsBH,SAAS,CAACG,MAApC,CAA4C,CAC1C,KAAKC,WAAL,CAAmB,GAAIhC,CAAAA,IAAJ,GAAWC,OAAX,EAAnB,CACD,CACD,GAAI,CAAC,KAAKU,KAAL,CAAWe,QAAX,CAAoBC,IAApB,CAAyBlB,MAA9B,CAAsC,KAAKsB,MAAL,GACvC,C,uCAwDQ,iCACwB,KAAKpB,KAD7B,CACCsB,QADD,aACCA,QADD,CACWP,QADX,aACWA,QADX,CAEP,GAAIO,QAAQ,EAAI,CAACA,QAAQ,CAACC,WAA1B,CAAuC,MAAO,KAAP,CAFhC,GAICP,CAAAA,IAJD,CAIUD,QAJV,CAICC,IAJD,CAKP,GAAMQ,CAAAA,QAAQ,CAAGR,IAAI,CAClBS,GADc,CACV,SAACC,EAAD,CAAKrB,CAAL,QAAW,CAAA,MAAI,CAACsB,cAAL,CAAoBZ,QAAQ,CAACS,QAAT,CAAkBE,EAAlB,CAApB,CAA2CrB,CAA3C,CAAX,EADU,EAEduB,MAFc,CAEP,SAAAC,EAAE,QAAIA,CAAAA,EAAE,GAAK,IAAX,EAFK,CAAjB,CAIA,MACE,8BAAC,SAAD,EAAM,IAAI,CAAE,CAAZ,iEACE,6BAAC,mBAAD,EACE,GAAG,CAAE,aAAAC,CAAC,CAAI,CACR,MAAI,CAACnC,QAAL,CAAgBmC,CAAhB,CACD,CAHH,CAKE,IAAI,CAAE,CALR,CAME,IAAI,CAAEN,QANR,CAOE,MAAM,KAPR,CAQE,MAAM,KARR,CASE,SAAS,CAAE,KAAKO,SATlB,CAUE,YAAY,CAAE,KAAKC,YAVrB,CAWE,IAAI,CAAE,KAAK7B,IAXb,CAYE,IAAI,CAAE,OAZR,CAaE,MAAM,CAAE,QAbV,CAcE,WAAW,CAAE,KAAKkB,WAdpB,CAeE,OAAO,CAAE,KAAKrB,KAAL,CAAWC,OAftB,iEADF,CADF,CAqBD,C,6BA7H2BgC,gB,+BAAxB9C,e,aACe,CACjB+C,IAAI,CAAEC,mBAAUC,MADC,CAEjBC,IAAI,CAAEF,mBAAUC,MAFC,CAGjBd,QAAQ,CAAEa,mBAAUC,MAHH,CAIjBnC,OAAO,CAAEkC,mBAAUC,MAJF,CAKjBrB,QAAQ,CAAEoB,mBAAUC,MALH,CAMjBhB,MAAM,CAAEe,mBAAUG,MAND,CAOjBpB,OAAO,CAAEiB,mBAAUG,MAPF,CAQjBzB,UAAU,CAAEsB,mBAAUG,MARL,C,+BADfnD,e,gBAYkB,CACpBoD,KAAK,CAAEJ,mBAAUC,MADG,C,EAoHxB,QAASI,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLJ,IAAI,CAAEI,KAAK,CAACJ,IADP,CAELtB,QAAQ,CAAE0B,KAAK,CAAC1B,QAFX,CAGLmB,IAAI,CAAEO,KAAK,CAACJ,IAAN,CAAWH,IAHZ,CAILQ,aAAa,CAAED,KAAK,CAACC,aAJhB,CAKLpB,QAAQ,CAAE,iBAAImB,KAAJ,CAAW,wBAAX,CALL,CAMLE,QAAQ,CAAEF,KAAK,CAACE,QANX,CAOLC,SAAS,CAAEH,KAAK,CAACG,SAPZ,CAQLC,eAAe,CAAEJ,KAAK,CAACI,eARlB,CASLC,OAAO,CAAE,CACPC,YAAY,CAAEN,KAAK,CAACM,YADb,CAEPC,IAAI,CAAEP,KAAK,CAACO,IAFL,CAGPC,gBAAgB,CAAER,KAAK,CAACQ,gBAHjB,CATJ,CAcL/B,OAAO,CAAEuB,KAAK,CAACjD,UAAN,CAAiB0D,MAAjB,CAAwBhC,OAd5B,CAeLE,MAAM,CAAEqB,KAAK,CAACjD,UAAN,CAAiB0D,MAAjB,CAAwB9B,MAf3B,CAgBLP,UAAU,CAAE4B,KAAK,CAACjD,UAAN,CAAiBqB,UAhBxB,CAAP,CAkBD,CAED,GAAMsC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCnD,OAAO,CAAE,6DAEFoD,WAFE,EAGFC,eAHE,EAKPF,QALO,CAD6B,CAAL,EAAnC,C,aAUe,oCACb,wBAAQZ,eAAR,CAAyBW,kBAAzB,EAA6ChE,eAA7C,CADa,C","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport * as authActions from 'modules/auth/auth.actions';\nimport * as earningsActions from 'modules/wallet/earnings.actions';\nimport Earning from 'modules/wallet/earning.component';\nimport BalanceComponent from 'modules/wallet/balance.component';\nimport { View } from 'modules/styled/uni';\nimport get from 'lodash/get';\nimport CustomListView from 'modules/listview/mobile/customList.component';\nimport { computeUserPayout } from 'app/utils/rewards';\nimport PostPreview from 'modules/post/postPreview.container';\nimport { withNavigation } from 'react-navigation';\nimport { getMonth } from 'app/utils/numbers';\n\nconst PAGE_SIZE = 30;\n\nclass WalletContainer extends Component {\n  static propTypes = {\n    user: PropTypes.object,\n    auth: PropTypes.object,\n    contract: PropTypes.object,\n    actions: PropTypes.object,\n    earnings: PropTypes.object,\n    reload: PropTypes.number,\n    refresh: PropTypes.number,\n    screenSize: PropTypes.number\n  };\n\n  static contextTypes = {\n    store: PropTypes.object\n  };\n\n  state = {\n    reloading: false\n  };\n\n  needsReload = new Date().getTime();\n\n  shouldComponentUpdate = next => next.navigation.isFocused();\n\n  componentDidMount() {\n    if (!this.props.earnings.list.length) {\n      this.load(0, 0);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.refresh !== prevProps.refresh) {\n      this.scrollToTop();\n    }\n\n    if (this.props.reload !== prevProps.reload) {\n      this.needsReload = new Date().getTime();\n    }\n    if (!this.props.earnings.list.length) this.reload();\n  }\n\n  scrollToTop = () => {\n    const view = this.listview;\n    if (view && view.listview) {\n      view.listview.scrollToOffset({ offset: 0 });\n    }\n  };\n\n  load = async (view, length) => {\n    if (this.loading) return null;\n    this.loading = true;\n    await this.props.actions.getEarnings(null, PAGE_SIZE, length);\n    this.loading = false;\n    return null;\n  };\n\n  reload = () => this.load(0, 0);\n\n  renderHeader = () => (\n    <View>\n      <BalanceComponent {...this.props} />\n    </View>\n  );\n\n  createListItem = (item, i) => {\n    if (parseInt(i, 10) === 0) this.previousMonth = null;\n    if (!item) return null;\n    const earning = item;\n\n    const payout = computeUserPayout(earning);\n\n    const month = getMonth(earning.createdAt);\n    const showMonth = month !== this.previousMonth;\n    this.previousMonth = month;\n    return {\n      earning,\n      payout,\n      month: showMonth ? month : null\n    };\n  };\n\n  renderRow = item => {\n    const { screenSize } = this.props;\n    const { earning, payout, month } = item;\n    return (\n      <Earning\n        screenSize={screenSize}\n        earning={earning}\n        payout={payout}\n        month={month}\n        PostPreview={PostPreview}\n      />\n    );\n  };\n\n  render() {\n    const { contract, earnings } = this.props;\n    if (contract && !contract.initialized) return null;\n\n    const { list } = earnings;\n    const entities = list\n      .map((id, i) => this.createListItem(earnings.entities[id], i))\n      .filter(el => el !== null);\n\n    return (\n      <View flex={1}>\n        <CustomListView\n          ref={c => {\n            this.listview = c;\n          }}\n          // key={tab.id}\n          view={0}\n          data={entities}\n          loaded\n          active\n          renderRow={this.renderRow}\n          renderHeader={this.renderHeader}\n          load={this.load}\n          type={'posts'}\n          parent={'wallet'}\n          needsReload={this.needsReload}\n          actions={this.props.actions}\n        />\n      </View>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    earnings: state.earnings,\n    user: state.auth.user,\n    drizzleStatus: state.drizzleStatus,\n    contract: get(state, 'contracts.RelevantCoin'),\n    accounts: state.accounts,\n    contracts: state.contracts,\n    accountBalances: state.accountBalances,\n    drizzle: {\n      transactions: state.transactions,\n      web3: state.web3,\n      transactionStack: state.transactionStack\n    },\n    refresh: state.navigation.wallet.refresh,\n    reload: state.navigation.wallet.reload,\n    screenSize: state.navigation.screenSize\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...authActions,\n      ...earningsActions\n    },\n    dispatch\n  )\n});\n\nexport default withNavigation(\n  connect(mapStateToProps, mapDispatchToProps)(WalletContainer)\n);\n"],"file":"wallet.container.js"}