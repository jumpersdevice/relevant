{"version":3,"sources":["../../../src/modules/admin/admin.actions.js"],"names":["Alert","alert","API","process","env","API_SERVER","inviteSchema","schema","Entity","idAttribute","listSchema","setInvites","data","community","skip","type","types","SET_INVITES","payload","setWaitlist","SET_WAITLIST","deleteWaitlistUsers","users","DELETE_WAITLIST_USER","updateInvite","invite","UPDATE_INVITE","destroyInvite","DESTROY_INVITE","setInviteCount","count","SET_INVITE_COUNT","getInviteCount","dispatch","api","request","method","endpoint","path","message","getInvites","limit","query","responseJSON","invites","createInvite","body","JSON","stringify","res","destroy","fetch","_id","reqOptions","then","handleErrors","catch","error","console","log","getWaitlist","response","json","wait","inviteFromWaitlist","err","signupForMailingList","user","setDownvotes","SET_DOWNVOTES","getDownvotes","sendEmail","email","saveEmail","loadEmail","deleteWaitlistUser","result","sendPostNotification","post"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { normalize, schema } from 'normalizr';\nimport * as types from 'core/actionTypes';\nimport { alert, api } from 'app/utils';\n\nconst Alert = alert.Alert();\nconst API = process.env.API_SERVER + '/api';\n\nconst inviteSchema = new schema.Entity(\n  'invites',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nconst listSchema = new schema.Entity(\n  'wait',\n  {},\n  {\n    idAttribute: '_id'\n  }\n);\n\nexport function setInvites({ data, community, skip }) {\n  return {\n    type: types.SET_INVITES,\n    payload: {\n      data,\n      community,\n      skip\n    }\n  };\n}\n\nexport function setWaitlist(data) {\n  return {\n    type: types.SET_WAITLIST,\n    payload: data\n  };\n}\n\nexport function deleteWaitlistUsers(users) {\n  return {\n    type: types.DELETE_WAITLIST_USER,\n    payload: users\n  };\n}\n\nexport function updateInvite(invite) {\n  return {\n    type: types.UPDATE_INVITE,\n    payload: invite\n  };\n}\n\nexport function destroyInvite(invite) {\n  return {\n    type: types.DESTROY_INVITE,\n    payload: invite\n  };\n}\n\nexport function setInviteCount(count) {\n  return {\n    type: types.SET_INVITE_COUNT,\n    payload: count\n  };\n}\n\nexport function getInviteCount() {\n  return async dispatch => {\n    try {\n      const count = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invites',\n          path: '/count'\n        })\n      );\n\n      dispatch(setInviteCount(count));\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function getInvites(skip, limit, community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          query: { skip, limit },\n          endpoint: 'invites',\n          path: ''\n        })\n      );\n      const data = normalize(\n        {\n          invites: responseJSON\n        },\n        {\n          invites: [inviteSchema]\n        }\n      );\n      dispatch(setInvites({ data, community, skip }));\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function createInvite(invite) {\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invites',\n          path: '/',\n          body: JSON.stringify(invite)\n        })\n      );\n      dispatch(updateInvite(res.invite[0]));\n      dispatch(setInviteCount(res.count));\n      return res;\n    } catch (error) {\n      Alert.alert(error.message);\n      return false;\n    }\n  };\n}\n\n// export function sendInvitationEmail(id) {\n//   return async dispatch =>\n//     fetch(API + '/invites/email', {\n//       method: 'POST',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         inviteId: id\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       Alert.alert('Invitation email has been sent');\n//     })\n//     .catch(error => {\n//       console.log('invites error', error);\n//     });\n// }\n\n// export function checkInviteCode(code) {\n//   return async dispatch =>\n//     fetch(API + '/invites', {\n//       method: 'PUT',\n//       ...(await api.reqOptions()),\n//       body: JSON.stringify({\n//         code\n//       })\n//     })\n//     .then(api.handleErrors)\n//     .then(response => response.json())\n//     .then(responseJSON => {\n//       dispatch(updateInvite(responseJSON));\n//       if (responseJSON) return responseJSON;\n//       return false;\n//     })\n//     .catch(error => {\n//       Alert.alert(error.message);\n//       console.log('invites error', error);\n//     });\n// }\n\nexport function destroy(invite) {\n  return async dispatch =>\n    fetch(API + '/invites/' + invite._id, {\n      method: 'DELETE',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert('removed item');\n        dispatch(destroyInvite(invite));\n      })\n      .catch(error => {\n        Alert.alert(error.message);\n        console.log('invites error', error);\n      });\n}\n\nexport function getWaitlist() {\n  return async dispatch =>\n    fetch(API + '/list', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        const data = normalize(\n          {\n            wait: responseJSON\n          },\n          {\n            wait: [listSchema]\n          }\n        );\n        dispatch(setWaitlist(data));\n      })\n      .catch(error => {\n        console.log('invites error', error);\n      });\n}\n\nexport function inviteFromWaitlist(invites) {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'PUT',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(invites)\n    })\n      .then(api.handleErrors)\n      // .then(response => response.json())\n      .then(() => {\n        Alert.alert('users have been invited!');\n        dispatch(deleteWaitlistUsers(invites));\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function signupForMailingList(user) {\n  return async () =>\n    fetch(process.env.API_SERVER + '/api/list/', {\n      method: 'POST',\n      ...(await api.reqOptions()),\n      body: JSON.stringify(user)\n    })\n      .then(api.handleErrors)\n      .then(() => {\n        Alert.alert(\"You've been added to the waitlist.\", 'success');\n        return true;\n      })\n      .catch(err => {\n        Alert.alert(err.message);\n        console.log(err);\n        return false;\n      });\n}\n\nexport function setDownvotes(data) {\n  return {\n    type: types.SET_DOWNVOTES,\n    payload: data\n  };\n}\n\nexport function getDownvotes(skip, limit) {\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: {\n          skip,\n          limit\n        },\n        endpoint: 'invest',\n        path: '/downvotes'\n      })\n    )\n      .then(res => dispatch(setDownvotes(res)))\n      .catch(err => Alert.alert(err.message));\n}\n\nexport function sendEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been sent');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function saveEmail(email) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'email',\n          path: '/save',\n          body: JSON.stringify(email)\n        })\n      );\n      Alert.alert('Email has been saved');\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function loadEmail() {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'email',\n          path: '/load'\n        })\n      );\n      return responseJSON;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function deleteWaitlistUser(user) {\n  return async dispatch => {\n    try {\n      const result = await fetch(API + '/list/' + user._id, {\n        method: 'DELETE',\n        ...(await api.reqOptions())\n      });\n      // console.log(result)\n      if (result) {\n        dispatch(deleteWaitlistUsers([user]));\n      }\n    } catch (err) {\n      Alert.alert(err.message);\n    }\n  };\n}\n\nexport function sendPostNotification(post) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'post',\n          path: '/sendPostNotification',\n          body: JSON.stringify(post)\n        })\n      );\n      return Alert.alert('Notification sent!');\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\n// export function updateWaitlist(user) {\n//   return async dispatch =>\n//   fetch(API + '/list/' + user._id, {\n//     method: 'PUT',\n//     ...await api.reqOptions(),\n//     body: JSON.stringify({ user })\n//   })\n//   .then(api.handleErrors)\n//   .then((response) => response.json())\n//   .then((responseJSON) => {\n//     dispatch(updateWaitlist(responseJSON));\n//     if (responseJSON) return responseJSON;\n//     return false;\n//   })\n//   .catch((error) => {\n//     Alert.alert(error.message);\n//     console.log('invites error', error);\n//   });\n// }\n"],"file":"admin.actions.js"}