{"version":3,"sources":["../../../../src/modules/admin/web/treasury.js"],"names":["contractParams","tableData","label","contract","db","GET_TREASURY","gql","Treasury","data","loading","error","getState","call","forEach","method","message","colors","lightGrey","map","row","i","value","distributedTokens","toString"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { View, BodyText, NumericalValue } from 'modules/styled/uni';\nimport { useRelevantToken } from 'modules/contract/contract.hooks';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { colors } from 'styles';\n\nconst contractParams = [\n  'totalReleased',\n  'allocatedRewards',\n  'rewardFund',\n  'airdropFund',\n  'allocatedAirdrops'\n];\n\nconst tableData = [\n  { label: 'Total Released Tokens', contract: 'totalReleased' },\n  { label: 'Curation Reward Fund', contract: 'rewardFund', db: 'rewardFund' },\n  {\n    label: 'Allocated Curation Rewards',\n    contract: 'allocatedRewards',\n    db: 'curationRewards'\n  },\n  { label: 'Earnings', db: 'earned' },\n  { label: 'Airdrop Fund', contract: 'airdropFund' },\n  { label: 'Allocated Airdrops', contract: 'allocatedAirdrops', db: 'airdrop' }\n];\n\nconst GET_TREASURY = gql`\n  query {\n    distributedTokens {\n      balance\n      legacyTokens\n      airdropTokens\n      cashedOut\n      curationRewards\n      airdrop\n      earned\n      rewardFund\n    }\n  }\n`;\n\nexport default function Treasury() {\n  const { data, loading, error } = useQuery(GET_TREASURY);\n  const { getState, call } = useRelevantToken();\n\n  useEffect(() => {\n    call && contractParams.forEach(method => call(method));\n  }, [call]);\n\n  if (loading) return <BodyText>Loading...</BodyText>;\n  if (error) return <BodyText>ERROR: {error.message}</BodyText>;\n  return (\n    <View m={[4, 2]} maxWidth={75} border={colors.lightGrey}>\n      <View p={1} fdirection={'row'}>\n        <NumericalValue br={colors.lightGrey} mr={1} flex={1}>\n          contract\n        </NumericalValue>\n        <NumericalValue br={colors.lightGrey} mr={1} flex={1}>\n          db\n        </NumericalValue>\n        <NumericalValue flex={1} pl={1}>\n          difference\n        </NumericalValue>\n      </View>\n      {tableData.map((row, i) => (\n        <View key={i}>\n          <BodyText p={1} bg={colors.lightGrey}>\n            {row.label}\n          </BodyText>\n          <View p={1} fdirection={'row'}>\n            <BodyText br={colors.lightGrey} mr={1} flex={1}>\n              {getState(row.contract).value && getState(row.contract).value / 1e18}\n            </BodyText>\n            <BodyText br={colors.lightGrey} mr={1} flex={1}>\n              {data.distributedTokens[row.db]}\n            </BodyText>\n            <BodyText flex={1}>\n              {row.contract && row.db\n                ? (\n                    getState(row.contract).value / 1e18 -\n                    data.distributedTokens[row.db]\n                  ).toString()\n                : ''}\n            </BodyText>\n          </View>\n        </View>\n      ))}\n    </View>\n  );\n}\n"],"file":"treasury.js"}