{"version":3,"sources":["../../../../src/modules/admin/web/communityAdminForm.component.js"],"names":["CommunityAdminForm","e","preventDefault","props","initialValues","close","window","confirm","name","actions","deleteCommunity","success","values","history","community","image","preview","fileName","s3","toS3Advanced","url","isUpdate","updateCommunity","createCommunity","push","slug","handleSubmit","imageProps","p","w","h","bg","colors","blue","bradius","customFields","customParams","label","component","ReduxFormField","type","FORM_FIELDS","ReduxFormImageUpload","placeholder","imageComponent","validate","required","black","CreatableMulti","text","AsyncAdminField","SelectField","options","Checkbox","submit","map","field","index","_id","white","red","Component","PropTypes","object","func","bool","mapStateToProps","state","ownProps","auth","Object","keys","length","admins","m","embeddedUser","handle","superAdmins","routing","enableReinitialize","mapDispatchToProps","dispatch","form"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { withRouter } from 'react-router';\nimport { bindActionCreators } from 'redux';\nimport { s3 } from 'app/utils';\nimport { connect } from 'react-redux';\nimport {\n  updateCommunity,\n  createCommunity,\n  deleteCommunity\n} from 'modules/community/community.actions';\nimport SelectField from 'modules/form/selectField.component';\nimport CreatableMulti from 'modules/form/createSelectField.component';\nimport AsyncAdminField from 'modules/form/asyncAdminField.component';\nimport ReduxFormImageUpload from 'modules/styled/form/reduxformimageupload.component';\nimport ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport Checkbox from 'modules/styled/form/checkbox';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, View, Button, Title } from 'modules/styled/web';\nimport { Image, LinkFont, SecondaryText } from 'modules/styled/uni';\nimport { required } from 'modules/form/validators';\nimport { colors } from 'styles';\n\nclass CommunityAdminForm extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    handleSubmit: PropTypes.func,\n    isUpdate: PropTypes.bool,\n    initialValues: PropTypes.object,\n    close: PropTypes.func,\n    history: PropTypes.object\n  };\n\n  deleteCommunity = async e => {\n    e.preventDefault();\n    const { initialValues, close } = this.props;\n    if (\n      // eslint-disable-next-line\n      window.confirm(\n        `Are you sure you want to delete this community: ${initialValues.name}?`\n      )\n    ) {\n      const success = await this.props.actions.deleteCommunity(initialValues);\n      if (success && close) close();\n    }\n  };\n\n  submit = async values => {\n    const { history } = this.props;\n    try {\n      const community = { ...values };\n      if (community.image && community.image.preview && community.image.fileName) {\n        const image = await s3.toS3Advanced(\n          community.image.preview,\n          community.image.fileName\n        );\n        community.image = image.url;\n      }\n      const { isUpdate } = this.props;\n      if (isUpdate) {\n        this.props.actions.updateCommunity(community);\n      } else {\n        await this.props.actions.createCommunity(community);\n        history.push(`/${community.slug}/new`);\n      }\n    } catch (err) {\n      // TODO error handling\n    }\n  };\n\n  render() {\n    const { handleSubmit, initialValues } = this.props;\n    const imageProps = {\n      p: 2,\n      w: 9,\n      h: 9,\n      bg: colors.blue,\n      bradius: '50%'\n    };\n\n    const customFields = initialValues.customParams\n      ? [\n          {\n            name: 'customParams.auth.points',\n            label: 'REQUIRED FOR POSTING: Added Points of Interest',\n            component: ReduxFormField,\n            type: 'number'\n          },\n          {\n            name: 'customParams.auth.tokens',\n            label: 'REQUIRED FOR POSTING: FOAM token balance',\n            component: ReduxFormField,\n            type: 'number'\n          }\n        ]\n      : [];\n\n    const FORM_FIELDS = [\n      {\n        name: 'image',\n        component: ReduxFormImageUpload,\n        placeholder: '/img/blueR.png',\n        imageComponent: <Image mt={1} bg={colors.blue} {...imageProps} />,\n        type: 'file-upload',\n        label: 'Community Image',\n        validate: []\n      },\n      {\n        name: 'name',\n        label: 'Name',\n        component: ReduxFormField,\n        type: 'text',\n        validate: [required]\n      },\n      // {\n      //   name: 'private',\n      //   label: 'Private',\n      //   component: Checkbox,\n      //   type: 'checkbox'\n      // },\n      {\n        name: 'slug',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Slug (cannot be changed in the future)</LinkFont>\n            <SecondaryText>\n              Determines the url of the community, ex: relevant.community/{'<slug>'}\n            </SecondaryText>\n          </View>\n        ),\n        placeholder: 'slug',\n        component: ReduxFormField,\n        type: 'text',\n        validate: [required]\n      },\n      {\n        name: 'description',\n        component: ReduxFormField,\n        type: 'text',\n        label: 'Description',\n        validate: [required]\n      },\n      {\n        name: 'topics',\n        component: CreatableMulti,\n        type: 'text',\n        label: 'Tags',\n        validate: []\n      },\n      {\n        name: 'sectionTitle',\n        text: 'Admins & Moderators'\n      },\n      {\n        name: 'superAdmins',\n        component: AsyncAdminField,\n        type: 'text',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Admins</LinkFont>\n            <SecondaryText>\n              Users with admin priveleges (ability to edit community parameters and add or\n              remove moderators)\n            </SecondaryText>\n          </View>\n        ),\n        validate: []\n      },\n      {\n        name: 'admins',\n        component: AsyncAdminField,\n        type: 'text',\n        label: (\n          <View fdirection={'column'}>\n            <LinkFont c={colors.black}>Moderators</LinkFont>\n            <SecondaryText>\n              Users that will have high reputation by default (but not necessarily admin\n              priveleges)',\n            </SecondaryText>\n          </View>\n        ),\n        validate: []\n      },\n      {\n        name: 'sectionTitle',\n        text: 'Community Settings'\n      },\n      {\n        name: 'defaultPost',\n        label: 'Default Post Type',\n        component: SelectField,\n        // input: { value: [] },\n        // value: 'link',\n        options: ['link', 'text']\n      },\n      ...customFields,\n      {\n        name: 'betEnabled',\n        label: 'Enable Betting',\n        component: Checkbox,\n        type: 'checkbox'\n      },\n      {\n        name: 'hidden',\n        label: 'Unlisted (anyone with link can still see and join the community)',\n        component: Checkbox,\n        type: 'checkbox'\n      }\n    ];\n    return (\n      <View display=\"flex\" fdirection=\"column\" m={'0 4'} mb={16}>\n        <Form\n          onSubmit={handleSubmit(this.submit)}\n          fdirection=\"column\"\n          key=\"community-admin-form\"\n        >\n          {FORM_FIELDS.map((field, index) => {\n            if (field.name === 'sectionTitle')\n              return (\n                <Fragment key={field.text + index}>\n                  <Title mt={4}>{field.text}</Title>\n                </Fragment>\n              );\n            return <Field {...field} key={index} />;\n          })}\n          <View justify=\"flex-end\" mt={3} fdirection=\"row\">\n            {initialValues._id ? (\n              <Button\n                ml={2}\n                c={colors.white}\n                bg={colors.red}\n                onClick={this.deleteCommunity}\n              >\n                Delete\n              </Button>\n            ) : null}\n            <Button ml={2} c={colors.white} type=\"submit\">\n              Submit\n            </Button>\n          </View>\n        </Form>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { close, history } = ownProps;\n  let slug = get(ownProps, 'match.params.slug') || state.auth.community;\n  if (get(ownProps, 'match.path') === '/admin/community/new') slug = null;\n  if (get(ownProps, 'match.path') === '/communities/new') slug = null;\n  const community = get(state.community, `communities.${slug}`, {});\n  const isUpdate = !!Object.keys(community).length;\n  const admins = get(community, 'admins', []).map(m => m.embeddedUser.handle);\n  const superAdmins = get(community, 'superAdmins', []).map(m => m.embeddedUser.handle);\n\n  const initialValues = { ...community, admins, superAdmins };\n\n  return {\n    routing: state.routing,\n    community: state.community,\n    isUpdate,\n    initialValues,\n    enableReinitialize: true,\n    close,\n    history\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      updateCommunity,\n      createCommunity,\n      deleteCommunity\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    reduxForm({\n      form: 'communityAdmin'\n    })(CommunityAdminForm)\n  )\n);\n"],"file":"communityAdminForm.component.js"}