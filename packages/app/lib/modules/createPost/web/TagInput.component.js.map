{"version":3,"sources":["../../../../src/modules/createPost/web/TagInput.component.js"],"names":["process","env","BROWSER","require","TagInput","input","props","selectedTags","deselectTag","selectTag","tagEls","map","tag","i","colors","black","placeholderText","state","e","keyCode","target","value","trim","replace","setState","tags","split","t","filter","length","tagsArr","Component","PropTypes","string","array","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkFont, Tag, View } from 'modules/styled/uni';\nimport { Input } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nif (process.env.BROWSER === true) {\n  require('./selectTags.css');\n}\n\nexport default class TagInput extends Component {\n  static propTypes = {\n    placeholderText: PropTypes.string,\n    selectedTags: PropTypes.array,\n    deselectTag: PropTypes.func,\n    selectTag: PropTypes.func\n  };\n\n  state = {\n    input: ''\n  };\n\n  render() {\n    const { selectedTags, deselectTag, selectTag } = this.props;\n    const tagEls = selectedTags.map((tag, i) => (\n      <Tag\n        key={i}\n        m={0}\n        mr={1}\n        mt={1}\n        disabled={false}\n        role={'checkbox'}\n        aria-checked\n        onClick={() => deselectTag(tag)}\n      >\n        #{tag}\n      </Tag>\n    ));\n\n    return (\n      <div>\n        <View>\n          <LinkFont c={colors.black}>Your Tags </LinkFont>\n          <View display=\"flex\" fdirection=\"row\" wrap=\"wrap\">\n            {tagEls}\n          </View>\n        </View>\n        <View flex={1}>\n          <Input\n            placeholder={this.props.placeholderText}\n            value={this.state.input}\n            onKeyDown={e => {\n              if (e.keyCode === 13) {\n                const tag = e.target.value.trim().replace('#', '');\n                selectTag(tag);\n                return this.setState({ input: '' });\n              }\n              return null;\n            }}\n            onBlur={e => {\n              let tags = e.target.value.split(/,|#/);\n              tags = tags.map(t => t.trim().replace('#', '')).filter(t => t.length);\n              if (tags.length) {\n                selectTag(tags);\n              }\n              return this.setState({ input: '' });\n            }}\n            onChange={e => {\n              const tags = e.target.value;\n              let tagsArr = tags.split(/,|#/);\n              tagsArr = tagsArr.map(t => t.trim()).filter(t => t.length);\n              if (tagsArr.length > 1) {\n                selectTag(tagsArr[0]);\n                return this.setState({ input: tagsArr[1] });\n              }\n              return this.setState({ input: tags });\n            }}\n          />\n        </View>\n      </div>\n    );\n  }\n}\n"],"file":"TagInput.component.js"}