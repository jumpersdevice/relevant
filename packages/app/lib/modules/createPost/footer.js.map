{"version":3,"sources":["../../../src/modules/createPost/footer.js"],"names":["CHAT_ENABLED","Footer","propTypes","close","PropTypes","func","dispatch","submitting","error","setStatus","user","state","auth","postData","createPost","channel","postBody","edit","selectedTags","handleCheckbox","e","setState","target","name","checked","clearPost","submitDisabled","length","trim","isAdmin","role"],"mappings":"+bAAA,qDACA,6DACA,uCACA,gDAIA,kCACA,8B,u4BAEA,GAAMA,CAAAA,YAAY,CAAG,KAArB,C,aAEe,gBAAKC,MAAL,C,0BAEfA,MAAM,CAACC,SAAP,CAAmB,CACjBC,KAAK,CAAEC,mBAAUC,IADA,CAAnB,CAIA,QAASJ,CAAAA,MAAT,MAA2B,IAATE,CAAAA,KAAS,MAATA,KAAS,CACzB,GAAMG,CAAAA,QAAQ,CAAG,6BAAjB,CADyB,cAEW,oBAAS,CAAEC,UAAU,CAAE,KAAd,CAAqBC,KAAK,CAAE,IAA5B,CAAT,CAFX,qDAEhBD,UAFgB,eAEhBA,UAFgB,CAEFE,SAFE,eAGzB,GAAMC,CAAAA,IAAI,CAAG,4BAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,IAAf,EAAjB,CAAb,CACA,GAAMG,CAAAA,QAAQ,CAAG,4BAAY,SAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACG,UAAV,EAAjB,CAAjB,CAJyB,GAKjBC,CAAAA,OALiB,CAKyBF,QALzB,CAKjBE,OALiB,CAKRC,QALQ,CAKyBH,QALzB,CAKRG,QALQ,CAKEC,IALF,CAKyBJ,QALzB,CAKEI,IALF,CAKQC,YALR,CAKyBL,QALzB,CAKQK,YALR,CAOzB,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,CAAC,QAAIC,CAAAA,QAAQ,iCAAID,CAAC,CAACE,MAAF,CAASC,IAAb,CAAoBH,CAAC,CAACE,MAAF,CAASE,OAA7B,EAAZ,EAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAG,uBAAY,iBAAMnB,CAAAA,QAAQ,CAAC,iCAAD,CAAd,EAAZ,CAA+C,CAACA,QAAD,CAA/C,CAAlB,CAEA,GAAMQ,CAAAA,UAAU,CAAG,yBAAc,CAAEX,KAAK,CAALA,KAAF,CAASsB,SAAS,CAATA,SAAT,CAAoBhB,SAAS,CAATA,SAApB,CAAd,CAAnB,CAEA,GAAMY,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAV,KAAK,QACpBL,CAAAA,QAAQ,CACN,kEACKO,QADL,EAEKF,KAFL,EADM,CADY,EAAtB,CAQA,GAAMe,CAAAA,cAAc,CAClBnB,UAAU,EAAI,CAACW,YAAY,CAACS,MAA5B,EAAsC,CAACX,QAAvC,EAAmD,CAACA,QAAQ,CAACY,IAAT,GAAgBD,MADtE,CAEA,GAAME,CAAAA,OAAO,CAAGnB,IAAI,EAAIA,IAAI,CAACoB,IAAL,GAAc,OAAtC,CAEA,MACE,8BAAC,eAAD,iEACE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,CAAa,UAAU,CAAC,KAAxB,CAA8B,OAAO,CAAC,eAAtC,gEACGD,OAAO,EAAI7B,YAAX,EACC,6BAAC,SAAD,EAAM,UAAU,CAAC,KAAjB,CAAuB,KAAK,CAAE,QAA9B,CAAwC,SAAS,CAAE,QAAnD,iEACE,sCACE,OAAO,CAAEe,OADX,CAEE,IAAI,CAAC,UAFP,CAGE,IAAI,CAAE,SAHR,CAIE,QAAQ,CAAEI,cAJZ,iEADF,CAOE,6BAAC,aAAD,EAAU,EAAE,CAAE,GAAd,0FAPF,CAFJ,CAYE,6BAAC,SAAD,EAAM,UAAU,CAAC,KAAjB,CAAuB,IAAI,CAAE,CAA7B,CAAgC,OAAO,CAAC,UAAxC,CAAmD,KAAK,CAAC,QAAzD,gEACE,6BAAC,aAAD,EAAU,EAAE,CAAE,CAAd,CAAiB,OAAO,CAAEM,SAA1B,yEADF,CAKE,6BAAC,WAAD,EACE,OAAO,CAAE,yBAAM,CAACC,cAAD,EAAmBZ,UAAU,CAACD,QAAD,CAAnC,EADX,CAEE,QAAQ,CAAEa,cAFZ,CAGE,EAAE,CAAE,CAHN,iEAKGT,IAAI,CAAG,aAAH,CAAmB,aAL1B,CALF,CAZF,CADF,CADF,CA8BD","sourcesContent":["import React, { Fragment, memo, useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  setCreatePostState,\n  clearCreatePost\n} from 'modules/createPost/createPost.actions';\nimport { View, Button, BodyText, LinkFont } from 'modules/styled/uni';\nimport { useCreatePost } from './hooks';\n\nconst CHAT_ENABLED = false;\n\nexport default memo(Footer);\n\nFooter.propTypes = {\n  close: PropTypes.func\n};\n\nfunction Footer({ close }) {\n  const dispatch = useDispatch();\n  const [{ submitting }, setStatus] = useState({ submitting: false, error: null });\n  const user = useSelector(state => state.auth.user);\n  const postData = useSelector(state => state.createPost);\n  const { channel, postBody, edit, selectedTags } = postData;\n\n  const handleCheckbox = e => setState({ [e.target.name]: e.target.checked });\n\n  const clearPost = useCallback(() => dispatch(clearCreatePost()), [dispatch]);\n\n  const createPost = useCreatePost({ close, clearPost, setStatus });\n\n  const setState = state =>\n    dispatch(\n      setCreatePostState({\n        ...postData,\n        ...state\n      })\n    );\n\n  const submitDisabled =\n    submitting || !selectedTags.length || !postBody || !postBody.trim().length;\n  const isAdmin = user && user.role === 'admin';\n\n  return (\n    <Fragment>\n      <View mt={2} fdirection=\"row\" justify=\"space-between\">\n        {isAdmin && CHAT_ENABLED && (\n          <View fdirection=\"row\" align={'center'} alignself={'center'}>\n            <input\n              checked={channel}\n              type=\"checkbox\"\n              name={'channel'}\n              onChange={handleCheckbox}\n            />\n            <BodyText ml={0.5}>This is a chat channel</BodyText>\n          </View>\n        )}\n        <View fdirection=\"row\" flex={1} justify=\"flex-end\" align=\"center\">\n          <LinkFont mr={3} onClick={clearPost}>\n            Clear\n          </LinkFont>\n\n          <Button\n            onClick={() => !submitDisabled && createPost(postData)}\n            disabled={submitDisabled}\n            ml={2}\n          >\n            {edit ? 'Update Post' : 'Create Post'}\n          </Button>\n        </View>\n      </View>\n    </Fragment>\n  );\n}\n"],"file":"footer.js"}