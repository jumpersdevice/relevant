{"version":3,"sources":["../../../src/modules/createPost/tags.input.js"],"names":["TagsInput","propTypes","selectedTags","PropTypes","array","allTags","setState","func","selectTags","tag","length","Set","filter","t"],"mappings":"4WAAA,qDACA,6DACA,8EACA,kCACA,0E,kGAEAA,SAAS,CAACC,SAAV,CAAsB,CACpBC,YAAY,CAAEC,mBAAUC,KADJ,CAEpBC,OAAO,CAAEF,mBAAUC,KAFC,CAGpBE,QAAQ,CAAEH,mBAAUI,IAHA,CAAtB,CAMe,QAASP,CAAAA,SAAT,MAAwD,IAAnCE,CAAAA,YAAmC,MAAnCA,YAAmC,CAArBI,QAAqB,MAArBA,QAAqB,CAAXD,OAAW,MAAXA,OAAW,CACrE,GAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,GAAG,CAAI,CACxB,GAAI,CAACA,GAAD,EAAQ,CAACA,GAAG,CAACC,MAAjB,CAAyB,OACzB,GAAI,MAAOD,CAAAA,GAAP,GAAe,QAAnB,CAA6BA,GAAG,CAAG,CAACA,GAAD,CAAN,CAC7BP,YAAY,iCAAO,GAAIS,CAAAA,GAAJ,2CAAYT,YAAZ,kCAA6BO,GAA7B,GAAP,CAAZ,CACAH,QAAQ,CAAC,CAAEJ,YAAY,CAAZA,YAAF,CAAD,CAAR,CACD,CALD,CAOA,MACE,8BAAC,eAAD,iEACE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAV,gEACE,6BAAC,iBAAD,EACE,YAAY,CAAEA,YADhB,CAEE,SAAS,CAAEM,UAFb,CAGE,WAAW,CAAE,qBAAAC,GAAG,QACdH,CAAAA,QAAQ,CAAC,CAAEJ,YAAY,CAAEA,YAAY,CAACU,MAAb,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKJ,GAAV,EAArB,CAAhB,CAAD,CADM,EAHlB,CAME,eAAe,CAAE,CAACP,YAAY,CAACQ,MAAd,CAAuB,6BAAvB,CAAuD,EAN1E,gEADF,CASE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAV,gEACE,6BAAC,mBAAD,EACE,IAAI,CAAE,gBADR,CAEE,IAAI,CAAEL,OAFR,CAGE,YAAY,CAAEH,YAHhB,CAIE,SAAS,CAAEM,UAJb,CAKE,WAAW,CAAE,qBAAAC,GAAG,QACdH,CAAAA,QAAQ,CAAC,CAAEJ,YAAY,CAAEA,YAAY,CAACU,MAAb,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,GAAKJ,GAAV,EAArB,CAAhB,CAAD,CADM,EALlB,iEADF,CATF,CAoBE,6BAAC,YAAD,EAAS,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CAAb,gEApBF,CADF,CADF,CA0BD","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport SelectTags from 'modules/createPost/web/selectTags.component';\nimport { View, Divider } from 'modules/styled/uni';\nimport TagInput from 'modules/createPost/web/TagInput.component';\n\nTagsInput.propTypes = {\n  selectedTags: PropTypes.array,\n  allTags: PropTypes.array,\n  setState: PropTypes.func\n};\n\nexport default function TagsInput({ selectedTags, setState, allTags }) {\n  const selectTags = tag => {\n    if (!tag || !tag.length) return;\n    if (typeof tag === 'string') tag = [tag];\n    selectedTags = [...new Set([...selectedTags, ...tag])];\n    setState({ selectedTags });\n  };\n\n  return (\n    <Fragment>\n      <View mt={[3, 2]}>\n        <TagInput\n          selectedTags={selectedTags}\n          selectTag={selectTags}\n          deselectTag={tag =>\n            setState({ selectedTags: selectedTags.filter(t => t !== tag) })\n          }\n          placeholderText={!selectedTags.length ? 'Please add at least one tag' : ''}\n        />\n        <View mt={[4, 2]}>\n          <SelectTags\n            text={'Suggested tags'}\n            tags={allTags}\n            selectedTags={selectedTags}\n            selectTag={selectTags}\n            deselectTag={tag =>\n              setState({ selectedTags: selectedTags.filter(t => t !== tag) })\n            }\n          />\n        </View>\n        <Divider mt={[4, 2]} />\n      </View>\n    </Fragment>\n  );\n}\n"],"file":"tags.input.js"}