{"version":3,"sources":["../../../src/modules/createPost/createPost.actions.js"],"names":["Alert","alert","setCreatePostState","state","type","types","SET_CREATE_POST_STATE","payload","setPostCategory","tag","set","clearCreatePost","submitPost","post","dispatch","api","request","method","endpoint","body","JSON","stringify","message","generatePreviewServer","link","fetch","process","env","API_SERVER","encodeURIComponent","then","response","json","responseJSON","catch"],"mappings":"+mBAAA,qEACA,kCACA,sDAEA,GAAMA,CAAAA,KAAK,CAAGC,aAAMD,KAAN,EAAd,CAEO,QAASE,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACxC,MAAO,CACLC,IAAI,CAAEC,KAAK,CAACC,qBADP,CAELC,OAAO,CAAEJ,KAFJ,CAAP,CAID,CAEM,QAASK,CAAAA,eAAT,CAAyBC,GAAzB,CAA8B,CACnC,GAAMC,CAAAA,GAAG,CAAGD,GAAG,EAAI,IAAnB,CACA,MAAO,CACLL,IAAI,CAAE,mBADD,CAELG,OAAO,CAAEG,GAFJ,CAAP,CAID,CAEM,QAASC,CAAAA,eAAT,EAA2B,CAChC,MAAO,CACLP,IAAI,CAAE,mBADD,CAAP,CAGD,CAEM,QAASQ,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CAC/B,oFAAO,iBAAMC,QAAN,yJAEGA,CAAAA,QAAQ,CACZC,WAAIC,OAAJ,CAAY,CACVC,MAAM,CAAE,MADE,CAEVC,QAAQ,CAAE,MAFA,CAGVC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAHI,CAAZ,CADY,CAFX,QASHC,QAAQ,CACN,yCAA2B,CACzBV,IAAI,CAAE,YADmB,CAA3B,CADM,CAAR,CATG,gCAcI,IAdJ,0DAgBHJ,KAAK,CAACC,KAAN,gCAAoC,YAAIqB,OAAxC,GAhBG,gCAiBI,KAjBJ,sEAAP,+DAoBD,CAGM,QAASC,CAAAA,qBAAT,CAA+BC,IAA/B,CAAqC,CAC1C,MAAO,kBACLC,CAAAA,KAAK,CACHC,OAAO,CAACC,GAAR,CAAYC,UAAZ,CACE,iCADF,CAEEC,kBAAkB,CAACL,IAAD,CAHjB,CAIH,CAAEP,MAAM,CAAE,KAAV,CAJG,CAAL,CAMGa,IANH,CAMQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EANhB,EAOGF,IAPH,CAOQ,SAAAG,YAAY,QAAIA,CAAAA,YAAJ,EAPpB,EAQGC,KARH,CAQSlC,KART,CADK,EAAP,CAUD","sourcesContent":["import * as types from 'core/actionTypes';\nimport { api, alert } from 'app/utils';\nimport { showPushNotificationPrompt } from 'modules/activity/activity.actions';\n\nconst Alert = alert.Alert();\n\nexport function setCreatePostState(state) {\n  return {\n    type: types.SET_CREATE_POST_STATE,\n    payload: state\n  };\n}\n\nexport function setPostCategory(tag) {\n  const set = tag || null;\n  return {\n    type: 'SET_POST_CATEGORY',\n    payload: set\n  };\n}\n\nexport function clearCreatePost() {\n  return {\n    type: 'CLEAR_CREATE_POST'\n  };\n}\n\nexport function submitPost(post) {\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'post',\n          body: JSON.stringify(post)\n        })\n      );\n      dispatch(\n        showPushNotificationPrompt({\n          type: 'createPost'\n        })\n      );\n      return true;\n    } catch (err) {\n      Alert.alert(`Error creating post: ${err.message}`);\n      return false;\n    }\n  };\n}\n\n// TODO update to use api util\nexport function generatePreviewServer(link) {\n  return () =>\n    fetch(\n      process.env.API_SERVER +\n        '/api/post/preview/generate?url=' +\n        encodeURIComponent(link),\n      { method: 'GET' }\n    )\n      .then(response => response.json())\n      .then(responseJSON => responseJSON)\n      .catch(Alert);\n}\n"],"file":"createPost.actions.js"}