{"version":3,"sources":["../../../../src/modules/createPost/mobile/topics.component.js"],"names":["styles","topics","props","renderItem","bind","InteractionManager","runAfterInteractions","length","actions","getParentTags","selectedTopic","goToElement","prev","_id","item","index","topic","i","active","innerView","type","scrollView","scrollToIndex","viewPosition","scroll","setTimeout","Keyboard","removeListener","Platform","OS","addListener","createPost","action","categoryItem","backgroundColor","alignItems","color","emoji","categoryName","flex","c","toString","tagsView","Component","PropTypes","array","object","string","func","localStyles","StyleSheet","create","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  TouchableOpacity,\n  InteractionManager,\n  FlatList,\n  StyleSheet,\n  Keyboard,\n  Platform\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from 'app/styles/global';\nimport TagSelection from './tagSelection.component';\n\nlet styles;\n\nexport default class topics extends Component {\n  static propTypes = {\n    topics: PropTypes.array,\n    actions: PropTypes.object,\n    selectedTopic: PropTypes.object,\n    type: PropTypes.string,\n    createPost: PropTypes.object,\n    action: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  componentDidMount() {\n    InteractionManager.runAfterInteractions(() => {\n      if (!this.props.topics.length) this.props.actions.getParentTags();\n      if (this.props.selectedTopic) {\n        this.goToElement = true;\n      }\n    });\n  }\n\n  componentDidUpdate(prev) {\n    const { selectedTopic } = this.props;\n    if (\n      selectedTopic &&\n      (!prev.selectedTopic || prev.selectedTopic._id !== selectedTopic._id)\n    ) {\n      this.goToElement = true;\n    } else this.goToElement = false;\n  }\n\n  renderItem({ item, index }) {\n    const topic = item;\n    const i = index;\n    let active = false;\n    let innerView;\n\n    if (this.props.selectedTopic && topic._id === this.props.selectedTopic._id) {\n      active = true;\n    }\n\n    if (this.props.type === 'create' && active) {\n      innerView = (\n        <TagSelection\n          key={topic._id}\n          topic={topic}\n          scrollToElement={() => {\n            this.scrollView.scrollToIndex({ viewPosition: 0.2, index });\n            const scroll = () => {\n              setTimeout(\n                () => this.scrollView.scrollToIndex({ viewPosition: 0.2, index }),\n                1\n              );\n              Keyboard.removeListener('keyboardDidShow', scroll);\n            };\n            if (Platform.OS === 'android') {\n              Keyboard.addListener('keyboardDidShow', scroll);\n            }\n          }}\n          actions={this.props.actions}\n          createPost={this.props.createPost}\n        />\n      );\n    }\n\n    if (active && this.goToElement) {\n      setTimeout(() => {\n        this.scrollView.scrollToIndex({ viewPosition: 0.1, index });\n      }, 10);\n    }\n\n    return (\n      <View key={i}>\n        <TouchableOpacity\n          onPress={() => this.props.action(topic)}\n          style={[styles.categoryItem, { backgroundColor: active ? '#4d4eff' : 'white' }]}\n        >\n          <View\n            style={{\n              alignItems: 'center'\n            }}\n          >\n            <Text style={[active ? { color: 'white' } : null]}>\n              {Platform.OS === 'android' ? '#' : topic.emoji + ' '}\n              {topic.categoryName}\n            </Text>\n          </View>\n        </TouchableOpacity>\n        {innerView}\n      </View>\n    );\n  }\n\n  render() {\n    return (\n      <FlatList\n        style={{ flex: 1 }}\n        container\n        ref={c => (this.scrollView = c)}\n        keyboardDismissMode={'interactive'}\n        keyboardShouldPersistTaps={'always'}\n        data={this.props.topics}\n        renderItem={this.renderItem}\n        keyExtractor={(item, index) => index.toString()}\n        tagsView={this.tagsView}\n        extraData={this.props.selectedTopic}\n        removeClippedSubviews={false}\n        initialNumToRender={20}\n      />\n    );\n  }\n}\n\nconst localStyles = StyleSheet.create({});\n\nstyles = { ...localStyles, ...globalStyles };\n"],"file":"topics.component.js"}