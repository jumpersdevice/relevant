{"version":3,"sources":["../../../src/modules/contract/contract.provider.js"],"names":["contract","useContract","contractData","ContractContext","initialized","init","ContractProvider","propTypes","children","PropTypes","node","setInitialized","shouldInit","instance","setInstance","ReactReduxContext","store","initialize","load","_instance","web3Sagas","web3Reducers","saga","reducer","injectReducer","RelevantToken","actions","tokenAddress","selectors","types"],"mappings":"orBAAA,sDACA,6DACA,sEACA,wDACA,uCACA,4C,uGAEA,GAAMA,CAAAA,QAAQ,CAAG,gTAAS,6IAAT,miBAAjB,CAEO,QAASC,CAAAA,WAAT,EAAuB,CAC5B,GAAMC,CAAAA,YAAY,CAAG,sBAAWC,yBAAX,CAArB,CACA,GAAI,CAACD,YAAY,CAACE,WAAlB,CAA+BF,YAAY,CAACG,IAAb,CAAkB,IAAlB,EAC/B,MAAOH,CAAAA,YAAP,CACD,CAEDI,gBAAgB,CAACC,SAAjB,CAA6B,CAC3BC,QAAQ,CAAEC,mBAAUC,IADO,CAA7B,CAIO,QAASJ,CAAAA,gBAAT,MAAwC,IAAZE,CAAAA,QAAY,MAAZA,QAAY,eACP,oBAAS,KAAT,CADO,qDACtCJ,WADsC,eACzBO,cADyB,8BAElB,oBAAS,KAAT,CAFkB,sDAEtCC,UAFsC,eAE1BP,IAF0B,8BAGb,oBAAS,EAAT,CAHa,sDAGtCQ,QAHsC,eAG5BC,WAH4B,+BAI3B,sBAAWC,6BAAX,CAJ2B,CAIrCC,KAJqC,aAIrCA,KAJqC,CAM7C,qBAAU,UAAM,SACCC,CAAAA,UADD,yIACd,iOACiEjB,CAAAA,QAAQ,CAACkB,IAAT,EADjE,2CACoBC,SADpB,sBACUN,QADV,CAC+BO,SAD/B,sBAC+BA,SAD/B,CAC0CC,YAD1C,sBAC0CA,YAD1C,CAEUC,IAFV,CAE4BH,SAF5B,CAEUG,IAFV,CAEgBC,OAFhB,CAE4BJ,SAF5B,CAEgBI,OAFhB,CAGE,mCAAW,eAAX,CAA4BD,IAA5B,EACA,mCAAW,WAAX,CAAwBF,SAAxB,EACAJ,KAAK,CAACQ,aAAN,CAAoB,eAApB,CAAqCD,OAAO,CAACE,aAA7C,EACAT,KAAK,CAACQ,aAAN,CAAoB,MAApB,CAA4BH,YAA5B,EACAP,WAAW,CAACK,SAAD,CAAX,CACAR,cAAc,CAAC,IAAD,CAAd,CARF,uDADc,6CAWdC,UAAU,EAAIK,UAAU,EAAxB,CACD,CAZD,CAYG,CAACL,UAAD,CAAaI,KAAb,CAZH,EAN6C,GAoBrCU,CAAAA,OApBqC,CAoBOb,QApBP,CAoBrCa,OApBqC,CAoB5BC,YApB4B,CAoBOd,QApBP,CAoB5Bc,YApB4B,CAoBdC,SApBc,CAoBOf,QApBP,CAoBde,SApBc,CAoBHC,KApBG,CAoBOhB,QApBP,CAoBHgB,KApBG,CAsB7C,MACE,8BAAC,yBAAD,CAAiB,QAAjB,EACE,KAAK,CAAE,CACLzB,WAAW,CAAXA,WADK,CAELsB,OAAO,CAAPA,OAFK,CAGLG,KAAK,CAALA,KAHK,CAILF,YAAY,CAAZA,YAJK,CAKLC,SAAS,CAATA,SALK,CAMLvB,IAAI,CAAJA,IANK,CADT,gEAUGG,QAVH,CADF,CAcD","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport loadable from '@loadable/component';\nimport { injectSaga } from 'redux-sagas-injector';\nimport { ReactReduxContext } from 'react-redux';\nimport { ContractContext } from './contract.context';\n\nconst contract = loadable(() => import('./setupStatesauce'));\n\nexport function useContract() {\n  const contractData = useContext(ContractContext);\n  if (!contractData.initialized) contractData.init(true);\n  return contractData;\n}\n\nContractProvider.propTypes = {\n  children: PropTypes.node\n};\n\nexport function ContractProvider({ children }) {\n  const [initialized, setInitialized] = useState(false);\n  const [shouldInit, init] = useState(false);\n  const [instance, setInstance] = useState({});\n  const { store } = useContext(ReactReduxContext);\n\n  useEffect(() => {\n    async function initialize() {\n      const { instance: _instance, web3Sagas, web3Reducers } = await contract.load();\n      const { saga, reducer } = _instance;\n      injectSaga('RelevantToken', saga);\n      injectSaga('web3Sagas', web3Sagas);\n      store.injectReducer('RelevantToken', reducer.RelevantToken);\n      store.injectReducer('web3', web3Reducers);\n      setInstance(_instance);\n      setInitialized(true);\n    }\n    shouldInit && initialize();\n  }, [shouldInit, store]);\n\n  const { actions, tokenAddress, selectors, types } = instance;\n\n  return (\n    <ContractContext.Provider\n      value={{\n        initialized,\n        actions,\n        types,\n        tokenAddress,\n        selectors,\n        init\n      }}\n    >\n      {children}\n    </ContractContext.Provider>\n  );\n}\n"],"file":"contract.provider.js"}