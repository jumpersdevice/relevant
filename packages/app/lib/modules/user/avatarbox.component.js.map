{"version":3,"sources":["../../../src/modules/user/avatarbox.component.js"],"names":["Name","BodyText","AvatarBox","propTypes","noLink","PropTypes","bool","avatarText","func","twitter","type","string","user","object","size","number","showRelevance","repost","postTime","oneOfType","setSelected","navigationCallback","vertical","props","dispatch","handle","timestamp","handleEl","repostIcon","require","twitterIcon","showRel","relevance","pagerank","colors","black","UserName","node","elipses","isNative","maxWidth","whiteSpace","overflow","name"],"mappings":"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","sourcesContent":["import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { colors, isNative } from 'app/styles';\nimport RStat from 'modules/stats/rStat.component';\nimport ULink from 'modules/navigation/ULink.component';\nimport Avatar from 'modules/user/UAvatar.component';\nimport { getTimestamp } from 'app/utils/numbers';\nimport styled from 'styled-components/primitives';\nimport { Text, View, SecondaryText, Image, BodyText, Box } from 'modules/styled/uni';\nimport sizing from 'styles/sizing';\nimport { goToProfile } from 'modules/navigation/navigation.actions';\n\nexport const Name = styled(BodyText)``;\n\nexport default memo(AvatarBox);\n\nAvatarBox.propTypes = {\n  noLink: PropTypes.bool,\n  avatarText: PropTypes.func,\n  twitter: PropTypes.bool,\n  type: PropTypes.string,\n  user: PropTypes.object,\n  size: PropTypes.number,\n  showRelevance: PropTypes.bool,\n  repost: PropTypes.bool,\n  postTime: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  setSelected: PropTypes.func,\n  navigationCallback: PropTypes.func,\n  vertical: PropTypes.bool\n};\n\nfunction AvatarBox(props) {\n  const {\n    user,\n    showRelevance,\n    type,\n    setSelected,\n    size,\n    postTime,\n    repost,\n    twitter,\n    avatarText,\n    noLink,\n    navigationCallback,\n    vertical\n  } = props;\n  const dispatch = useDispatch();\n\n  if (!user) return null;\n\n  let { handle } = user;\n  if (type !== 'invite' && handle) handle = `@${handle}`;\n\n  let timestamp;\n  if (postTime) {\n    timestamp = ' â€¢ ' + getTimestamp(postTime);\n  }\n\n  const handleEl = handle && !vertical && (\n    <SecondaryText mt={0.25}>\n      {handle} {timestamp}\n    </SecondaryText>\n  );\n\n  const repostIcon = repost && (\n    <Image\n      resizeMode={'contain'}\n      source={require('public/img/reposted.png')}\n      w={2}\n      h={2}\n      mr={0.2}\n      mb={2}\n    />\n  );\n\n  const twitterIcon = twitter && (\n    <Image\n      inline\n      resizeMode={'contain'}\n      w={2.5}\n      h={1.5}\n      ml={0.5}\n      mb={-0.1}\n      source={require('public/img/icons/twitter_blue.png')}\n    />\n  );\n\n  const showRel =\n    user.relevance && !!user.relevance.pagerank && showRelevance && !avatarText;\n\n  return (\n    <Box>\n      <ULink\n        noLink={noLink}\n        to={`/user/profile/${user.handle}`}\n        onPress={() => {\n          setSelected ? setSelected(user) : dispatch(goToProfile(user));\n          navigationCallback && navigationCallback();\n        }}\n        onClick={() => navigationCallback && navigationCallback()}\n      >\n        <View fdirection={vertical ? 'column' : 'row'}>\n          <Avatar size={size} user={user} noLink />\n          {repostIcon}\n          <View\n            ml={vertical ? 0 : avatarText ? 1.5 : 1}\n            align={vertical ? 'center' : 'flex-start'}\n          >\n            <Text inline={1}>\n              <UserName user={user} showRel={showRel} twitterIcon={twitterIcon} />\n              {avatarText ? (\n                <Text c={colors.black} inline={1}>\n                  {avatarText()}\n                </Text>\n              ) : null}\n            </Text>\n            {handleEl}\n          </View>\n        </View>\n      </ULink>\n    </Box>\n  );\n}\n\nUserName.propTypes = {\n  user: PropTypes.object,\n  twitterIcon: PropTypes.node,\n  showRel: PropTypes.bool\n};\n\nexport function UserName({ user, showRel, twitterIcon }) {\n  const elipses = isNative\n    ? {}\n    : {\n        // overflowText: 'elipses',\n        // display: 'inline-block',\n        // verticalAlign: 'bottom',\n        maxWidth: sizing(12),\n        whiteSpace: 'nowrap'\n      };\n  return (\n    <Fragment>\n      <Name\n        numberOfLines={1}\n        style={{\n          overflow: 'hidden',\n          ...elipses\n        }}\n        inline={1}\n        c={colors.black}\n      >\n        {user.name}\n        {twitterIcon}\n      </Name>\n      {showRel && (\n        <Text inline={1}>\n          {' '}\n          <RStat inline={1} align={'baseline'} lh={1.75} size={1.75} user={user} />\n        </Text>\n      )}\n    </Fragment>\n  );\n}\n"],"file":"avatarbox.component.js"}