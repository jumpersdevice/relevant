{"version":3,"sources":["../../../src/modules/user/user.actions.js"],"names":["Alert","alert","updateLocalUser","user","type","types","UPDATE_USER","payload","getUsersLoading","getUserLoading","setUserList","users","index","topic","clearUserList","clearSelectedUser","setSelectedUserData","data","SET_SELECTED_USER_DATA","setUserSearch","searchUser","userName","limit","dispatch","api","request","method","endpoint","path","query","search","res","errorActions","setError","message","getSelectedUser","updateBlock","block","unblock","url","process","env","API_SERVER","fetch","body","JSON","stringify","reqOptions","then","handleErrors","response","json","responseJSON","action","catch","getBlocked"],"mappings":"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","sourcesContent":["import { api, alert } from 'app/utils';\nimport * as errorActions from 'modules/ui/error.actions';\nimport * as types from 'core/actionTypes';\n\nconst Alert = alert.Alert();\n\nexport function updateLocalUser(user) {\n  return {\n    type: types.UPDATE_USER,\n    payload: user\n  };\n}\n\nexport function getUsersLoading() {\n  return {\n    type: 'GET_USER_LIST'\n  };\n}\n\nexport function getUserLoading() {\n  return {\n    type: 'GET_USER_LOADING'\n  };\n}\n\nexport function setUserList(users, index, topic) {\n  return {\n    type: 'SET_USER_LIST',\n    payload: {\n      users,\n      index,\n      topic\n    }\n  };\n}\n\nexport function clearUserList() {\n  return {\n    type: 'CLEAR_USER_LIST'\n  };\n}\n\nexport function clearSelectedUser() {\n  return {\n    type: 'CLEAR_SELECTED_USER'\n  };\n}\n\nexport function setSelectedUserData(data) {\n  return {\n    type: types.SET_SELECTED_USER_DATA,\n    payload: data\n  };\n}\n\nexport function setUserSearch(data) {\n  return {\n    type: 'SET_USER_SEARCH',\n    payload: data\n  };\n}\n\nexport function searchUser(userName) {\n  const limit = 50;\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'user',\n          path: '/search',\n          query: { limit, search: userName }\n        })\n      );\n      dispatch(setUserSearch(res));\n      return res;\n    } catch (err) {\n      dispatch(errorActions.setError('activity', true, err.message));\n      return false;\n    }\n  };\n}\n\nexport function getSelectedUser(userName) {\n  return async dispatch => {\n    try {\n      dispatch(getUserLoading());\n      const user = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'user',\n          path: '/user/' + userName\n        })\n      );\n      dispatch(setSelectedUserData(user));\n      dispatch(errorActions.setError('profile', false));\n      return true;\n    } catch (err) {\n      dispatch(errorActions.setError('profile', true, err.message));\n      return false;\n    }\n  };\n}\n\nexport function updateBlock(block, unblock) {\n  let url = process.env.API_SERVER + '/api/user/block';\n  if (unblock) {\n    url = process.env.API_SERVER + '/api/user/unblock';\n  }\n  return async dispatch =>\n    fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify({\n        block\n      }),\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        let action = 'blocked';\n        if (unblock) action = 'unblocked';\n        Alert.alert('user ' + block + ' has been ' + action);\n        // console.log('block result ', responseJSON);\n        dispatch(updateLocalUser(responseJSON));\n      })\n      .catch(null);\n}\n\nexport function getBlocked() {\n  return async dispatch =>\n    fetch(process.env.API_SERVER + '/api/user/blocked', {\n      method: 'GET',\n      ...(await api.reqOptions())\n    })\n      .then(api.handleErrors)\n      .then(response => response.json())\n      .then(responseJSON => {\n        dispatch(updateLocalUser(responseJSON));\n      })\n      .catch(null);\n}\n"],"file":"user.actions.js"}