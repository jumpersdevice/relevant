{"version":3,"sources":["../../../../src/modules/comment/web/comment.container.js"],"names":["Comments","activeComment","commentId","state","setState","x","y","paddingY","window","outerHeight","scrollTo","document","body","scrollHeight","props","comments","posts","post","auth","actions","myPostInv","user","match","screenSize","children","childComments","_id","focusedComment","layout","POST_BUTTONS_NESTING_UNITS","length","map","id","comment","setActiveComment","Component","PropTypes","object","number","investments","navigation","dispatch","commentActions","createPostActions","investActions","animationActions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { layout } from 'app/styles';\nimport * as commentActions from 'modules/comment/comment.actions';\nimport * as investActions from 'modules/post/invest.actions';\nimport * as createPostActions from 'modules/createPost/createPost.actions';\nimport * as animationActions from 'modules/animation/animation.actions';\nimport { Divider, View } from 'modules/styled/uni';\nimport CommentForm from './commentForm.component';\nimport Comment from './comment.component';\n\nclass Comments extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    match: PropTypes.object,\n    comments: PropTypes.object,\n    posts: PropTypes.object,\n    auth: PropTypes.object,\n    post: PropTypes.object,\n    myPostInv: PropTypes.object,\n    user: PropTypes.object,\n    screenSize: PropTypes.number\n  };\n\n  state = {\n    activeComment: null\n  };\n\n  setActiveComment = commentId => {\n    const activeComment = this.state.activeComment === commentId ? null : commentId;\n    this.setState({ activeComment });\n  };\n\n  scrollTo = (x, y) => {\n    const paddingY = window.outerHeight / 4;\n    window.scrollTo(x, y - paddingY);\n  };\n\n  scrollToBottom() {\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  render() {\n    const {\n      comments,\n      posts,\n      post,\n      auth,\n      actions,\n      myPostInv,\n      user,\n      match,\n      screenSize\n    } = this.props;\n    const children = comments.childComments[post._id] || [];\n    const focusedComment = get(match, 'params.commentId', null);\n    return (\n      <div>\n        <CommentForm\n          nestingLevel={0}\n          additionalNesting={screenSize ? 0 : layout.POST_BUTTONS_NESTING_UNITS}\n          buttonText={'Comment'}\n          parentPost={post}\n          p={['0 4 4 4', '4 2 2 2']}\n        />\n        {children.length !== 0 ? (\n          <div>\n            {children.map(id => {\n              const comment = posts.posts[id];\n              if (!comment) return null;\n              return (\n                <View key={id}>\n                  <Divider m={['0 4', 0]} screenSize={screenSize} />\n                  <Comment\n                    auth={auth}\n                    comment={comment}\n                    actions={actions}\n                    myPostInv={myPostInv}\n                    user={user}\n                    activeComment={this.state.activeComment}\n                    setActiveComment={this.setActiveComment}\n                    parentPost={post._id}\n                    childComments={comments.childComments}\n                    posts={posts}\n                    parentPost={post}\n                    nestingLevel={0}\n                    actions={actions}\n                    focusedComment={focusedComment}\n                    scrollTo={this.scrollTo}\n                    screenSize={screenSize}\n                  />\n                </View>\n              );\n            })}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(\n  connect(\n    state => ({\n      auth: state.auth,\n      comments: state.comments,\n      myPostInv: state.investments.myPostInv,\n      user: state.user,\n      screenSize: state.navigation.screenSize\n    }),\n    dispatch => ({\n      actions: bindActionCreators(\n        {\n          ...commentActions,\n          ...createPostActions,\n          ...investActions,\n          ...animationActions\n        },\n        dispatch\n      )\n    })\n  )(Comments)\n);\n"],"file":"comment.container.js"}