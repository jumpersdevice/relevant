{"version":3,"sources":["../../../src/modules/community/hooks.js"],"names":["useUnread","community","active","myMemberships","useMembers","membership","find","m","communityId","_id","unread","useSubscribeToUnread","useResetUnread","useTotalUnread","reduce","a","user","state","auth","MY_MEMBERSHIPS","skip","ssr","data","client","INC_UNREAD","variables","communities","onSubscriptionData","writeQuery","query","CLEAR_UNREAD","clearUnread"],"mappings":"qVAAA,uCACA,+CAMA,kCAEO,QAASA,CAAAA,SAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,CAAsC,CAC3C,GAAMC,CAAAA,aAAa,CAAGC,UAAU,EAAhC,CACA,GAAMC,CAAAA,UAAU,CACdF,aAAa,EAAIA,aAAa,CAACG,IAAd,CAAmB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,WAAF,GAAkBP,SAAS,CAACQ,GAAhC,EAApB,CADnB,CAEA,GAAMC,CAAAA,MAAM,CAAGL,UAAU,EAAIA,UAAU,CAACK,MAAxC,CACAC,oBAAoB,CAACN,UAAD,CAApB,CACAO,cAAc,CAACF,MAAD,CAASL,UAAT,CAAqBH,MAArB,CAAd,CACA,MAAOQ,CAAAA,MAAP,CACD,CAEM,QAASG,CAAAA,cAAT,EAA0B,CAC/B,GAAMV,CAAAA,aAAa,CAAGC,UAAU,EAAhC,CACA,MAAOD,CAAAA,aAAa,CAACW,MAAd,CAAqB,SAACC,CAAD,CAAIR,CAAJ,QAAUQ,CAAAA,CAAC,CAAGR,CAAC,CAACG,MAAhB,EAArB,CAA6C,CAA7C,CAAP,CACD,CAEM,QAASN,CAAAA,UAAT,EAAsB,CAC3B,GAAMY,CAAAA,IAAI,CAAG,4BAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,IAAf,EAAjB,CAAb,CAD2B,cAEc,yBAASG,uBAAT,CAAyB,CAChEC,IAAI,CAAE,CAACJ,IADyD,CAEhEK,GAAG,CAAE,KAF2D,CAAzB,CAFd,0BAEnBC,IAFmB,CAEnBA,IAFmB,yBAEZ,CAAEnB,aAAa,CAAE,EAAjB,CAFY,mBAMnBA,CAAAA,aANmB,CAMDmB,IANC,CAMnBnB,aANmB,CAO3B,MAAOA,CAAAA,aAAP,CACD,CAED,QAASQ,CAAAA,oBAAT,CAA8BN,UAA9B,CAA0C,CACxC,GAAMF,CAAAA,aAAa,CAAGC,UAAU,EAAhC,CACA,GAAMmB,CAAAA,MAAM,CAAG,iCAAf,CAFwC,SAGhBlB,UAAU,EAAI,EAHE,CAGhCG,WAHgC,MAGhCA,WAHgC,CAIxC,gCAAgBgB,mBAAhB,CAA4B,CAC1BH,GAAG,CAAE,KADqB,CAE1BI,SAAS,CAAE,CAAEC,WAAW,CAAE,CAAClB,WAAD,CAAf,CAFe,CAG1BmB,kBAAkB,CAAE,6BAAM,CACxBtB,UAAU,CAACK,MAAX,GACAa,MAAM,CAACK,UAAP,CAAkB,CAAEC,KAAK,CAAEV,uBAAT,CAAyBG,IAAI,CAAE,CAAEnB,aAAa,CAAbA,aAAF,CAA/B,CAAlB,EACD,CANyB,CAA5B,EAQD,CAED,QAASS,CAAAA,cAAT,CAAwBF,MAAxB,CAAgCL,UAAhC,CAA4CH,MAA5C,CAAoD,CAClD,GAAMqB,CAAAA,MAAM,CAAG,iCAAf,CADkD,iBAE5B,4BAAYO,qBAAZ,CAF4B,2DAE3CC,WAF2C,kBAGlD,GAAM5B,CAAAA,aAAa,CAAGC,UAAU,EAAhC,CAEA,GAAIM,MAAM,EAAIR,MAAd,CAAsB,CACpBG,UAAU,CAACK,MAAX,CAAoB,CAApB,CACAa,MAAM,CAACK,UAAP,CAAkB,CAAEC,KAAK,CAAEV,uBAAT,CAAyBG,IAAI,CAAE,CAAEnB,aAAa,CAAbA,aAAF,CAA/B,CAAlB,EACA4B,WAAW,CAAC,CAAEN,SAAS,CAAE,CAAEhB,GAAG,CAAEJ,UAAU,CAACI,GAAlB,CAAb,CAAD,CAAX,CACD,CACF","sourcesContent":["import { useSelector } from 'react-redux';\nimport {\n  useQuery,\n  useApolloClient,\n  useMutation,\n  useSubscription\n} from '@apollo/react-hooks';\nimport { MY_MEMBERSHIPS, CLEAR_UNREAD, INC_UNREAD } from './queries';\n\nexport function useUnread(community, active) {\n  const myMemberships = useMembers();\n  const membership =\n    myMemberships && myMemberships.find(m => m.communityId === community._id);\n  const unread = membership && membership.unread;\n  useSubscribeToUnread(membership);\n  useResetUnread(unread, membership, active);\n  return unread;\n}\n\nexport function useTotalUnread() {\n  const myMemberships = useMembers();\n  return myMemberships.reduce((a, m) => a + m.unread, 0);\n}\n\nexport function useMembers() {\n  const user = useSelector(state => state.auth.user);\n  const { data = { myMemberships: [] } } = useQuery(MY_MEMBERSHIPS, {\n    skip: !user,\n    ssr: false\n  });\n  const { myMemberships } = data;\n  return myMemberships;\n}\n\nfunction useSubscribeToUnread(membership) {\n  const myMemberships = useMembers();\n  const client = useApolloClient();\n  const { communityId } = membership || {};\n  useSubscription(INC_UNREAD, {\n    ssr: false,\n    variables: { communities: [communityId] },\n    onSubscriptionData: () => {\n      membership.unread++;\n      client.writeQuery({ query: MY_MEMBERSHIPS, data: { myMemberships } });\n    }\n  });\n}\n\nfunction useResetUnread(unread, membership, active) {\n  const client = useApolloClient();\n  const [clearUnread] = useMutation(CLEAR_UNREAD);\n  const myMemberships = useMembers();\n\n  if (unread && active) {\n    membership.unread = 0;\n    client.writeQuery({ query: MY_MEMBERSHIPS, data: { myMemberships } });\n    clearUnread({ variables: { _id: membership._id } });\n  }\n}\n"],"file":"hooks.js"}