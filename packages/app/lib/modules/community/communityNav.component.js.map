{"version":3,"sources":["../../../src/modules/community/communityNav.component.js"],"names":["linkStyle","css","colors","black","white","Community","propTypes","viewCommunityMembers","PropTypes","func","showSettings","community","state","auth","view","navigation","discover","screenSize","communityMembers","members","communities","userCommunities","userMemberships","activeCommunity","active","activeMembers","map","id","_id","SIDE_NAV_PADDING","OtherCommunities","list","filter","slug","CommunityLink","object","bool","MemoCommunityLink","dispatch","unread","requestAnimationFrame"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { colors } from 'app/styles';\nimport { resetTabs, closeDrawer } from 'modules/navigation/navigation.actions';\nimport { setCommunity } from 'modules/auth/auth.actions';\nimport { css } from 'styled-components/primitives';\nimport ULink from 'modules/navigation/ULink.component';\nimport CommunityActive from 'modules/community/communityActive.component';\nimport CommunityListItem from 'modules/community/communityListItem.component';\nimport get from 'lodash/get';\nimport { View, BodyText, Badge } from 'modules/styled/uni';\nimport { SIDE_NAV_PADDING } from 'styles/layout';\nimport { useUnread } from './hooks';\n\n// TODO: change to work like in the communityActive component\nconst linkStyle = css`\n  display: flex;\n  align-items: center;\n  color: ${colors.black};\n  &:hover > div > div:first-child {\n    text-decoration: underline;\n    text-decoration-color: ${colors.black};\n  }\n  &:hover {\n    background: ${colors.white};\n  }\n`;\n\nCommunity.propTypes = {\n  viewCommunityMembers: PropTypes.func,\n  showSettings: PropTypes.func\n};\n\nexport function Community({ viewCommunityMembers, showSettings }) {\n  const community = useSelector(state => state.community);\n  const auth = useSelector(state => state.auth);\n  const view = useSelector(state => state.navigation.discover);\n  const screenSize = useSelector(state => state.navigation.screenSize);\n\n  const {\n    communityMembers,\n    members,\n    communities,\n    userCommunities,\n    userMemberships\n  } = community;\n\n  const activeCommunity = communities[community.active];\n  const activeMembers = get(communityMembers, community.active, []).map(\n    id => members[id]\n  );\n  return (\n    <View flex={1}>\n      <View bb>\n        {activeCommunity && (\n          <CommunityActive\n            key={activeCommunity._id}\n            community={activeCommunity}\n            userCommunities={userCommunities}\n            userMemberships={userMemberships}\n            members={activeMembers}\n            screenSize={screenSize}\n            viewCommunityMembers={viewCommunityMembers}\n            showSettings={showSettings}\n            view={view}\n            auth={auth}\n          >\n            <MemoCommunityLink community={activeCommunity} active />\n          </CommunityActive>\n        )}\n        <View m={'2 0'}>\n          <OtherCommunities />\n        </View>\n      </View>\n\n      <BodyText m={[SIDE_NAV_PADDING, 2]}>\n        We'll be adding more communities soon!{'\\n\\n'}\n      </BodyText>\n    </View>\n  );\n}\n\nconst OtherCommunities = memo(() => {\n  const { communities, list, active } = useSelector(state => state.community);\n  return list\n    .map(id => communities[id])\n    .filter(community => community && active !== community.slug)\n    .map(community => <MemoCommunityLink key={community._id} community={community} />);\n});\n\nCommunityLink.propTypes = {\n  community: PropTypes.object,\n  active: PropTypes.bool\n};\n\nconst MemoCommunityLink = memo(CommunityLink);\n\nfunction CommunityLink({ community, active }) {\n  const dispatch = useDispatch();\n  const unread = useUnread(community, active);\n\n  return (\n    <ULink\n      flex={1}\n      styles={linkStyle}\n      key={community._id}\n      to={'/' + community.slug + '/new'}\n      onPress={() => {\n        dispatch(closeDrawer());\n        requestAnimationFrame(() => {\n          dispatch(setCommunity(community.slug));\n          dispatch(resetTabs());\n        });\n      }}\n    >\n      <View flex={1} fdirection={'row'} align={'center'} justify={'space-between'}>\n        <CommunityListItem community={community} p={[`1 ${SIDE_NAV_PADDING}`, '1 2']} />\n        <Badge mr={[SIDE_NAV_PADDING, 2]} number={unread} />\n      </View>\n    </ULink>\n  );\n}\n\nexport default memo(Community);\n"],"file":"communityNav.component.js"}