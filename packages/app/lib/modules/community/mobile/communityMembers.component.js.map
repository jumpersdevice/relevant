{"version":3,"sources":["../../../../src/modules/community/mobile/communityMembers.component.js"],"names":["CommunityMembers","props","context","page","length","setState","loaded","community","actions","getCommunityMembers","slug","active","skip","limit","pageSize","then","renderRow","bind","load","state","onInteraction","InteractionManager","runAfterInteractions","forceUpdate","cancel","memberId","members","user","embeddedUser","relevance","pagerank","communityMembers","activeCommunityMembers","listEl","loading","flex","Component","navigation","PropTypes","object","invest","users","mapStateToProps","investments","error","discover","tabs","mapDispatchToProps","dispatch","navigationActions","searchMembers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, InteractionManager } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { searchMembers, getCommunityMembers } from 'modules/community/community.actions';\n\nimport * as navigationActions from 'modules/navigation/navigation.actions';\n\nimport DiscoverUser from 'modules/discover/mobile/discoverUser.component';\nimport CustomListView from 'modules/listview/mobile/customList.component';\nimport CustomSpinner from 'modules/ui/mobile/CustomSpinner.component';\n\nclass CommunityMembers extends Component {\n  static propTypes = {\n    navigation: PropTypes.object,\n    invest: PropTypes.object,\n    actions: PropTypes.object,\n    users: PropTypes.object,\n    community: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.renderRow = this.renderRow.bind(this);\n    this.load = this.load.bind(this);\n    this.state = {\n      loaded: false\n    };\n    this.pageSize = 20;\n  }\n\n  componentWillMount() {\n    this.onInteraction = InteractionManager.runAfterInteractions(() => {\n      this.load(0, this.pageSize);\n      this.forceUpdate();\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.onInteraction) this.onInteraction.cancel();\n  }\n\n  load = (page, length) => {\n    this.setState({ loaded: false });\n    const { community } = this.props;\n    this.props.actions\n      .getCommunityMembers({\n        slug: community.active,\n        skip: length,\n        limit: this.pageSize\n      })\n      .then(() => {\n        this.setState({ loaded: true });\n      });\n  };\n\n  renderRow(memberId) {\n    const { members } = this.props.community;\n    const user = members[memberId];\n    if (!user || !memberId) return null;\n    return (\n      <DiscoverUser\n        relevance\n        user={{\n          ...user.embeddedUser,\n          relevance: {\n            pagerank: user.pagerank\n          }\n        }}\n        // relevance={user.pagerank}\n        renderRight={() => null}\n        showRelevance\n        {...this.props}\n      />\n    );\n  }\n\n  render() {\n    const { community } = this.props;\n    const { loaded } = this.state;\n    const { active, communityMembers } = community;\n    const activeCommunityMembers = communityMembers[active] || [];\n    let listEl = <CustomSpinner />;\n\n    if (!this.loading) {\n      listEl = (\n        <CustomListView\n          data={activeCommunityMembers}\n          loaded={!!activeCommunityMembers.length || loaded}\n          renderRow={this.renderRow}\n          load={this.load}\n          type={'community members'}\n          parent={'members'}\n          active\n          view={0}\n          scrollableTab\n        />\n      );\n    }\n\n    return <View style={{ flex: 1 }}>{listEl}</View>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    community: state.community,\n    invest: state.investments,\n    users: state.user.users,\n    error: state.error.discover,\n    tabs: state.navigation.tabs\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        ...navigationActions,\n        searchMembers,\n        getCommunityMembers\n      },\n      dispatch\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommunityMembers);\n"],"file":"communityMembers.component.js"}