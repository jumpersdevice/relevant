{"version":3,"sources":["../../../src/modules/community/community.actions.js"],"names":["Alert","alert","addCommunity","community","type","types","ADD_COMMUNITY","payload","modifyCommunity","UPDATE_COMMUNITY","removeCommunity","communitySlug","REMOVE_COMMUNITY","setCommunities","communities","SET_COMMUNITIES","setCommunityMembers","slug","members","SET_COMMUNITY_MEMBERS","getCommunityAdmins","setUserMemberships","memberships","SET_USER_MEMBERSHIPS","getCommunityMembers","skip","limit","dispatch","api","request","method","endpoint","params","query","getCommunities","getState","auth","user","res","createCommunity","body","JSON","stringify","responseJSON","message","updateCommunity","_id","deleteCommunity","joinCommunity","name","searchMembers","val","path","search","checkAuth","state"],"mappings":"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","sourcesContent":["import * as types from 'core/actionTypes';\nimport { api, alert } from 'app/utils';\n\nconst Alert = alert.Alert();\n\nexport function addCommunity(community) {\n  return {\n    type: types.ADD_COMMUNITY,\n    payload: community\n  };\n}\n\nexport function modifyCommunity(community) {\n  return {\n    type: types.UPDATE_COMMUNITY,\n    payload: community\n  };\n}\n\nexport function removeCommunity(communitySlug) {\n  return {\n    type: types.REMOVE_COMMUNITY,\n    payload: communitySlug\n  };\n}\n\nexport function setCommunities(communities) {\n  return {\n    type: types.SET_COMMUNITIES,\n    payload: communities\n  };\n}\n\nexport function setCommunityMembers(slug, members) {\n  return {\n    type: types.SET_COMMUNITY_MEMBERS,\n    payload: { slug, members }\n  };\n}\n\n// currently in auth, should move to community\n// export function setCommunity(community) {\n//   return dispatch => {\n//     return dispatch({\n//       type: types.SET_COMMUNITY,\n//       payload: community\n//     });\n//   };\n// }\n\nexport function getCommunityAdmins() {}\n\nexport function setUserMemberships(memberships) {\n  return {\n    type: types.SET_USER_MEMBERSHIPS,\n    payload: memberships\n  };\n}\n\nexport function getCommunityMembers({ slug, skip, limit }) {\n  return async dispatch => {\n    try {\n      const members = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'community',\n          params: { slug, members: 'members' },\n          query: { skip, limit }\n        })\n      );\n      return dispatch(setCommunityMembers(slug, members));\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function getCommunities() {\n  return async (dispatch, getState) => {\n    const { auth } = getState();\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'community',\n          user: auth.user\n        })\n      );\n      return dispatch(setCommunities(res));\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function createCommunity(community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'community',\n          body: JSON.stringify(community)\n        })\n      );\n      dispatch(addCommunity(responseJSON));\n      return Alert.alert('Community Created', 'success');\n    } catch (err) {\n      return Alert.alert(err.message);\n    }\n  };\n}\n\nexport function updateCommunity(community) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: `community/${community._id}`,\n          body: JSON.stringify(community)\n        })\n      );\n      dispatch(modifyCommunity(responseJSON));\n      return Alert.alert('Community Updated', 'success');\n    } catch (err) {\n      return Alert.alert(err.message);\n    }\n  };\n}\n\nexport function deleteCommunity(community) {\n  const { slug, _id } = community;\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'DELETE',\n          endpoint: `community/${_id}`\n        })\n      );\n      dispatch(removeCommunity(slug));\n      Alert.alert('Community Removed', 'success');\n      return true;\n    } catch (err) {\n      Alert.alert(err.message);\n      return false;\n    }\n  };\n}\n\nexport function joinCommunity(community) {\n  const { slug, name } = community;\n  return async dispatch => {\n    try {\n      await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: `community/${slug}/join`\n        })\n      );\n      return Alert.alert(`Joined Community: ${name}`, 'success');\n    } catch (err) {\n      return Alert.alert(err.message);\n    }\n  };\n}\n\nexport function searchMembers(val, community) {\n  const limit = 50;\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'community',\n          path: `/${community}/members/search`,\n          query: { limit, search: val }\n        })\n      );\n      return res;\n    } catch (err) {\n      return err;\n    }\n  };\n}\n\nexport function checkAuth() {\n  return async (dispatch, getState) => {\n    try {\n      const state = getState();\n      const { community } = state.auth;\n      await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'community',\n          path: `/${community}/checkAuth`\n        })\n      );\n      return null;\n    } catch (err) {\n      return err;\n    }\n  };\n}\n"],"file":"community.actions.js"}