{"version":3,"sources":["../../../../src/modules/_app/mobile/app.container.js"],"names":["global","Buffer","require","Ionicons","loadFont","Analytics","customTextProps","style","fontFamily","StatusBar","setBarStyle","setBackgroundColor","colors","white","Application","props","context","url","actions","navigation","auth","match","params","split","newCommunity","replace","user","confirmCode","confirmEmail","community","BANNED_COMMUNITY_SLUGS","includes","setCommunity","query","parsed","queryString","parse","invitecode","isAuthenticated","setInviteCode","navigate","redeemInvite","state","newName","height","fullHeight","backgroundTime","AppState","addEventListener","handleAppStateChange","bind","Dimensions","get","width","setWidth","getUser","then","setScrollTab","tab","setUserId","_id","getEarnings","getCommunities","PushNotification","setApplicationIconBadgeNumber","Linking","handleOpenURL","Orientation","lockToPortrait","SafariView","prev","userToSocket","getNotificationCount","removeEventListener","currentAppState","tooltipReady","now","Date","getTime","routes","tabNavigator","currentTab","index","routeName","reloadTab","reloadAllTabs","globalModal","modalProps","modals","Body","bodyProps","close","hideModal","platformStyles","Platform","OS","currentHeight","flex","backgroundColor","renderModal","Component","PropTypes","object","string","RootStack","router","mapStateToProps","error","universal","modal","discoverTab","discover","mapDispatchToProps","dispatch","authActions","notifActions","userActions","navigationActions","tooltipActions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, AppState, Linking, Platform, StatusBar, Dimensions } from 'react-native';\n\nimport { setCustomText } from 'react-native-global-props';\nimport PropTypes from 'prop-types';\nimport Orientation from 'react-native-orientation';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PushNotification from 'react-native-push-notification';\nimport SafariView from 'react-native-safari-view';\nimport { AppContainer, RootStack } from 'modules/_app/mobile/mainRouter';\nimport { analytics } from 'react-native-firebase';\n\n// Animiations\nimport InvestAnimation from 'modules/animation/mobile/investAnimation.component';\nimport HeartAnimation from 'modules/animation/mobile/heartAnimation.component';\nimport UpvoteAnimation from 'modules/animation/upvoteAnimation.component';\nimport DownvoteAnimation from 'modules/animation/downvoteAnimation.component';\n\nimport * as authActions from 'modules/auth/auth.actions';\nimport * as userActions from 'modules/user/user.actions';\nimport * as notifActions from 'modules/activity/activity.actions';\nimport * as tooltipActions from 'modules/tooltip/tooltip.actions';\nimport * as navigationActions from 'modules/navigation/navigation.actions';\nimport { getEarnings } from 'modules/wallet/earnings.actions';\nimport { getCommunities } from 'modules/community/community.actions';\n\nimport BannerPrompt from 'modules/bannerPrompt/banner.container';\nimport Tooltip from 'modules/tooltip/mobile/tooltip.container';\nimport { fullHeight } from 'app/styles/global';\nimport queryString from 'query-string';\nimport { BANNED_COMMUNITY_SLUGS } from '@r3l/common';\nimport PriceProvider from 'modules/wallet/price.context';\n\nimport { BottomSheet } from 'modules/ui/mobile/bottomSheet';\nimport * as modals from 'modules/ui/modals/mobile.lookup';\nimport { colors } from 'styles';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nglobal.Buffer = global.Buffer || require('buffer').Buffer;\n\nIonicons.loadFont();\n\nconst Analytics = analytics();\n\n// Setting default styles for all Text components.\nconst customTextProps = {\n  style: {\n    fontFamily: 'HelveticaNeue'\n  }\n};\nsetCustomText(customTextProps);\n\nStatusBar.setBarStyle('dark-content');\nStatusBar.setBackgroundColor(colors.white);\n\nclass Application extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    auth: PropTypes.object,\n    globalModal: PropTypes.string,\n    navigation: PropTypes.object\n  };\n\n  static router = RootStack.router;\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      newName: null,\n      height: fullHeight\n    };\n    this.backgroundTime = 0;\n  }\n\n  componentDidMount() {\n    const { actions } = this.props;\n    AppState.addEventListener('change', this.handleAppStateChange.bind(this));\n    const { width } = Dimensions.get('window');\n    this.props.actions.setWidth(width);\n\n    // TODO - error state & loading state\n    //   const { error } = this.props;\n    //   if (error) {\n    //     return <ErrorComponent\n    //       parent=\"universal\"\n    //       reloadFunction={this.props.actions.getUser}\n    //     />;\n    //   }\n    actions.getUser().then(async user => {\n      if (!user) {\n        return this.props.actions.setScrollTab('discover', { tab: 1 });\n        // return navigation.navigate('auth');\n      }\n      Analytics.setUserId(user._id);\n      const { community } = user;\n      if (community) actions.setCommunity(community);\n      actions.getEarnings('pending');\n      return null;\n    });\n    actions.getCommunities();\n\n    PushNotification.setApplicationIconBadgeNumber(0);\n    Linking.addEventListener('url', this.handleOpenURL);\n    this.fullHeight = fullHeight;\n    Orientation.lockToPortrait();\n\n    if (SafariView.addEventListener) {\n      SafariView.addEventListener('onDismiss', () => {\n        Orientation.lockToPortrait();\n      });\n    }\n  }\n\n  componentDidUpdate(prev) {\n    const { auth, actions } = this.props;\n    if (!prev.auth.user && auth.user) {\n      Analytics.setUserId(auth.user._id);\n\n      actions.userToSocket(auth.user._id);\n      actions.getNotificationCount();\n\n      const { community } = auth.user;\n      if (community) actions.setCommunity(community);\n\n      if (auth.invitecode) {\n        actions.redeemInvite(auth.invitecode);\n      }\n    }\n  }\n\n  handleOpenURL = url => {\n    const { actions, navigation, auth } = this.props;\n\n    // TWitter callback\n    if (url.url.match('://callback')) return;\n\n    const params = url.url.split(/\\/\\//)[1].split(/\\/|\\?/);\n    let newCommunity = params[1];\n\n    newCommunity = newCommunity && newCommunity.replace(/user|admin|info/, '');\n\n    // handle confirm email link\n    if (url.url.match('/user/confirm')) {\n      const user = params[2];\n      const confirmCode = params[3];\n      actions.confirmEmail(user, confirmCode);\n    }\n\n    if (\n      !newCommunity ||\n      newCommunity === 'user' ||\n      newCommunity === 'info' ||\n      newCommunity === 'admin'\n    ) {\n      newCommunity = null;\n    }\n\n    if (\n      newCommunity &&\n      newCommunity !== '' &&\n      newCommunity !== auth.community &&\n      !BANNED_COMMUNITY_SLUGS.includes(newCommunity)\n    ) {\n      actions.setCommunity(newCommunity);\n    }\n\n    const query = url.url.split('?')[1];\n    const parsed = queryString.parse(query);\n\n    if (parsed.invitecode && !auth.isAuthenticated) {\n      actions.setInviteCode(parsed.invitecode);\n      navigation.navigate('twitterSignup');\n    }\n\n    if (parsed.invitecode && auth.isAuthenticated) {\n      actions.redeemInvite(parsed.invitecode);\n    }\n  };\n\n  componentWillUnmount() {\n    Linking.removeEventListener('url', this.handleOpenURL);\n    AppState.removeEventListener('change', this.handleAppStateChange.bind(this));\n  }\n\n  // home button etc\n  handleAppStateChange(currentAppState) {\n    const { navigation } = this.props;\n    const { state } = navigation;\n    if (currentAppState === 'active' && this.props.auth.user) {\n      this.props.actions.userToSocket(this.props.auth.user._id);\n      this.props.actions.getNotificationCount();\n\n      this.props.actions.tooltipReady(true);\n\n      PushNotification.setApplicationIconBadgeNumber(0);\n\n      // refresh after 5 minutes of inactivity\n      const now = new Date().getTime();\n      if (this.backgroundTime + 10 * 60 * 1000 < now) {\n        // reload current tab\n        if (!state.routes) return null;\n        const tabNavigator = state.routes[0];\n        if (!tabNavigator.routes) return null;\n        const currentTab = tabNavigator.routes[tabNavigator.index].routeName;\n        this.props.actions.reloadTab(currentTab);\n\n        // reload all other tabs on focus\n        return this.props.actions.reloadAllTabs();\n      }\n    }\n\n    this.backgroundTime = new Date().getTime();\n    return true;\n  }\n\n  renderModal() {\n    const { globalModal } = this.props;\n\n    if (!globalModal) return null;\n    const modalProps = modals[globalModal] || globalModal;\n\n    if (typeof modalProps === 'string') return null;\n    const { Body } = modalProps;\n\n    const bodyProps = modalProps.bodyProps ? modalProps.bodyProps : {};\n    const close = () => this.props.actions.hideModal();\n\n    return (\n      <BottomSheet {...modalProps} close={close} visible>\n        <Body {...bodyProps} close={close} />\n      </BottomSheet>\n    );\n  }\n\n  render() {\n    let platformStyles = {};\n    if (Platform.OS === 'android') {\n      const height = this.state.height - StatusBar.currentHeight;\n      platformStyles = { height };\n    } else {\n      platformStyles = { flex: 1 };\n    }\n    // main app view has to be absolute to make android keyboard work\n    return (\n      <View style={{ ...platformStyles, backgroundColor: 'black' }}>\n        <PriceProvider>\n          <AppContainer navigation={this.props.navigation} />\n          <BannerPrompt isMobile />\n          {this.renderModal()}\n          <Tooltip />\n          <InvestAnimation />\n          <HeartAnimation />\n          <DownvoteAnimation />\n          <UpvoteAnimation />\n        </PriceProvider>\n      </View>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    error: state.error.universal,\n    globalModal: state.navigation.modal,\n    discoverTab: state.navigation.discover.tab\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        ...authActions,\n        ...notifActions,\n        ...userActions,\n        ...navigationActions,\n        ...tooltipActions,\n        getEarnings,\n        getCommunities\n      },\n      dispatch\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Application);\n"],"file":"app.container.js"}