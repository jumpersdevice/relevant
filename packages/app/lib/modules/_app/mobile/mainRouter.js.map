{"version":3,"sources":["../../../../src/modules/_app/mobile/mainRouter.js"],"names":["CreatePostWrapper","flex","Platform","OS","StatusBar","currentHeight","props","navigation","Component","PropTypes","object","CreatePostStack","router","RootStack","auth","screen","AuthContainer","header","path","main","TabContainerWithHelp","stall","StallScreen","error","ErrorComponent","articleView","ArticleView","createPost","navigationOptions","TransitionPresets","ModalSlideFromBottomIOS","initialRouteName","headerMode","headerLayoutPreset","cardOverlayEnabled","cardShadowEnabled","defaultNavigationOptions","gesturesEnabled","gestureResponseDistance","horizontal","fullWidth","cardStyle","backgroundColor","colors","white","SlideFromRightIOS","AppContainer"],"mappings":"o1BAAA,qDACA,iDACA,4DACA,gDACA,6DAGA,8EACA,kGACA,8EACA,kGACA,oDAIA,8EACA,8CACA,uC,kmDAEMA,CAAAA,iB,+TAOK,CACP,MACE,8BAAC,oCAAD,EACE,QAAQ,CAAE,SADZ,CAEE,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAFT,CAGE,sBAAsB,CAAEC,yBAASC,EAAT,GAAgB,SAAhB,CAA4BC,0BAAUC,aAAtC,CAAsD,CAHhF,gEAKE,6BAAC,qCAAD,EAAqB,UAAU,CAAE,KAAKC,KAAL,CAAWC,UAA5C,gEALF,CADF,CASD,C,+BAjB6BC,gB,+BAA1BR,iB,aACe,CACjBO,UAAU,CAAEE,mBAAUC,MADL,C,+BADfV,iB,UAKYW,kCAAgBC,M,EAe3B,GAAMC,CAAAA,SAAS,CAAG,+CACvB,CACEC,IAAI,CAAE,CACJC,MAAM,CAAEC,aADJ,CAEJC,MAAM,CAAE,KAFJ,CAGJC,IAAI,CAAE,EAHF,CADR,CAMEC,IAAI,CAAE,CACJJ,MAAM,CAAEK,0BADJ,CAEJF,IAAI,CAAE,EAFF,CANR,CAUEG,KAAK,CAAE,CACLN,MAAM,CAAEO,oBADH,CAVT,CAaEC,KAAK,CAAE,CACLR,MAAM,CAAES,cADH,CAELN,IAAI,CAAE,OAFD,CAbT,CAiBEO,WAAW,CAAE,CACXV,MAAM,CAAEW,oBADG,CAjBf,CAoBEC,UAAU,CAAE,CACVZ,MAAM,CAAEf,iBADE,CAEViB,MAAM,CAAE,KAFE,CAGVW,iBAAiB,kBACZC,wCAAkBC,uBADN,CAHP,CApBd,CADuB,CA6BvB,CACEC,gBAAgB,CAAE,MADpB,CAEEC,UAAU,CAAE,MAFd,CAGEC,kBAAkB,CAAE,QAHtB,CAIEC,kBAAkB,CAAE,IAJtB,CAKEC,iBAAiB,CAAE,IALrB,CAOEC,wBAAwB,CAAE,0DACxBC,eAAe,CAAE,IADO,CAExBC,uBAAuB,CAAE,CACvBC,UAAU,CAAEC,iBADW,CAFD,CAKxBC,SAAS,CAAE,CACTC,eAAe,CAAEC,eAAOC,KADf,CALa,EAQrBf,wCAAkBgB,iBARG,GAP5B,CA7BuB,CAAlB,C,4BAiDA,GAAMC,CAAAA,YAAY,CAAG,wCAAmBjC,SAAnB,CAArB,C","sourcesContent":["import React, { Component } from 'react';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator, TransitionPresets } from 'react-navigation-stack';\nimport { KeyboardAvoidingView, StatusBar, Platform } from 'react-native';\nimport PropTypes from 'prop-types';\n\n// root routes\nimport AuthContainer from 'modules/auth/mobile/auth.container';\nimport ArticleView from 'modules/navigation/mobile/articleView.container';\nimport ErrorComponent from 'modules/ui/mobile/error.component';\nimport StallScreen from 'modules/navigation/mobile/stallScreen.component';\nimport {\n  CreatePostNavigator,\n  CreatePostStack\n} from 'modules/_app/mobile/createPostRouter';\nimport TabContainerWithHelp from 'modules/_app/mobile/tabRouterWithHelp';\nimport { fullWidth } from 'app/styles/global';\nimport { colors } from 'styles';\n\nclass CreatePostWrapper extends Component {\n  static propTypes = {\n    navigation: PropTypes.object\n  };\n\n  static router = CreatePostStack.router;\n\n  render() {\n    return (\n      <KeyboardAvoidingView\n        behavior={'padding'}\n        style={{ flex: 1 }}\n        keyboardVerticalOffset={Platform.OS === 'android' ? StatusBar.currentHeight : 0}\n      >\n        <CreatePostNavigator navigation={this.props.navigation} />\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nexport const RootStack = createStackNavigator(\n  {\n    auth: {\n      screen: AuthContainer,\n      header: false,\n      path: ''\n    },\n    main: {\n      screen: TabContainerWithHelp,\n      path: ''\n    },\n    stall: {\n      screen: StallScreen\n    },\n    error: {\n      screen: ErrorComponent,\n      path: 'error'\n    },\n    articleView: {\n      screen: ArticleView\n    },\n    createPost: {\n      screen: CreatePostWrapper,\n      header: false,\n      navigationOptions: {\n        ...TransitionPresets.ModalSlideFromBottomIOS\n      }\n    }\n  },\n  {\n    initialRouteName: 'main',\n    headerMode: 'none',\n    headerLayoutPreset: 'center',\n    cardOverlayEnabled: true,\n    cardShadowEnabled: true,\n\n    defaultNavigationOptions: () => ({\n      gesturesEnabled: true,\n      gestureResponseDistance: {\n        horizontal: fullWidth\n      },\n      cardStyle: {\n        backgroundColor: colors.white\n      },\n      ...TransitionPresets.SlideFromRightIOS\n    })\n  }\n);\n\nexport const AppContainer = createAppContainer(RootStack);\n"],"file":"mainRouter.js"}