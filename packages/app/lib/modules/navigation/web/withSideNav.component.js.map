{"version":3,"sources":["../../../../src/modules/navigation/web/withSideNav.component.js"],"names":["WithSideNav","state","isOpen","props","actions","openWebSideNav","closeWebSideNav","communities","length","getCommunities","isAuthenticated","sideNavIsOpen","screenSize","notif","route","promptType","isDesktop","colors","white","top","right","left","minHeight","layout","BANNER_PROMPT_HEIGHT","sideNavWidth","isMenuOpen","routes","dispatch","Component","PropTypes","object","bool","array","number","mapStateToProps","community","list","auth","navigation","mapDispatchToProps","hideModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { renderRoutes } from 'react-router-config';\nimport { connect } from 'react-redux';\nimport SideNav from 'modules/navigation/web/sideNav.component';\nimport { withRouter } from 'react-router-dom';\nimport { colors, layout } from 'app/styles';\nimport { View } from 'modules/styled/uni';\nimport BannerPrompt from 'modules/bannerPrompt/banner.container';\nimport SplashComponent from 'modules/navigation/banner';\nimport { slide as Menu } from 'react-burger-menu';\nimport {\n  openWebSideNav,\n  closeWebSideNav,\n  hideModal\n} from 'modules/navigation/navigation.actions';\nimport { bindActionCreators } from 'redux';\nimport { getCommunities } from 'modules/community/community.actions';\n\nclass WithSideNav extends Component {\n  static propTypes = {\n    route: PropTypes.object,\n    isAuthenticated: PropTypes.bool,\n    notif: PropTypes.object,\n    actions: PropTypes.object,\n    communities: PropTypes.array,\n    sideNavIsOpen: PropTypes.bool,\n    screenSize: PropTypes.number\n  };\n\n  isMenuOpen = state => {\n    if (state.isOpen) {\n      this.props.actions.openWebSideNav();\n    } else {\n      this.props.actions.closeWebSideNav();\n    }\n    return state.isOpen;\n  };\n\n  static fetchData(dispatch) {\n    return dispatch(getCommunities());\n  }\n\n  componentDidMount() {\n    const { actions, communities } = this.props;\n    if (!communities.length) actions.getCommunities();\n  }\n\n  render() {\n    const { isAuthenticated, sideNavIsOpen, screenSize, notif, route } = this.props;\n    const { promptType } = notif;\n    const isDesktop = screenSize === 0;\n\n    return (\n      <View bg={colors.white} display=\"flex\" flex={1}>\n        {!isAuthenticated ? (\n          <SplashComponent screenSize={screenSize} type={'app'} cta=\"SIGN_UP\" />\n        ) : null}\n        {promptType ? (\n          <View\n            position=\"sticky\"\n            zIndex=\"200\"\n            style={{\n              top: 0,\n              right: 0,\n              left: 0,\n              minHeight: layout.BANNER_PROMPT_HEIGHT\n            }}\n          >\n            <BannerPrompt />\n          </View>\n        ) : null}\n        <View fdirection=\"row\" display=\"flex\">\n          {!isDesktop ? (\n            <Menu\n              width={layout.sideNavWidth}\n              isOpen={sideNavIsOpen}\n              onStateChange={this.isMenuOpen}\n            >\n              <View\n                fdirection=\"column\"\n                display=\"flex\"\n                style={{ top: promptType ? layout.BANNER_PROMPT_HEIGHT : 0 }}\n              >\n                <SideNav />\n              </View>\n            </Menu>\n          ) : (\n            <View fdirection=\"column\" display=\"flex\">\n              <SideNav />\n            </View>\n          )}\n          <View display=\"flex\" flex={1}>\n            {renderRoutes(route.routes)}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  communities: state.community.list,\n  isAuthenticated: state.auth.isAuthenticated,\n  navigation: state.navigation,\n  sideNavIsOpen: state.navigation.sideNavIsOpen,\n  screenSize: state.navigation.screenSize,\n  notif: state.notif\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      openWebSideNav,\n      closeWebSideNav,\n      hideModal,\n      getCommunities\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(WithSideNav));\n"],"file":"withSideNav.component.js"}