{"version":3,"sources":["../../../../src/modules/navigation/web/breadcrumbs.component.js"],"names":["Breadcrumbs","props","view","auth","community","newPosts","actions","communitySlug","activeCommunity","sort","newPostsNumber","refreshPostsEl","refreshTab","colors","blue","black","encodeURI","name","discover","tag","Component","PropTypes","object","mapStateToProps","state","posts","newPostsAvailable","mapDispatchToProps","dispatch"],"mappings":"6zBAAA,qDACA,6DACA,uDACA,4BACA,uCACA,uCACA,qCACA,qCACA,iD,u0BAEMA,CAAAA,W,iSASK,iBAC8C,KAAKC,KADnD,CACCC,IADD,aACCA,IADD,CACOC,IADP,aACOA,IADP,CACaC,SADb,aACaA,SADb,CACwBC,QADxB,aACwBA,QADxB,CACkCC,OADlC,aACkCA,OADlC,CAEP,GAAMC,CAAAA,aAAa,CAAG,iBAAIL,IAAJ,CAAU,oBAAV,GAAmC,iBAAIC,IAAJ,CAAU,WAAV,CAAzD,CACA,GAAI,CAACI,aAAL,CAAoB,CAClB,MAAO,KAAP,CACD,CACD,GAAMC,CAAAA,eAAe,CAAG,iBAAIJ,SAAJ,uBAA8BG,aAA9B,EAAxB,CACA,GAAME,CAAAA,IAAI,CAAG,iBAAIP,IAAJ,CAAU,eAAV,GAA8B,KAA3C,CAEA,GAAMQ,CAAAA,cAAc,CAAGL,QAAQ,CAACF,IAAI,CAACC,SAAN,CAA/B,CACA,GAAMO,CAAAA,cAAc,CAClB,6BAAC,kBAAD,EACE,EAAE,CAAC,GADL,CAEE,OAAO,CAAE,yBAAML,CAAAA,OAAO,CAACM,UAAR,CAAmB,UAAnB,CAAN,EAFX,CAGE,EAAE,CAAE,CAHN,CAIE,CAAC,CAAEC,eAAOC,IAJZ,CAKE,EAAE,CAAE,CALN,CAME,EAAE,CAAE,GANN,CAOE,EAAE,CAAE,GAPN,gFADF,CAcA,MACE,8BAAC,SAAD,EAAM,UAAU,CAAE,KAAlB,CAAyB,KAAK,CAAE,YAAhC,gEACGN,eAAe,CACd,6BAAC,kBAAD,EACE,EAAE,CAAE,GADN,CAEE,EAAE,CAAE,GAFN,CAGE,CAAC,CAAEK,eAAOE,KAHZ,CAIE,EAAE,CAAEC,SAAS,YAAKT,aAAL,aAAsBE,IAAtB,EAJf,+EAMcD,eAAe,CAACS,IAN9B,CAMoC,GANpC,CADc,CASZ,IAVN,CAWG,iBAAIf,IAAJ,CAAU,cAAV,EACC,6BAAC,kBAAD,EACE,EAAE,CAAE,GADN,CAEE,EAAE,CAAE,GAFN,CAGE,CAAC,CAAEW,eAAOE,KAHZ,CAIE,EAAE,CAAEC,SAAS,YAAKT,aAAL,aAAsBE,IAAtB,aAA8BP,IAAI,CAACgB,QAAL,CAAcC,GAA5C,EAJf,gFAMYjB,IAAI,CAACgB,QAAL,CAAcC,GAN1B,CADD,CASG,IApBN,CAsBGT,cAAc,CAAGC,cAAH,CAAoB,IAtBrC,CADF,CA0BD,C,yBA3DuBS,gB,+BAApBpB,W,aACe,CACjBE,IAAI,CAAEmB,mBAAUC,MADC,CAEjBnB,IAAI,CAAEkB,mBAAUC,MAFC,CAGjBlB,SAAS,CAAEiB,mBAAUC,MAHJ,CAIjBjB,QAAQ,CAAEgB,mBAAUC,MAJH,CAKjBhB,OAAO,CAAEe,mBAAUC,MALF,C,EA6DrB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCnB,QAAQ,CAAEmB,KAAK,CAACC,KAAN,CAAYC,iBADU,CAEhCxB,IAAI,CAAEsB,KAAK,CAACtB,IAFoB,CAGhCC,IAAI,CAAEqB,KAAK,CAACrB,IAHoB,CAIhCC,SAAS,CAAEoB,KAAK,CAACpB,SAJe,CAAL,EAA7B,CAOA,GAAMuB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCtB,OAAO,CAAE,8BAAmB,CAAEM,UAAU,CAAVA,sBAAF,CAAnB,CAAmCgB,QAAnC,CAD6B,CAAL,EAAnC,C,aAIe,wBAAQL,eAAR,CAAyBI,kBAAzB,EAA6C3B,WAA7C,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { colors } from 'app/styles';\nimport { StyledNavLink } from 'modules/styled/web';\nimport { View } from 'modules/styled/uni';\nimport { refreshTab } from 'modules/navigation/navigation.actions';\n\nclass Breadcrumbs extends Component {\n  static propTypes = {\n    view: PropTypes.object,\n    auth: PropTypes.object,\n    community: PropTypes.object,\n    newPosts: PropTypes.object,\n    actions: PropTypes.object\n  };\n\n  render() {\n    const { view, auth, community, newPosts, actions } = this.props;\n    const communitySlug = get(view, 'discover.community') || get(auth, 'community');\n    if (!communitySlug) {\n      return null;\n    }\n    const activeCommunity = get(community, `communities.${communitySlug}`);\n    const sort = get(view, 'discover.sort') || 'new';\n\n    const newPostsNumber = newPosts[auth.community];\n    const refreshPostsEl = (\n      <StyledNavLink\n        to=\"#\"\n        onClick={() => actions.refreshTab('discover')}\n        ml={1}\n        c={colors.blue}\n        hu={1}\n        lh={1.5}\n        fs={1.5}\n      >\n        See New Posts\n      </StyledNavLink>\n    );\n\n    return (\n      <View fdirection={'row'} align={'flex-start'}>\n        {activeCommunity ? (\n          <StyledNavLink\n            lh={1.5}\n            fs={1.5}\n            c={colors.black}\n            to={encodeURI(`/${communitySlug}/${sort}`)}\n          >\n            Community: {activeCommunity.name}{' '}\n          </StyledNavLink>\n        ) : null}\n        {get(view, 'discover.tag') ? (\n          <StyledNavLink\n            lh={1.5}\n            fs={1.5}\n            c={colors.black}\n            to={encodeURI(`/${communitySlug}/${sort}/${view.discover.tag}`)}\n          >\n            &nbsp;â†’ #{view.discover.tag}\n          </StyledNavLink>\n        ) : null}\n\n        {newPostsNumber ? refreshPostsEl : null}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  newPosts: state.posts.newPostsAvailable,\n  view: state.view,\n  auth: state.auth,\n  community: state.community\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ refreshTab }, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breadcrumbs);\n"],"file":"breadcrumbs.component.js"}