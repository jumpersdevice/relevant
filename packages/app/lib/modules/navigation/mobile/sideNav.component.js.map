{"version":3,"sources":["../../../../src/modules/navigation/mobile/sideNav.component.js"],"names":["LogoContainer","View","colors","secondaryBG","mixins","border","logoLink","SideNav","props","backgroundColor","actions","goToTab","require","navigation","navigate","propTypes","className","PropTypes","string","object","screenSize","number","mapStateToProps","state","isAuthenticated","auth","dispatch","navigationActions"],"mappings":"mbAAA,oDACA,6DACA,gDACA,uCACA,4BACA,gFACA,sFACA,4FACA,uCACA,gFACA,qCACA,iDACA,iEACA,iF,y5BAEA,GAAMA,CAAAA,aAAa,CAAG,wBAAOC,SAAP,CAAH,iHACGC,eAAOC,WADV,CAEfC,eAAOC,MAFQ,CAAnB,CAKA,GAAMC,CAAAA,QAAQ,CAAG,eAAjB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,QACnB,8BAAC,6BAAD,EAAc,KAAK,CAAE,CAAEC,eAAe,CAAEP,eAAOC,WAA1B,CAArB,gEACE,6BAAC,0BAAD,EAAY,mBAAmB,CAAE,CAAC,CAAD,CAAjC,gEACE,6BAAC,aAAD,EAAe,EAAE,KAAjB,CAAkB,CAAC,CAAE,CAArB,gEACE,6BAAC,cAAD,EACE,KAAK,CAAE,YADT,CAEE,OAAO,CAAE,yBAAMK,CAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsB,UAAtB,CAAN,EAFX,CAGE,EAAE,CAAEL,QAHN,gEAKE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,CAAa,IAAI,CAAE,CAAnB,CAAsB,KAAK,CAAE,QAA7B,CAAuC,UAAU,CAAE,KAAnD,iEACE,6BAAC,UAAD,EACE,CAAC,CAAE,CADL,CAEE,CAAC,CAAE,EAFL,CAGE,UAAU,CAAE,SAHd,CAIE,MAAM,CAAEM,OAAO,uCAJjB,CAKE,GAAG,CAAE,UALP,iEADF,CALF,CADF,CADF,CAkBE,6BAAC,SAAD,EAAM,IAAI,CAAE,CAAZ,gEACE,6BAAC,mBAAD,0BAAyBJ,KAAzB,kEADF,CAlBF,CAqBE,6BAAC,SAAD,EAAM,IAAI,CAAE,CAAZ,gEACE,6BAAC,qBAAD,wBACE,oBAAoB,CAAE,sCAAMA,CAAAA,KAAK,CAACK,UAAN,CAAiBC,QAAjB,CAA0B,kBAA1B,CAAN,EADxB,EAEMN,KAFN,kEADF,CArBF,CA2BE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,CAAa,IAAI,CAAE,CAAnB,gEACE,6BAAC,sBAAD,0BAAmBA,KAAnB,kEADF,CA3BF,CADF,CADmB,EAArB,CAoCAD,OAAO,CAACQ,SAAR,CAAoB,CAClBC,SAAS,CAAEC,mBAAUC,MADH,CAElBR,OAAO,CAAEO,mBAAUE,MAFD,CAGlBC,UAAU,CAAEH,mBAAUI,MAHJ,CAIlBR,UAAU,CAAEI,mBAAUE,MAJJ,CAApB,CAOA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCC,eAAe,CAAED,KAAK,CAACE,IAAN,CAAWD,eADI,CAEhCJ,UAAU,CAAEG,KAAK,CAACV,UAAN,CAAiBO,UAFG,CAAL,EAA7B,C,aAKe,wBAAQE,eAAR,CAAyB,SAAAI,QAAQ,QAAK,CACnDhB,OAAO,CAAE,+CAAwBiB,iBAAxB,EAA6CD,QAA7C,CAD0C,CAAL,EAAjC,EAEXnB,OAFW,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ScrollView } from 'react-native';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components/primitives';\nimport NavProfileComponent from 'modules/profile/navProfile.component';\nimport CommunityNav from 'modules/community/communityNav.component';\nimport { colors, mixins } from 'app/styles';\nimport * as navigationActions from 'modules/navigation/navigation.actions';\nimport { View, Image } from 'modules/styled/uni';\nimport { SafeAreaView } from 'react-navigation';\nimport ULink from 'modules/navigation/ULink.component';\nimport SideNavFooter from 'modules/navigation/sideNavFooter.component';\n\nconst LogoContainer = styled(View)`\n  background-color: ${colors.secondaryBG};\n  ${mixins.border}\n`;\n\nconst logoLink = '/relevant/new';\n\nconst SideNav = props => (\n  <SafeAreaView style={{ backgroundColor: colors.secondaryBG }}>\n    <ScrollView stickyHeaderIndices={[0]}>\n      <LogoContainer bb h={8}>\n        <ULink\n          align={'flex-start'}\n          onPress={() => props.actions.goToTab('discover')}\n          to={logoLink}\n        >\n          <View pl={2} flex={1} align={'center'} fdirection={'row'}>\n            <Image\n              h={6}\n              w={16}\n              resizeMode={'contain'}\n              source={require('public/img/logo-opt.png')}\n              alt={'Relevant'}\n            />\n          </View>\n        </ULink>\n      </LogoContainer>\n      <View flex={1}>\n        <NavProfileComponent {...props} />\n      </View>\n      <View flex={1}>\n        <CommunityNav\n          viewCommunityMembers={() => props.navigation.navigate('communityMembers')}\n          {...props}\n        />\n      </View>\n      <View mt={4} flex={1}>\n        <SideNavFooter {...props} />\n      </View>\n    </ScrollView>\n  </SafeAreaView>\n);\n\nSideNav.propTypes = {\n  className: PropTypes.string,\n  actions: PropTypes.object,\n  screenSize: PropTypes.number,\n  navigation: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  screenSize: state.navigation.screenSize\n});\n\nexport default connect(mapStateToProps, dispatch => ({\n  actions: bindActionCreators({ ...navigationActions }, dispatch)\n}))(SideNav);\n"],"file":"sideNav.component.js"}