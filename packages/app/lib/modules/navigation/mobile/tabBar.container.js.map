{"version":3,"sources":["../../../../src/modules/navigation/mobile/tabBar.container.js"],"names":["TabBarContainer","key","props","actions","navigation","reducerNav","notif","isAuthenticated","tab","state","routes","index","navigate","routeName","params","left","title","next","reload","reloadTab","count","length","refreshTab","route","popToTop","currentTab","tabs","PushNotification","setApplicationIconBadgeNumber","changeTab","PureComponent","PropTypes","object","bool","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reloadTab, refreshTab } from 'modules/navigation/navigation.actions';\nimport PushNotification from 'react-native-push-notification';\nimport TabBar from './tabBar.component';\n\nclass TabBarContainer extends PureComponent {\n  static propTypes = {\n    navigation: PropTypes.object,\n    actions: PropTypes.object,\n    notif: PropTypes.object,\n    reducerNav: PropTypes.object,\n    isAuthenticated: PropTypes.bool\n  };\n\n  changeTab = key => {\n    const { actions, navigation, reducerNav, notif, isAuthenticated } = this.props;\n    const tab = navigation.state.routes[this.props.navigation.state.index];\n\n    if (key !== 'discover' && !isAuthenticated) {\n      return navigation.navigate('auth');\n    }\n\n    // Triggers route in the main router\n    if (key === 'createPostTab') {\n      return navigation.navigate({\n        routeName: 'createPost',\n        params: { left: 'Cancel', title: 'New Post', next: 'Next' }\n      });\n    }\n\n    // Global reload of tabs\n    if (reducerNav.reload > reducerNav[key].reload) actions.reloadTab(key);\n    if (key === 'activity' && notif.count) actions.reloadTab(key);\n\n    if (tab.key === key) {\n      if (tab.routes.length === 1) return actions.refreshTab(key);\n\n      if (key === 'discover') {\n        const route = tab.routes[tab.index];\n        if (route.params.key === 'discoverTag') return actions.refreshTab(key);\n      }\n      navigation.popToTop();\n    }\n\n    return navigation.navigate(key);\n  };\n\n  render() {\n    const { navigation, notif } = this.props;\n    const currentTab = navigation.state\n      ? navigation.state.routes[navigation.state.index]\n      : null;\n    const tabs = navigation.state.routes;\n\n    // TODO - add new posts to this?\n    PushNotification.setApplicationIconBadgeNumber(notif.count);\n\n    return <TabBar tabs={tabs} currentTab={currentTab} changeTab={this.changeTab} />;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    notif: state.notif,\n    reducerNav: state.navigation\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        reloadTab,\n        refreshTab\n      },\n      dispatch\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TabBarContainer);\n"],"file":"tabBar.container.js"}