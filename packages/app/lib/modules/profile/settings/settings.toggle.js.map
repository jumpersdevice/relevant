{"version":3,"sources":["../../../../src/modules/profile/settings/settings.toggle.js"],"names":["NotificationToggle","propTypes","parent","PropTypes","string","label","notification","bool","togglePosition","text","shape","description","DescriptionComponent","object","dispatch","details","SETTING_DETAILS","reverse","Description","BodyText","colors","green","grey","isOn"],"mappings":"qSAAA,oDACA,6DACA,qCACA,uCACA,qFACA,uCACA,6CACA,8C,6GAEAA,kBAAkB,CAACC,SAAnB,CAA+B,CAC7BC,MAAM,CAAEC,mBAAUC,MADW,CAE7BC,KAAK,CAAEF,mBAAUC,MAFY,CAG7BE,YAAY,CAAEH,mBAAUI,IAHK,CAI7BC,cAAc,CAAEL,mBAAUC,MAJG,CAK7BK,IAAI,CAAEN,mBAAUO,KAAV,CAAgB,CACpBL,KAAK,CAAEF,mBAAUC,MADG,CAEpBO,WAAW,CAAER,mBAAUQ,WAFH,CAAhB,CALuB,CAS7BC,oBAAoB,CAAET,mBAAUU,MATH,CAA/B,CAYO,QAASb,CAAAA,kBAAT,MAOJ,IANDE,CAAAA,MAMC,MANDA,MAMC,CALDG,KAKC,MALDA,KAKC,CAJDC,YAIC,MAJDA,YAIC,CAHDG,IAGC,MAHDA,IAGC,CAFDD,cAEC,MAFDA,cAEC,CADDI,oBACC,MADDA,oBACC,CACD,GAAME,CAAAA,QAAQ,CAAG,6BAAjB,CACA,GAAMC,CAAAA,OAAO,CAAGN,IAAI,EAAIO,0BAAgBd,MAAhB,EAAwBG,KAAxB,CAAxB,CACA,GAAMY,CAAAA,OAAO,CAAGT,cAAc,GAAK,OAAnC,CACA,GAAI,CAACO,OAAL,CAAc,MAAO,KAAP,CACd,GAAMG,CAAAA,WAAW,CAAGN,oBAAoB,EAAIO,aAA5C,CACA,MACE,8BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,CAAa,UAAU,cAAQF,OAAO,CAAG,UAAH,CAAgB,EAA/B,CAAvB,CAA4D,KAAK,CAAC,QAAlE,gEACE,6BAAC,qBAAD,EACE,IAAI,CAAE,CAAC,CAACX,YADV,CAEE,OAAO,CAAEc,eAAOC,KAFlB,CAGE,QAAQ,CAAED,eAAOE,IAHnB,CAIE,IAAI,CAAC,QAJP,CAKE,QAAQ,CAAE,kBAAAC,IAAI,QACZT,CAAAA,QAAQ,CAAC,qEAA8BZ,MAA9B,iCAA0CG,KAA1C,CAAkDkB,IAAlD,GAAD,CADI,EALhB,gEADF,CAUE,6BAAC,SAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,EAAE,CAAEN,OAAO,CAAG,CAAH,CAAO,CAA5C,CAA+C,EAAE,CAAEA,OAAO,CAAG,GAAH,CAAS,CAAnE,CAAsE,IAAI,CAAE,CAA5E,gEACGF,OAAO,CAACV,KAAR,CAAgB,6BAAC,UAAD,kEAAQU,OAAO,CAACV,KAAhB,CAAhB,CAAiD,IADpD,CAEGU,OAAO,CAACJ,WAAR,CAAsB,6BAAC,WAAD,kEAAcI,OAAO,CAACJ,WAAtB,CAAtB,CAAyE,IAF5E,CAVF,CADF,CAiBD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Title, BodyText } from 'modules/styled/uni';\nimport { useDispatch } from 'react-redux';\nimport ToggleSwitch from 'modules/ui/toggleswitch.component';\nimport { colors } from 'app/styles';\nimport { updateNotificationSettings } from 'modules/auth/auth.actions';\nimport { SETTING_DETAILS } from './settings.constants';\n\nNotificationToggle.propTypes = {\n  parent: PropTypes.string,\n  label: PropTypes.string,\n  notification: PropTypes.bool,\n  togglePosition: PropTypes.string,\n  text: PropTypes.shape({\n    label: PropTypes.string,\n    description: PropTypes.description\n  }),\n  DescriptionComponent: PropTypes.object\n};\n\nexport function NotificationToggle({\n  parent,\n  label,\n  notification,\n  text,\n  togglePosition,\n  DescriptionComponent\n}) {\n  const dispatch = useDispatch();\n  const details = text || SETTING_DETAILS[parent][label];\n  const reverse = togglePosition === 'right';\n  if (!details) return null;\n  const Description = DescriptionComponent || BodyText;\n  return (\n    <View mt={3} fdirection={`row${reverse ? '-reverse' : ''}`} align=\"center\">\n      <ToggleSwitch\n        isOn={!!notification}\n        onColor={colors.green}\n        offColor={colors.grey}\n        size=\"custom\"\n        onToggle={isOn =>\n          dispatch(updateNotificationSettings({ [parent]: { [label]: isOn } }))\n        }\n      />\n      <View fdirection=\"column\" ml={reverse ? 0 : 2} mr={reverse ? 1.5 : 0} flex={1}>\n        {details.label ? <Title>{details.label}</Title> : null}\n        {details.description ? <Description>{details.description}</Description> : null}\n      </View>\n    </View>\n  );\n}\n"],"file":"settings.toggle.js"}