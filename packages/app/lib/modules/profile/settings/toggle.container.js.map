{"version":3,"sources":["../../../../src/modules/profile/settings/toggle.container.js"],"names":["NotificationSettings","prevProps","props","actions","user","notificationSettings","enableDesktopNotifications","enableMobileNotifications","SECTIONS","map","section","label","settings","el","field","Component","PropTypes","object","NotificationSet","propTypes","string","notifications","sortedNotifications","Object","keys","sort","k","mapStateToProps","state","auth","enableReinitialize","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { View, Header, SecondaryText } from 'modules/styled/uni';\nimport { connect } from 'react-redux';\nimport { enableMobileNotifications } from 'modules/auth/auth.actions';\nimport { enableDesktopNotifications } from 'modules/activity/activity.actions';\nimport { bindActionCreators } from 'redux';\nimport { SECTIONS } from './settings.constants';\nimport { NotificationToggle } from './settings.toggle';\n\nclass NotificationSettings extends Component {\n  static propTypes = {\n    user: PropTypes.object,\n    actions: PropTypes.object\n  };\n\n  async componentDidUpdate(prevProps) {\n    const { actions, user } = this.props;\n    const { notificationSettings } = user;\n\n    if (\n      !get(prevProps, 'user.notificationSettings.desktop.all') &&\n      get(notificationSettings, 'desktop.all')\n    ) {\n      // TODO fallback for when notifications were previously disabled\n      actions.enableDesktopNotifications();\n    }\n\n    if (\n      !get(prevProps, 'user.notificationSettings.mobile.all') &&\n      get(notificationSettings, 'mobile.all')\n    ) {\n      // TODO fallback for when notifications were previously disabled\n      actions.enableMobileNotifications(user);\n    }\n    return null;\n  }\n\n  render() {\n    const { user } = this.props;\n    if (!user) return null;\n    const { notificationSettings } = user;\n    if (!notificationSettings) return null;\n    return (\n      <Fragment>\n        {SECTIONS.map(section => (\n          <View key={section.label} mb={4} display=\"flex\" fdirection=\"column\">\n            <Header>{section.label}</Header>\n            {section.settings.map(el => (\n              <NotificationSet\n                key={el.field}\n                field={el.field}\n                label={el.label}\n                notifications={notificationSettings[el.field]}\n              />\n            ))}\n          </View>\n        ))}\n      </Fragment>\n    );\n  }\n}\n\nNotificationSet.propTypes = {\n  label: PropTypes.string,\n  notifications: PropTypes.object,\n  field: PropTypes.string\n};\n\nfunction NotificationSet({ label, notifications, field }) {\n  if (!notifications) return null;\n  const sortedNotifications = Object.keys(notifications).sort();\n  return (\n    <View>\n      {label && <SecondaryText mt={4}>{label}</SecondaryText>}\n      {notifications &&\n        sortedNotifications.map(k => (\n          <NotificationToggle\n            key={k}\n            label={k}\n            parent={field}\n            notification={notifications && notifications[k]}\n          />\n        ))}\n    </View>\n  );\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  enableReinitialize: true\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      enableDesktopNotifications,\n      enableMobileNotifications\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationSettings);\n"],"file":"toggle.container.js"}