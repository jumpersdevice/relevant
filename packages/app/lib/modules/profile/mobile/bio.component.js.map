{"version":3,"sources":["../../../../src/modules/profile/mobile/bio.component.js"],"names":["styles","Bio","props","context","state","editing","updateBio","bind","text","user","bio","oldBio","setState","actions","updateUser","success","editButton","bioEdit","bioText","scrollTo","isOwner","offset","paddingLeft","paddingTop","blue","CTA","active","flex","fontSize","flexDirection","alignItems","fontFamily","darkGrey","trim","e","nativeEvent","layout","y","break","marginHorizontal","Component","PropTypes","bool","object","func","localStyles","StyleSheet","create","lineHeight","paddingVertical","borderColor","marginBottom","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { globalStyles, blue } from 'app/styles/global';\nimport TextBody from 'modules/text/mobile/textBody.component';\nimport TextEdit from 'modules/text/mobile/textEdit.component';\n\nlet styles;\n\nclass Bio extends Component {\n  static propTypes = {\n    isOwner: PropTypes.bool,\n    user: PropTypes.object,\n    actions: PropTypes.object,\n    scrollTo: PropTypes.func\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      editing: false\n    };\n    this.updateBio = this.updateBio.bind(this);\n  }\n\n  async updateBio(text) {\n    const { user } = this.props;\n    const bio = text;\n    const oldBio = user.bio;\n    try {\n      user.bio = bio;\n      this.setState({ editing: false });\n      const success = await this.props.actions.updateUser({ ...user, bio });\n      if (success) {\n        this.bio = null;\n      } else {\n        this.bio = bio;\n        user.bio = oldBio;\n        this.setState({ editing: true });\n      }\n    } catch (err) {\n      this.bio = bio;\n      user.bio = oldBio;\n      this.setState({ editing: true });\n    }\n  }\n\n  render() {\n    const { user } = this.props;\n    let editButton;\n\n    const bioEdit = (\n      <TextEdit\n        style={[styles.bioText]}\n        text={this.bio || user.bio}\n        placeholder={\n          'Add your credentials - what are the topics you know most about and why'\n        }\n        toggleFunction={() => {\n          this.bio = null;\n          this.props.scrollTo(0);\n          this.setState({ editing: false });\n        }}\n        saveEditFunction={this.updateBio}\n      />\n    );\n\n    if (this.props.isOwner && !this.state.editing) {\n      editButton = (\n        <Text\n          onPress={() => {\n            this.props.scrollTo(this.offset);\n            this.setState({\n              editing: true\n            });\n          }}\n          style={{ paddingLeft: 10, paddingTop: 3 }}\n        >\n          <Icon name=\"ios-create\" size={22} color={blue} />\n        </Text>\n      );\n    }\n\n    const CTA = (\n      <Text\n        style={[styles.active, { flex: 1, fontSize: 12 }]}\n        onPress={() => this.setState({ editing: true })}\n      >\n        Add your credentials to build your relevance!\n      </Text>\n    );\n\n    let bio = (\n      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <TextBody\n          actions={this.props.actions}\n          style={[styles.bioText, { fontFamily: 'Georgia', flex: 1 }, styles.darkGrey]}\n        >\n          {user.bio}\n        </TextBody>\n        {editButton}\n      </View>\n    );\n\n    if (this.props.isOwner && (!user.bio || user.bio.trim() === '')) {\n      bio = (\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          {CTA}\n          {editButton}\n        </View>\n      );\n    }\n\n    return (\n      <View\n        onLayout={e => {\n          this.offset = e.nativeEvent.layout.y - 30;\n        }}\n      >\n        <View style={[styles.break, { marginHorizontal: 0 }]} />\n        <View style={[(user && user.bio) || this.props.isOwner ? styles.bio : null]}>\n          {this.state.editing ? bioEdit : bio}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst localStyles = StyleSheet.create({\n  bioText: {\n    fontSize: 30 / 2,\n    lineHeight: 42 / 2,\n    paddingTop: 5\n  },\n  bio: {\n    paddingVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderColor: 'grey',\n    marginBottom: 10\n  }\n});\n\nstyles = { ...globalStyles, ...localStyles };\n\nexport default Bio;\n"],"file":"bio.component.js"}