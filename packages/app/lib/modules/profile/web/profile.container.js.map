{"version":3,"sources":["../../../../src/modules/profile/web/profile.container.js"],"names":["pageSize","ProfileContainer","user","isOwner","l","id","props","match","params","actions","getUserPosts","getSelectedUser","grabUser","nextProps","screenSize","state","bio","_id","grabPosts","auth","usersState","handle","userId","handleToId","users","Component","PropTypes","object","isRequired","authProps","number","mapStateToProps","isAuthenticated","posts","investments","myPostInv","community","navigation","mapDispatchToProps","dispatch","UserActions","PostActions","hideModal","logoutAction","showModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as UserActions from 'modules/user/user.actions';\nimport * as PostActions from 'modules/post/post.actions';\nimport { logoutAction } from 'modules/auth/auth.actions';\nimport { authProps } from 'app/utils/propValidation';\nimport Profile from 'modules/profile/profile.component';\nimport UserPosts from 'modules/profile/web/userPosts.component';\nimport { Divider, View } from 'modules/styled/web';\nimport { showModal, hideModal } from 'modules/navigation/navigation.actions';\nimport Linkify from 'linkifyjs/react';\n\nconst pageSize = 10;\n\nclass ProfileContainer extends Component {\n  static propTypes = {\n    actions: PropTypes.object.isRequired,\n    match: PropTypes.object,\n    usersState: PropTypes.object.isRequired,\n    auth: authProps,\n    screenSize: PropTypes.number\n  };\n\n  state = {\n    user: {},\n    isOwner: false\n  };\n\n  static getDerivedStateFromProps(props) {\n    const { auth, match, usersState } = props;\n    const handle = match.params.id;\n    const userId = usersState.handleToId[handle];\n    const user = usersState.users[userId];\n    if (!user) return null;\n    const isOwner = auth.user && user._id === auth.user._id;\n    return { user, isOwner };\n  }\n\n  // Get user object based on userid param in route\n  grabUser() {\n    const { id } = this.props.match.params;\n    this.props.actions.getSelectedUser(id);\n  }\n\n  // Get array of posts based on userid param in route\n  grabPosts = l => {\n    const { id } = this.props.match.params;\n    this.props.actions.getUserPosts(l || 0, pageSize, id);\n  };\n\n  componentDidMount() {\n    this.grabUser();\n  }\n\n  componentDidUpdate(nextProps) {\n    const { id } = this.props.match.params;\n    if (id !== nextProps.match.params.id) {\n      this.grabUser();\n    }\n  }\n\n  render() {\n    const { screenSize } = this.props;\n    const { user } = this.state;\n    const bio = user.bio && <Linkify>{user.bio}</Linkify>;\n    return (\n      <View mb={20} fdirection=\"column\">\n        <Profile\n          key={this.state.user._id + 'profile'}\n          {...this.props}\n          {...this.state}\n          bio={bio}\n        />\n        <Divider m={[4, 0]} screenSize={screenSize} />\n        <UserPosts\n          key={this.state.user._id}\n          {...this.props}\n          {...this.state}\n          load={this.grabPosts}\n          pageSize={pageSize}\n        />\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  isAuthenticated: state.auth.isAuthenticated,\n  usersState: state.user,\n  posts: state.posts,\n  investments: state.investments,\n  myPostInv: state.investments.myPostInv,\n  community: state.community,\n  screenSize: state.navigation.screenSize\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dispatch,\n  actions: bindActionCreators(\n    {\n      ...UserActions,\n      ...PostActions,\n      hideModal,\n      logoutAction,\n      showModal\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer);\n"],"file":"profile.container.js"}