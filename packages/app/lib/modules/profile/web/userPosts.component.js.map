{"version":3,"sources":["../../../../src/modules/profile/web/userPosts.component.js"],"names":["UserPosts","props","state","postsToRender","isInfiniteLoading","load","bind","hasMore","page","length","pageSize","community","userId","match","params","id","postIds","posts","userPosts","map","post","repost","postUser","embeddedUser","_id","user","parentPost","parentId","postUrl","link","links","metaPost","p","Component","PropTypes","number","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport InfScroll from 'modules/listview/web/infScroll.component';\nimport PostComponent from 'modules/post/web/post.component';\nimport { View } from 'modules/styled/uni';\nimport { getPostUrl } from 'app/utils/post';\n\nclass UserPosts extends Component {\n  static propTypes = {\n    pageSize: PropTypes.number,\n    load: PropTypes.func,\n    match: PropTypes.object,\n    posts: PropTypes.object,\n    community: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      postsToRender: [],\n      isInfiniteLoading: false\n    };\n    this.load = this.load.bind(this);\n    this.hasMore = true;\n  }\n\n  load(page, length) {\n    this.hasMore = page * this.props.pageSize <= length;\n    if (this.hasMore) {\n      this.props.load(length);\n    }\n  }\n\n  render() {\n    const { community } = this.props;\n    const userId = this.props.match.params.id;\n    const postIds = this.props.posts.userPosts[userId] || [];\n\n    const posts = postIds.map(id => {\n      const post = this.props.posts.posts[id];\n      if (!post) return null;\n      const repost = post.repost ? this.props.posts.posts[post.repost.post] : null;\n      const postUser = {\n        ...post.embeddedUser,\n        _id: post.user\n      };\n\n      let parentPost;\n      const parentId = post.parentPost;\n      if (parentId) {\n        parentPost = this.props.posts.posts[parentId];\n      }\n      const postUrl = getPostUrl(community, post);\n\n      let link = this.props.posts.links[post.metaPost];\n      if (!link && parentPost) {\n        link = this.props.posts.links[parentPost.metaPost];\n      }\n\n      return (\n        <View shrink={1} key={id} fdirection=\"column\">\n          <PostComponent\n            {...this.props}\n            post={parentPost}\n            comment={post}\n            link={{ ...parentPost, ...link }} // TODO - metapost is a pain\n            repost={repost}\n            postUser={postUser}\n            community={community._id}\n            postUrl={postUrl}\n          />\n        </View>\n      );\n    });\n\n    const { length } = posts;\n    return (\n      <InfScroll\n        key=\"userPosts\"\n        data={postIds}\n        loadMore={p => this.load(p, length)}\n        hasMore={this.hasMore}\n      >\n        <View fdirection=\"column\" shrink={1}>\n          {posts}\n        </View>\n      </InfScroll>\n    );\n  }\n}\n\nexport default UserPosts;\n"],"file":"userPosts.component.js"}