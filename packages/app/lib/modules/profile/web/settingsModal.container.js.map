{"version":3,"sources":["../../../../src/modules/profile/web/settingsModal.container.js"],"names":["SettingsModalContainer","propTypes","close","PropTypes","func","dispatch","user","state","auth","submit","vals","allVals","image","preview","fileName","s3","toS3Advanced","url","resp","browserAlerts","alert","ethLogin"],"mappings":"+cAAA,oDACA,6DACA,qCACA,uCACA,6CACA,gFACA,2CACA,4EACA,wEACA,qC,y5BAEAA,sBAAsB,CAACC,SAAvB,CAAmC,CACjCC,KAAK,CAAEC,mBAAUC,IADgB,CAAnC,CAIe,QAASJ,CAAAA,sBAAT,MAA2C,IAATE,CAAAA,KAAS,MAATA,KAAS,CACxD,GAAMG,CAAAA,QAAQ,CAAG,6BAAjB,CACA,GAAMC,CAAAA,IAAI,CAAG,4BAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,IAAf,EAAjB,CAAb,CAEA,GAAMG,CAAAA,MAAM,+EAAG,iBAAMC,IAAN,0JAELC,OAFK,kBAEUD,IAFV,OAGPC,OAAO,CAACC,KAAR,EAAiBD,OAAO,CAACC,KAAR,CAAcC,OAA/B,EAA0CF,OAAO,CAACC,KAAR,CAAcE,QAHjD,gDAIWC,WAAGC,YAAH,CAClBL,OAAO,CAACC,KAAR,CAAcC,OADI,CAElBF,OAAO,CAACC,KAAR,CAAcE,QAFI,CAJX,QAIHF,KAJG,eAQTD,OAAO,CAACC,KAAR,CAAgBA,KAAK,CAACK,GAAtB,CARS,6BAUQZ,CAAAA,QAAQ,CAAC,qBAAWM,OAAX,CAAD,CAVhB,QAULO,IAVK,eAWX,GAAIA,IAAJ,CAAU,CACRhB,KAAK,GACN,CAbU,iFAeXiB,qBAAcC,KAAd,cAfW,qEAAH,kBAANX,CAAAA,MAAM,6CAAZ,CAmBA,MACE,8BAAC,SAAD,iEACE,6BAAC,sBAAD,EACE,aAAa,CAAEH,IADjB,CAEE,kBAAkB,CAAE,IAFtB,CAGE,QAAQ,CAAEG,MAHZ,gEADF,CAME,6BAAC,WAAD,oFANF,CAOE,6BAAC,SAAD,EAAM,CAAC,CAAE,KAAT,CAAgB,UAAU,CAAE,KAA5B,CAAmC,KAAK,CAAC,QAAzC,gEACE,6BAAC,cAAD,EAAU,IAAI,CAAC,UAAf,CAA0B,IAAI,CAAE,0BAAhC,gEADF,CAEGH,IAAI,CAACe,QAAL,CACC,6BAAC,SAAD,wFACqB,6BAAC,eAAD,EAAY,OAAO,CAAEf,IAAI,CAACe,QAA1B,iEADrB,CADD,CAKC,6BAAC,SAAD,kFAPJ,CAPF,CAiBE,6BAAC,eAAD,iEAjBF,CADF,CAqBD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { s3 } from 'app/utils';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateUser } from 'modules/auth/auth.actions';\nimport SettingsModalComponent from 'modules/profile/web/settingsModal.component';\nimport { browserAlerts } from 'app/utils/alert';\nimport ToggleContainer from 'modules/profile/settings/toggle.container';\nimport BoxLogin from 'modules/auth/web/login.3box';\nimport { Header, View, Text, EthAddress } from 'modules/styled/uni';\n\nSettingsModalContainer.propTypes = {\n  close: PropTypes.func\n};\n\nexport default function SettingsModalContainer({ close }) {\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.auth.user);\n\n  const submit = async vals => {\n    try {\n      const allVals = { ...vals };\n      if (allVals.image && allVals.image.preview && allVals.image.fileName) {\n        const image = await s3.toS3Advanced(\n          allVals.image.preview,\n          allVals.image.fileName\n        );\n        allVals.image = image.url;\n      }\n      const resp = await dispatch(updateUser(allVals));\n      if (resp) {\n        close();\n      }\n    } catch (err) {\n      browserAlerts.alert(err);\n    }\n  };\n\n  return (\n    <View>\n      <SettingsModalComponent\n        initialValues={user}\n        enableReinitialize={true}\n        onSubmit={submit}\n      />\n      <Header>Connect Accounts</Header>\n      <View m={'3 0'} fdirection={'row'} align=\"center\">\n        <BoxLogin type=\"metamask\" text={'Connect Ethereum Address'} />\n        {user.ethLogin ? (\n          <Text>\n            Connected address: <EthAddress address={user.ethLogin} />\n          </Text>\n        ) : (\n          <Text>Not connected</Text>\n        )}\n      </View>\n      <ToggleContainer />\n    </View>\n  );\n}\n"],"file":"settingsModal.container.js"}