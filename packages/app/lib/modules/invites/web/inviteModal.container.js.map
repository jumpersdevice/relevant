{"version":3,"sources":["../../../../src/modules/invites/web/inviteModal.container.js"],"names":["InviteModalContainer","community","props","auth","actions","getInviteCount","invite","alert","data","url","postInviteGeneration","handleShare","Component","propTypes","PropTypes","object","close","func","mapStateToProps","state","count","admin","invites","inviteList","initialValues","invitedByString","mapDispatchToProps","dispatch","createInvite","getInvites"],"mappings":"+yBAAA,qDACA,6DACA,uDACA,gDACA,4BACA,uCACA,6EACA,2CACA,yC,o0BAEMA,CAAAA,oB,oWACgB,IACVC,CAAAA,SADU,CACI,KAAKC,KAAL,CAAWC,IADf,CACVF,SADU,CAElB,GAAIA,SAAJ,CAAe,KAAKC,KAAL,CAAWE,OAAX,CAAmBC,cAAnB,GAChB,C,kEAEoBC,M,CAAQ,CAC3B,GAAIA,MAAJ,CAAY,CACV,mBAAQC,KAAR,CAAc,2BAAd,CAA2C,SAA3C,EACD,CACF,C,gDAEWC,I,CAAM,CAChB,0BAAgBA,IAAI,CAACC,GAArB,EACD,C,uCAEQ,CACP,MACE,8BAAC,oBAAD,0BACM,KAAKP,KADX,EAEE,oBAAoB,CAAE,KAAKQ,oBAF7B,CAGE,OAAO,CAAE,KAAKC,WAHhB,iEADF,CAOD,C,kCAxBgCC,gB,EA2BnCZ,oBAAoB,CAACa,SAArB,CAAiC,CAC/BT,OAAO,CAAEU,mBAAUC,MADY,CAE/BC,KAAK,CAAEF,mBAAUG,IAFc,CAG/Bd,IAAI,CAAEW,mBAAUC,MAHe,CAAjC,CAMA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChChB,IAAI,CAAE,iBAAIgB,KAAJ,CAAW,MAAX,CAAmB,EAAnB,CAD0B,CAEhClB,SAAS,CAAE,iBAAIkB,KAAJ,CAAW,WAAX,CAAwB,EAAxB,CAFqB,CAGhCC,KAAK,CAAED,KAAK,CAACE,KAAN,CAAYD,KAHa,CAIhCE,OAAO,CAAEH,KAAK,CAACE,KAAN,CAAYC,OAJW,CAKhCC,UAAU,CAAEJ,KAAK,CAACE,KAAN,CAAYE,UALQ,CAMhCC,aAAa,CAAE,CACbC,eAAe,CAAE,iBAAIN,KAAJ,CAAW,gBAAX,CAA6B,EAA7B,CADJ,CANiB,CAAL,EAA7B,CAWA,GAAMO,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCvB,OAAO,CAAE,8BACP,CACEwB,YAAY,CAAZA,mBADF,CAEEvB,cAAc,CAAdA,qBAFF,CAGEwB,UAAU,CAAVA,iBAHF,CADO,CAMPF,QANO,CAD6B,CAAL,EAAnC,C,aAWe,wBAAQT,eAAR,CAAyBQ,kBAAzB,EAA6C1B,oBAA7C,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { createInvite, getInviteCount, getInvites } from 'modules/admin/admin.actions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport InviteModalComponent from 'modules/invites/inviteModal.component';\nimport { Alert } from 'app/utils/alert';\nimport { copyToClipBoard } from 'utils/text';\n\nclass InviteModalContainer extends Component {\n  componentDidMount() {\n    const { community } = this.props.auth;\n    if (community) this.props.actions.getInviteCount();\n  }\n\n  postInviteGeneration(invite) {\n    if (invite) {\n      Alert().alert('Generated new invite link', 'success');\n    }\n  }\n\n  handleShare(data) {\n    copyToClipBoard(data.url);\n  }\n\n  render() {\n    return (\n      <InviteModalComponent\n        {...this.props}\n        postInviteGeneration={this.postInviteGeneration}\n        onShare={this.handleShare}\n      />\n    );\n  }\n}\n\nInviteModalContainer.propTypes = {\n  actions: PropTypes.object,\n  close: PropTypes.func,\n  auth: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  auth: get(state, 'auth', {}),\n  community: get(state, 'community', {}),\n  count: state.admin.count,\n  invites: state.admin.invites,\n  inviteList: state.admin.inviteList,\n  initialValues: {\n    invitedByString: get(state, 'auth.user.name', '')\n  }\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      createInvite,\n      getInviteCount,\n      getInvites\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InviteModalContainer);\n"],"file":"inviteModal.container.js"}