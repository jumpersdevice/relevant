{"version":3,"sources":["../../../../src/modules/invites/mobile/invites.container.js"],"names":["Invites","shareOptions","Share","open","then","res","catch","err","community","props","auth","actions","getInviteCount","backgroundColor","colors","white","handleShare","Component","PropTypes","object","objec","mapStateToProps","state","users","user","invites","admin","inviteList","count","mapDispatchToProps","dispatch","postActions","navigationActions","createInvite","getInvites"],"mappings":"y/BAAA,qDACA,6DACA,uCACA,4BACA,gDACA,8FACA,4EACA,4EACA,6EACA,qCACA,uFACA,uCACA,gD,4mDAEMA,CAAAA,O,4ZAWU,SAAAC,YAAY,CAAI,CAC5BC,0BAAMC,IAAN,CAAWF,YAAX,EAEGG,IAFH,CAEQ,SAAAC,GAAG,CAAI,CAEZ,CAJH,EAMGC,KANH,CAMS,SAAAC,GAAG,CAAI,CAEb,CARH,EASD,C,gHAfoB,IACXC,CAAAA,SADW,CACG,KAAKC,KAAL,CAAWC,IADd,CACXF,SADW,CAEnB,GAAIA,SAAJ,CAAe,KAAKC,KAAL,CAAWE,OAAX,CAAmBC,cAAnB,GAChB,C,uCAcQ,CACP,MACE,8BAAC,0BAAD,EAAY,KAAK,CAAE,CAAEC,eAAe,CAAEC,eAAOC,KAA1B,CAAnB,gEACE,6BAAC,SAAD,EAAM,CAAC,CAAE,CAAT,gEACE,6BAAC,yBAAD,kEADF,CAEE,6BAAC,oBAAD,wBAAiB,MAAM,KAAvB,EAA4B,KAAKN,KAAjC,EAAwC,OAAO,CAAE,KAAKO,WAAtD,kEAFF,CADF,CADF,CAQD,C,qBAhCmBC,gB,+BAAhBjB,O,aACe,CACjBW,OAAO,CAAEO,mBAAUC,MADF,CAEjBT,IAAI,CAAEQ,mBAAUE,KAFC,C,EAkCrB,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLC,KAAK,CAAED,KAAK,CAACE,IAAN,CAAWD,KADb,CAELb,IAAI,CAAEY,KAAK,CAACZ,IAFP,CAGLe,OAAO,CAAEH,KAAK,CAACI,KAAN,CAAYD,OAHhB,CAILE,UAAU,CAAEL,KAAK,CAACI,KAAN,CAAYC,UAJnB,CAKLnB,SAAS,CAAEc,KAAK,CAACd,SALZ,CAMLoB,KAAK,CAAEN,KAAK,CAACI,KAAN,CAAYE,KANd,CAAP,CAQD,CAED,QAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACLnB,OAAO,CAAE,2EAEFoB,WAFE,EAGFC,iBAHE,MAILC,YAAY,CAAZA,mBAJK,CAKLrB,cAAc,CAAdA,qBALK,CAMLsB,UAAU,CAAVA,iBANK,GAQPJ,QARO,CADJ,CAAP,CAYD,C,aAEc,wBAAQT,eAAR,CAAyBQ,kBAAzB,EAA6C7B,OAA7C,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { createInvite, getInviteCount, getInvites } from 'modules/admin/admin.actions';\nimport * as navigationActions from 'modules/navigation/navigation.actions';\nimport * as postActions from 'modules/post/post.actions';\nimport Share from 'react-native-share';\nimport InviteComponent from 'modules/invites/inviteModal.component';\nimport { View } from 'modules/styled/uni';\nimport InviteModalTitle from 'modules/invites/inviteModalTitle.component';\nimport { colors } from 'app/styles';\nimport { ScrollView } from 'react-native';\n\nclass Invites extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    auth: PropTypes.objec\n  };\n\n  componentWillMount() {\n    const { community } = this.props.auth;\n    if (community) this.props.actions.getInviteCount();\n  }\n\n  handleShare = shareOptions => {\n    Share.open(shareOptions)\n      // eslint-disable-next-line\n      .then(res => {\n        // console.log(res);\n      })\n      // eslint-disable-next-line\n      .catch(err => {\n        // err && console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <ScrollView style={{ backgroundColor: colors.white }}>\n        <View m={2}>\n          <InviteModalTitle />\n          <InviteComponent mobile {...this.props} onShare={this.handleShare} />\n        </View>\n      </ScrollView>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.user.users,\n    auth: state.auth,\n    invites: state.admin.invites,\n    inviteList: state.admin.inviteList,\n    community: state.community,\n    count: state.admin.count\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        ...postActions,\n        ...navigationActions,\n        createInvite,\n        getInviteCount,\n        getInvites\n      },\n      dispatch\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Invites);\n"],"file":"invites.container.js"}