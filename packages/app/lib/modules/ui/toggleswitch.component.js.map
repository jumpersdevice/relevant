{"version":3,"sources":["../../../src/modules/ui/toggleswitch.component.js"],"names":["ToggleSwitch","Animated","Value","calculateDimensions","props","size","justifyContent","width","dimensions","borderRadius","padding","backgroundColor","isOn","onColor","offColor","alignItems","marginRight","marginLeft","left","position","transform","translateX","offsetX","circleWidth","height","circleHeight","toValue","timing","delay","duration","start","onToggle","createToggleSwitchStyle","createInsideCircleStyle","React","Component","PropTypes","bool","isRequired","string","func","labelStyle","icon"],"mappings":"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","sourcesContent":["/**\n * Taken from this:\n * toggle-switch-react-native\n * Toggle Switch component for react native, it works on iOS and Android\n * https://github.com/aminebenkeroum/toggle-switch-react-native\n * Email:amine.benkeroum@gmail.com\n * Blog: https://medium.com/@aminebenkeroum/\n * @benkeroumamine\n */\n\nimport React from 'react';\nimport { TouchableOpacity, Animated } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport default class ToggleSwitch extends React.Component {\n  static calculateDimensions(size) {\n    switch (size) {\n      case 'custom':\n        return {\n          width: 32,\n          padding: 10,\n          circleWidth: 14,\n          circleHeight: 14,\n          translateX: 22\n        };\n      case 'custom2':\n        return {\n          width: 32,\n          padding: 10,\n          circleWidth: 14,\n          circleHeight: 14,\n          translateX: 18\n        };\n      case 'small':\n        return {\n          width: 50,\n          padding: 10,\n          circleWidth: 15,\n          circleHeight: 15,\n          translateX: 22\n        };\n      case 'large':\n        return {\n          width: 100,\n          padding: 20,\n          circleWidth: 30,\n          circleHeight: 30,\n          translateX: 38\n        };\n      default:\n        return {\n          width: 60,\n          padding: 12,\n          circleWidth: 18,\n          circleHeight: 18,\n          translateX: 26\n        };\n    }\n  }\n\n  static propTypes = {\n    isOn: PropTypes.bool.isRequired,\n    onColor: PropTypes.string.isRequired,\n    offColor: PropTypes.string.isRequired,\n    size: PropTypes.string,\n    onToggle: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    isOn: false,\n    onColor: '#634fc9',\n    offColor: '#ecf0f1',\n    size: 'medium',\n    labelStyle: {},\n    icon: null\n  };\n\n  offsetX = new Animated.Value(0);\n\n  dimensions = ToggleSwitch.calculateDimensions(this.props.size);\n\n  createToggleSwitchStyle = () => ({\n    justifyContent: 'center',\n    width: this.dimensions.width,\n    borderRadius: 20,\n    padding: this.dimensions.padding,\n    backgroundColor: this.props.isOn ? this.props.onColor : this.props.offColor\n  });\n\n  createInsideCircleStyle = () => ({\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 4,\n    marginLeft: 4,\n    left: 0,\n    position: 'absolute',\n    backgroundColor: 'white',\n    transform: [{ translateX: this.offsetX }],\n    width: this.dimensions.circleWidth,\n    height: this.dimensions.circleHeight,\n    borderRadius: this.dimensions.circleWidth / 2\n  });\n\n  render() {\n    const toValue = this.props.isOn\n      ? this.dimensions.width - this.dimensions.translateX\n      : 0;\n\n    Animated.timing(this.offsetX, {\n      toValue,\n      delay: 0,\n      duration: 300\n    }).start();\n\n    const { isOn, onToggle } = this.props;\n    return (\n      <TouchableOpacity\n        style={this.createToggleSwitchStyle()}\n        activeOpacity={0.8}\n        onPress={() => {\n          onToggle(!isOn);\n        }}\n      >\n        <Animated.View style={this.createInsideCircleStyle()} />\n      </TouchableOpacity>\n    );\n  }\n}\n"],"file":"toggleswitch.component.js"}