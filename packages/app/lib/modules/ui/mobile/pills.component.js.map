{"version":3,"sources":["../../../../src/modules/ui/mobile/pills.component.js"],"names":["styles","Pills","props","scrollToPage","currentIndex","slides","length","indicator","map","slide","i","active","indicatorItem","backgroundColor","blue","pillContainer","StyleSheet","create","flexDirection","alignItems","justifyContent","marginLeft","marginRight","height","width","borderRadius","propTypes","PropTypes","array","number","func"],"mappings":"+KAAA,oDACA,gDACA,6DACA,8C,sGAEA,GAAIA,CAAAA,MAAJ,CAEe,QAASC,CAAAA,KAAT,CAAeC,KAAf,CAAsB,IAC3BC,CAAAA,YAD2B,CACYD,KADZ,CAC3BC,YAD2B,CACbC,YADa,CACYF,KADZ,CACbE,YADa,CACCC,MADD,CACYH,KADZ,CACCG,MADD,CAEnC,GAAI,CAACA,MAAD,EAAW,CAACA,MAAM,CAACC,MAAvB,CAA+B,MAAO,KAAP,CAE/B,GAAMC,CAAAA,SAAS,CAAGL,KAAK,CAACG,MAAN,CAAaG,GAAb,CAAiB,SAACC,KAAD,CAAQC,CAAR,CAAc,CAC/C,GAAIC,CAAAA,MAAM,CAAG,KAAb,CACA,GAAIP,YAAY,GAAKM,CAArB,CAAwBC,MAAM,CAAG,IAAT,CAExB,MACE,8BAAC,wCAAD,EAA0B,OAAO,CAAE,yBAAMR,CAAAA,YAAY,CAACO,CAAD,CAAlB,EAAnC,CAA0D,GAAG,CAAEA,CAA/D,gEACE,6BAAC,oBAAD,EACE,KAAK,CAAE,CAACV,MAAM,CAACY,aAAR,CAAuB,CAAEC,eAAe,CAAEF,MAAM,CAAGG,YAAH,CAAU,WAAnC,CAAvB,CADT,gEADF,CADF,CAOD,CAXiB,CAAlB,CAYA,MAAO,8BAAC,oBAAD,EAAM,KAAK,CAAEd,MAAM,CAACe,aAApB,iEAAoCR,SAApC,CAAP,CACD,CAEDP,MAAM,CAAGgB,2BAAWC,MAAX,CAAkB,CACzBF,aAAa,CAAE,CACbG,aAAa,CAAE,KADF,CAEbC,UAAU,CAAE,QAFC,CAGbC,cAAc,CAAE,QAHH,CADU,CAMzBR,aAAa,CAAE,CACbS,UAAU,CAAE,CADC,CAEbC,WAAW,CAAE,CAFA,CAGbC,MAAM,CAAE,CAHK,CAIbC,KAAK,CAAE,CAJM,CAKbC,YAAY,CAAE,CALD,CANU,CAAlB,CAAT,CAeAxB,KAAK,CAACyB,SAAN,CAAkB,CAChBrB,MAAM,CAAEsB,mBAAUC,KADF,CAEhBxB,YAAY,CAAEuB,mBAAUE,MAFR,CAGhB1B,YAAY,CAAEwB,mBAAUG,IAHR,CAAlB","sourcesContent":["import React from 'react';\nimport { TouchableWithoutFeedback, StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { blue } from 'app/styles/global';\n\nlet styles;\n\nexport default function Pills(props) {\n  const { scrollToPage, currentIndex, slides } = props;\n  if (!slides || !slides.length) return null;\n\n  const indicator = props.slides.map((slide, i) => {\n    let active = false;\n    if (currentIndex === i) active = true;\n\n    return (\n      <TouchableWithoutFeedback onPress={() => scrollToPage(i)} key={i}>\n        <View\n          style={[styles.indicatorItem, { backgroundColor: active ? blue : 'lightgrey' }]}\n        />\n      </TouchableWithoutFeedback>\n    );\n  });\n  return <View style={styles.pillContainer}>{indicator}</View>;\n}\n\nstyles = StyleSheet.create({\n  pillContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  indicatorItem: {\n    marginLeft: 3,\n    marginRight: 3,\n    height: 5,\n    width: 5,\n    borderRadius: 5\n  }\n});\n\nPills.propTypes = {\n  slides: PropTypes.array,\n  currentIndex: PropTypes.number,\n  scrollToPage: PropTypes.func\n};\n"],"file":"pills.component.js"}