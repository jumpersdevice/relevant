{"version":3,"sources":["../../../src/modules/getTokens/getTokensModal.component.js"],"names":["GetTokensModal","propTypes","actions","PropTypes","object","auth","mobile","bool","twitterButton","node","user","sendConfirmation","showModal","push","confirmed","colors","secondaryText","EMAIL_REWARD","white","twitterId","TWITTER_REWARD","blue","UniswapButton","dispatch","uniIcon","require","exchageUrl","uniswap"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Image,\n  HoverButton,\n  BodyText,\n  Divider,\n  LinkFont,\n  SecondaryText,\n  ViewButton,\n  Box\n} from 'modules/styled/uni';\nimport CoinStat from 'modules/stats/coinStat.component';\nimport {\n  TWITTER_REWARD,\n  EMAIL_REWARD\n  // REDDIT_REWARD\n} from '@r3l/common';\nimport ULink from 'modules/navigation/ULink.component';\nimport { colors } from 'app/styles';\nimport { exchangeLink, tokenEnabled } from 'modules/wallet/price.context';\nimport { goToUrl } from 'modules/navigation/navigation.actions';\n\nGetTokensModal.propTypes = {\n  actions: PropTypes.object,\n  auth: PropTypes.object,\n  mobile: PropTypes.bool,\n  twitterButton: PropTypes.node\n  // redditButton: PropTypes.node\n};\n\nfunction GetTokensModal({\n  auth: { user },\n  actions: { sendConfirmation, showModal, push },\n  mobile,\n  twitterButton\n  // redditButton\n}) {\n  return (\n    <Box>\n      {tokenEnabled() && (\n        <Fragment>\n          <UniswapButton />\n          <Divider mt={4} />\n        </Fragment>\n      )}\n      {!user.confirmed && (\n        <View fdirection=\"column\" justify={'space-between'}>\n          <View fdirection=\"row\" align=\"center\" mt={4}>\n            <BodyText c={colors.secondaryText} inline={1}>\n              Confirm your e-mail to earn{' '}\n              <CoinStat inline={1} size={2} amount={EMAIL_REWARD} />{' '}\n              {EMAIL_REWARD > 1 ? 'coins' : 'coin'}\n              <SecondaryText>\n                *if you don't see a confirmation email in your inbox, please check your\n                spam folder\n              </SecondaryText>\n            </BodyText>\n          </View>\n          <ULink\n            to=\"#\"\n            onClick={sendConfirmation}\n            onPress={sendConfirmation}\n            external\n            mr={['auto', 0]}\n            mobile={mobile}\n            fel\n          >\n            <ViewButton w={[22, 'auto']} mt={3} mobile={mobile}>\n              <LinkFont c={colors.white}>Confirm E-mail</LinkFont>\n            </ViewButton>\n          </ULink>\n          <Divider mt={4} />\n        </View>\n      )}\n\n      {!user.twitterId && (\n        <Box>\n          <View fdirection=\"row\" align=\"center\" mt={4}>\n            <BodyText c={colors.secondaryText} inline={1}>\n              Connect your Relevant account with your Twitter account to earn{' '}\n              <CoinStat\n                inline={1}\n                size={2}\n                amount={user.confirmed ? TWITTER_REWARD : TWITTER_REWARD + EMAIL_REWARD}\n              />{' '}\n              {TWITTER_REWARD > 1 ? 'coins' : 'coin'}\n            </BodyText>\n          </View>\n          {twitterButton}\n          <Divider mt={4} />\n        </Box>\n      )}\n      {/*\n      {!user.redditId && redditButton && (\n        <View>\n          <View mt={4} fdirection=\"row\" align=\"center\">\n            <BodyText c={colors.secondaryText} inline={1}>\n              Connect your Relevant account with your Reddit account to earn{' '}\n              <CoinStat inline={1} size={2} amount={REDDIT_REWARD} />{' '}\n              {REDDIT_REWARD > 1 ? 'coins' : 'coin'}\n            </BodyText>\n          </View>\n          {redditButton}\n          <Divider mt={4} />\n        </View>\n      )}\n      */}\n      <View mt={4}>\n        <ULink\n          to=\"#\"\n          onClick={() => showModal('invite')}\n          onPress={() => push('invites')}\n          external\n          mr=\"auto\"\n          mobile={mobile}\n        >\n          <LinkFont c={colors.blue}>Invite Friends</LinkFont>\n        </ULink>\n      </View>\n    </Box>\n  );\n}\n\nfunction UniswapButton() {\n  const dispatch = useDispatch();\n  const uniIcon = require('public/img/uniswap.png');\n  const exchageUrl = exchangeLink();\n\n  return (\n    <ULink inline={1} to={exchageUrl} external mr={['auto', 0]} mt={3} target=\"_blank\">\n      <HoverButton\n        w={[22, 'auto']}\n        bg={colors.uniswap}\n        m={0}\n        c={colors.white}\n        onPress={() => dispatch(goToUrl(exchageUrl))}\n      >\n        <View fdirection=\"row\" justify={'center'} align=\"center\">\n          <Image resizeMode=\"contain\" source={uniIcon} w={3} h={3} mr={1.5} />\n          <LinkFont c={colors.white}>Uniswap Exchange</LinkFont>\n        </View>\n      </HoverButton>\n    </ULink>\n  );\n}\n\nexport default GetTokensModal;\n"],"file":"getTokensModal.component.js"}