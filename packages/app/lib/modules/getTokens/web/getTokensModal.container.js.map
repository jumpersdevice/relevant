{"version":3,"sources":["../../../../src/modules/getTokens/web/getTokensModal.container.js"],"names":["twitterIcon","require","redditIcon","TwitterButton","colors","twitterBlue","white","RedditButton","redditColor","GetTokensModalContainer","props","Component","propTypes","actions","PropTypes","object","close","func","auth","mapStateToProps","state","mapDispatchToProps","dispatch","sendConfirmation","showModal"],"mappings":"+yBAAA,qDACA,6DACA,uDACA,6CACA,+DACA,4BACA,uCACA,mFACA,uCACA,qCACA,+E,s0BAEA,GAAMA,CAAAA,WAAW,CAAGC,OAAO,kDAA3B,CACA,GAAMC,CAAAA,UAAU,CAAGD,OAAO,2CAA1B,CAEA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SACpB,8BAAC,cAAD,EAAO,EAAE,CAAC,eAAV,CAA0B,QAAQ,KAAlC,CAAmC,EAAE,CAAE,CAAC,MAAD,CAAS,CAAT,CAAvC,CAAoD,EAAE,CAAE,CAAxD,gEACE,6BAAC,gBAAD,EACE,CAAC,CAAE,CAAC,EAAD,CAAK,MAAL,CADL,CAEE,EAAE,CAAEC,eAAOC,WAFb,CAGE,CAAC,CAAE,CAHL,CAIE,CAAC,CAAED,eAAOE,KAJZ,CAKE,UAAU,CAAC,KALb,gEAOE,6BAAC,UAAD,EAAO,UAAU,CAAC,SAAlB,CAA4B,MAAM,CAAEN,WAApC,CAAiD,CAAC,CAAE,CAApD,CAAuD,CAAC,CAAE,CAA1D,CAA6D,EAAE,CAAE,GAAjE,gEAPF,CAQE,6BAAC,aAAD,EAAU,CAAC,CAAEI,eAAOE,KAApB,kFARF,CADF,CADoB,EAAtB,CAeA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SACnB,8BAAC,cAAD,EAAO,EAAE,CAAC,cAAV,CAAyB,QAAQ,KAAjC,CAAkC,EAAE,CAAE,CAAC,MAAD,CAAS,CAAT,CAAtC,CAAmD,EAAE,CAAE,CAAvD,gEACE,6BAAC,gBAAD,EACE,CAAC,CAAE,CAAC,EAAD,CAAK,MAAL,CADL,CAEE,EAAE,CAAEH,eAAOI,WAFb,CAGE,CAAC,CAAE,CAHL,CAIE,CAAC,CAAEJ,eAAOE,KAJZ,CAKE,UAAU,CAAC,KALb,gEAOE,6BAAC,UAAD,EAAO,UAAU,CAAC,SAAlB,CAA4B,MAAM,CAAEJ,UAApC,CAAgD,CAAC,CAAE,CAAnD,CAAsD,CAAC,CAAE,CAAzD,CAA4D,EAAE,CAAE,GAAhE,gEAPF,CAQE,6BAAC,aAAD,EAAU,CAAC,CAAEE,eAAOE,KAApB,iFARF,CADF,CADmB,EAArB,C,GAeMG,CAAAA,uB,6VACK,CACP,MACE,8BAAC,uBAAD,0BACM,KAAKC,KADX,EAEE,aAAa,CAAE,6BAAC,aAAD,kEAFjB,CAGE,YAAY,CAAE,6BAAC,YAAD,kEAHhB,iEADF,CAOD,C,qCATmCC,gB,EAYtCF,uBAAuB,CAACG,SAAxB,CAAoC,CAClCC,OAAO,CAAEC,mBAAUC,MADe,CAElCC,KAAK,CAAEF,mBAAUG,IAFiB,CAGlCC,IAAI,CAAEJ,mBAAUC,MAHkB,CAApC,CAMA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCF,IAAI,CAAE,iBAAIE,KAAJ,CAAW,MAAX,CAAmB,EAAnB,GAA0B,EADA,CAAL,EAA7B,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCT,OAAO,CAAE,8BACP,CAGEU,gBAAgB,CAAhBA,sBAHF,CAIEC,SAAS,CAATA,qBAJF,CADO,CAOPF,QAPO,CAD6B,CAAL,EAAnC,C,aAYe,wBAAQH,eAAR,CAAyBE,kBAAzB,EAA6CZ,uBAA7C,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { sendConfirmation } from 'modules/auth/auth.actions';\nimport { showModal } from 'modules/navigation/navigation.actions';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport GetTokensModal from 'modules/getTokens/getTokensModal.component';\nimport { colors } from 'app/styles';\nimport { Image, HoverButton, LinkFont } from 'modules/styled/uni';\nimport ULink from 'modules/navigation/ULink.component';\n\nconst twitterIcon = require('public/img/icons/twitter_white.png');\nconst redditIcon = require('public/img/icons/reddit.png');\n\nconst TwitterButton = () => (\n  <ULink to=\"/auth/twitter\" external mr={['auto', 0]} mt={3}>\n    <HoverButton\n      w={[22, 'auto']}\n      bg={colors.twitterBlue}\n      m={0}\n      c={colors.white}\n      fdirection=\"row\"\n    >\n      <Image resizeMode=\"contain\" source={twitterIcon} w={3} h={3} mr={1.5} />\n      <LinkFont c={colors.white}>Connect Twitter</LinkFont>\n    </HoverButton>\n  </ULink>\n);\n\nconst RedditButton = () => (\n  <ULink to=\"/auth/reddit\" external mr={['auto', 0]} mt={3}>\n    <HoverButton\n      w={[22, 'auto']}\n      bg={colors.redditColor}\n      m={0}\n      c={colors.white}\n      fdirection=\"row\"\n    >\n      <Image resizeMode=\"contain\" source={redditIcon} w={3} h={3} mr={1.5} />\n      <LinkFont c={colors.white}>Connect Reddit</LinkFont>\n    </HoverButton>\n  </ULink>\n);\n\nclass GetTokensModalContainer extends Component {\n  render() {\n    return (\n      <GetTokensModal\n        {...this.props}\n        twitterButton={<TwitterButton />}\n        redditButton={<RedditButton />}\n      />\n    );\n  }\n}\n\nGetTokensModalContainer.propTypes = {\n  actions: PropTypes.object,\n  close: PropTypes.func,\n  auth: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  auth: get(state, 'auth', {}) || {}\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      // createInvite,\n      // getInviteCount\n      sendConfirmation,\n      showModal\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GetTokensModalContainer);\n"],"file":"getTokensModal.container.js"}