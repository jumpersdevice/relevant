{"version":3,"sources":["../../../../src/modules/text/web/textAreaWithMention.js"],"names":["UserSelect","View","colors","lightGrey","TextAreaWithMention","propTypes","textArea","PropTypes","shape","current","any","value","string","autoFocus","bool","leftPadding","number","onChange","func","onBlur","setFocused","withPreview","children","node","placeholder","minheight","oneOfType","dispatch","innerTextAreaRef","mode","setMode","showWrite","showPreview","black","display","flex","flexDirection","flexWrap","listStyleType","padding","c","setTimeout","p","getCaretPosition","setCaretPosition","length","e","type","component","TextareaAutosize","ref","dataProvider","token","users","map","u","user","name","handle","Item","output","item","lightBorder","body","entity","object"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { searchUser } from 'modules/user/user.actions';\nimport { View, StyledTextareaAutocomplete } from 'modules/styled/web';\nimport { CTALink } from 'modules/styled/uni';\nimport styled from 'styled-components';\nimport { colors } from 'app/styles';\nimport AvatarBox from 'modules/user/avatarbox.component';\nimport CommentBody from 'modules/comment/commentBody';\nimport sizing from 'styles/sizing';\n\nconst UserSelect = styled(View)`\n  cursor: pointer;\n  &:hover {\n    background: ${colors.lightGrey};\n  }\n`;\n\nTextAreaWithMention.propTypes = {\n  textArea: PropTypes.shape({ current: PropTypes.any }),\n  value: PropTypes.string,\n  autoFocus: PropTypes.bool,\n  leftPadding: PropTypes.number,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  setFocused: PropTypes.func,\n  withPreview: PropTypes.bool,\n  children: PropTypes.node,\n  placeholder: PropTypes.string,\n  minheight: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default function TextAreaWithMention({\n  textArea,\n  value,\n  autoFocus,\n  leftPadding,\n  onChange,\n  onBlur,\n  setFocused,\n  children,\n  withPreview,\n  placeholder,\n  minheight\n}) {\n  const dispatch = useDispatch();\n  const innerTextAreaRef = useRef();\n  const [mode, setMode] = useState('write');\n\n  const showWrite = mode === 'write';\n  const showPreview = mode === 'preview';\n\n  useEffect(() => {\n    return () => dispatch(searchUser());\n  }, []); // eslint-disable-line\n\n  return (\n    <View fdirection=\"column\">\n      {withPreview && (\n        <View mb={0.5}>\n          <View p={'.5 1'} mr={1}>\n            <CTALink\n              c={colors.black}\n              td={showWrite ? 'underline' : ''}\n              onPress={() => setMode('write')}\n              p={1}\n            >\n              Write\n            </CTALink>\n          </View>\n          <View p={'.5 1'}>\n            <CTALink\n              c={colors.black}\n              td={showPreview ? 'underline' : ''}\n              onPress={() => setMode('preview')}\n              p={1}\n            >\n              Preview Markdown\n            </CTALink>\n          </View>\n        </View>\n      )}\n      {showWrite && (\n        <View\n          fdirection=\"row\"\n          justify-=\"space-between\"\n          align=\"flex-start\"\n          m=\"0 0 2.5 0\"\n          flex={1}\n          position={'relative'}\n        >\n          <StyledTextareaAutocomplete\n            containerStyle={{\n              display: 'flex',\n              flex: 'auto',\n              flexDirection: 'column'\n            }}\n            listStyle={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              listStyleType: 'none',\n              padding: 0\n            }}\n            style={{ flex: 'auto' }}\n            innerRef={c => (textArea.current = c)}\n            ref={c => (innerTextAreaRef.current = c)}\n            rows={2}\n            placeholder={placeholder}\n            value={value}\n            // onKeyDown={handleKeydown}\n            onChange={onChange}\n            m={0}\n            flex={1}\n            autoFocus={!!autoFocus}\n            pl={leftPadding}\n            minheight={minheight}\n            onFocus={() => {\n              setFocused && setFocused(true);\n              setTimeout(() => {\n                const p = innerTextAreaRef.current.getCaretPosition();\n                if (p === 0) innerTextAreaRef.current.setCaretPosition(value.length);\n              });\n            }}\n            // bug with autocomplete\n            // https://github.com/webscopeio/react-textarea-autocomplete/issues/178\n            onBlur={e => {\n              e.type === 'blur' && onBlur && onBlur(e);\n              e.type === 'blur' && setFocused && setFocused(false);\n            }}\n            textAreaComponent={{ component: TextareaAutosize, ref: 'inputRef' }}\n            loadingComponent={() => <span>Loading</span>}\n            trigger={{\n              '@': {\n                dataProvider: async token => {\n                  const users = await dispatch(searchUser(token));\n                  return users.map(u => ({\n                    user: u,\n                    name: u.handle\n                  }));\n                },\n                component: Item,\n                output: item => '@' + item.name\n              }\n            }}\n          />\n          {children}\n        </View>\n      )}\n      {showPreview && (\n        <View\n          minheight={minheight || sizing(8)}\n          p={'1 2 0 2'}\n          mb={2}\n          fjustify={'center'}\n          border={colors.lightBorder}\n        >\n          <CommentBody noLink comment={{ body: value }} noPostLink />\n        </View>\n      )}\n    </View>\n  );\n}\n\nItem.propTypes = {\n  entity: { user: PropTypes.object }\n};\n\nfunction Item({ entity }) {\n  return (\n    <UserSelect p={'1 2 1 1'}>\n      <AvatarBox user={entity.user} noLink />\n    </UserSelect>\n  );\n}\n"],"file":"textAreaWithMention.js"}