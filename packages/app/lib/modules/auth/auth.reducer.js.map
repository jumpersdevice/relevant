{"version":3,"sources":["../../../src/modules/auth/auth.reducer.js"],"names":["initialState","token","isAuthenticated","isAuthenticating","statusText","user","deviceToken","preUser","confirmed","stats","nextUpdate","Date","chart","relChart","twitter","currentInvite","loading","community","invitecode","auth","state","action","type","types","SET_INVITE_CODE","payload","SET_LOADING","SET_TWITTER","SET_STATS","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","SET_SELECTED_USER_DATA","_id","SET_USER","UPDATE_USER","UPDATE_AUTH_USER","id","relevance","pagerank","undefined","SET_CONTACTS","contacts","LOGOUT_USER","UPDATE_INVITE"],"mappings":"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","sourcesContent":["import * as types from 'core/actionTypes';\n\nconst initialState = {\n  token: null,\n  isAuthenticated: false,\n  isAuthenticating: false,\n  statusText: null,\n  user: null,\n  deviceToken: null,\n  preUser: null,\n  confirmed: false,\n  stats: null,\n  nextUpdate: new Date(),\n  chart: [],\n  relChart: [],\n  twitter: null,\n  currentInvite: null,\n  loading: false,\n  community: null,\n  invitecode: null\n};\n\nexport default function auth(state = initialState, action) {\n  switch (action.type) {\n    case types.SET_INVITE_CODE: {\n      return {\n        ...state,\n        invitecode: action.payload\n      };\n    }\n\n    case types.SET_LOADING: {\n      return {\n        ...state,\n        loading: action.payload\n      };\n    }\n\n    case types.SET_TWITTER: {\n      return {\n        ...state,\n        twitter: action.payload\n      };\n    }\n\n    case types.SET_STATS: {\n      return {\n        ...state,\n        stats: action.payload.stats || state.stats,\n        nextUpdate: action.payload.nextUpdate || state.nextUpdate,\n        chart: action.payload.chart || state.chart,\n        relChart: action.payload.relChart || state.relChart\n      };\n    }\n\n    case types.LOGIN_USER_REQUEST:\n      return { ...state, isAuthenticating: true, statusText: null };\n\n    case 'SET_PRE_USER':\n      return {\n        ...state,\n        preUser: action.payload\n      };\n\n    case types.LOGIN_USER_SUCCESS:\n      return {\n        ...state,\n        isAuthenticating: false,\n        isAuthenticated: true,\n        token: action.payload.token,\n        statusText: 'You have been successfully logged in.'\n      };\n\n    case types.LOGIN_USER_FAILURE:\n      return { ...state, isAuthenticating: false, isAuthenticated: false, user: null };\n\n    case 'SET_AUTH_STATUS_TEXT':\n      return {\n        ...state,\n        statusText: action.payload\n      };\n\n    case types.SET_SELECTED_USER_DATA: {\n      if (!state.user || state.user._id !== action.payload._id) return state;\n      return {\n        ...state,\n        user: action.payload\n      };\n    }\n\n    case types.SET_USER:\n      return {\n        ...state,\n        isAuthenticating: false,\n        isAuthenticated: !!action.payload || false,\n        user: action.payload,\n        preUser: null\n      };\n\n    case types.UPDATE_USER:\n    case types.UPDATE_AUTH_USER: {\n      const id = action.payload._id;\n      if (state.user && id !== state.user._id) return state;\n      let { relevance } = action.payload;\n      if ((!relevance || relevance.pagerank === undefined) && state.user) {\n        relevance = state.user.relevance;\n      }\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload,\n          relevance\n        }\n      };\n    }\n\n    case 'SET_DEVICE_TOKEN':\n      return {\n        ...state,\n        deviceToken: action.payload\n      };\n\n    case types.SET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload\n      };\n\n    case types.LOGOUT_USER: {\n      return { ...initialState, community: state.community };\n    }\n\n    case types.UPDATE_INVITE: {\n      if (action.payload === null) {\n        return {\n          ...state,\n          currentInvite: null\n        };\n      }\n      return {\n        ...state,\n        currentInvite: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n"],"file":"auth.reducer.js"}