{"version":3,"sources":["../../../src/modules/auth/3box.hooks.fancy.js"],"names":["idWallet","box","Alert","alert","use3BoxProfile","address","metamask","setProfile","init3Box","mnemonic","getMnemonic","seed","utils","HDNode","mnemonicToSeed","IdentityWallet","authenticate","linkAddress","get3idProvider","provider","Box","openBox","openSpace","relevantSpace","public","all","relevantProfile","console","log","defaultProfile","private","get","email","signClaim","signature","DID","boxProfile","verified","set","emailObj","email_address","message","useUpdateProfile","accounts","getAddress","profile","Promise","syncDone","imageObject","image","contentUrl","name","getSpace","user","expiresIn","local","getItem","wallet","Wallet","createRandom","setItem"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport { useEffect, useCallback } from 'react';\nimport { useWeb3 } from 'modules/contract/contract.hooks';\nimport Box from '3box';\nimport { alert } from 'utils';\nimport { utils, Wallet } from 'ethers';\nimport IdentityWallet from 'identity-wallet';\nimport { local } from 'utils/storage';\nimport { getProfile, getVerifiedAccounts } from '3box/lib/api';\n\nlet idWallet;\nlet box;\n\nconst Alert = alert.Alert();\nexport function use3BoxProfile({ address, metamask, setProfile }) {\n  return useEffect(() => {\n    if (!address || !metamask) return;\n    const init3Box = async () => {\n      try {\n        const mnemonic = getMnemonic();\n        const seed = utils.HDNode.mnemonicToSeed(mnemonic);\n        idWallet = new IdentityWallet(async () => true, { seed });\n        await idWallet.authenticate(['relevant', '3Box']);\n        await idWallet.linkAddress(address, metamask);\n        const provider = await idWallet.get3idProvider();\n\n        box = await Box.openBox(address, provider);\n\n        const relevantSpace = await box.openSpace('relevant');\n        const relevantProfile = await relevantSpace.public.all();\n\n        console.log('relevantProfile', relevantProfile);\n        // await relevantSpace.syncDone;\n        // await Promise.all([box.syncDone]);\n\n        if (relevantProfile.defaultProfile === 'relevant') {\n          const email = await relevantSpace.private.get('email');\n          // console.log('got email', email);\n          const { signature, DID } = await signClaim(idWallet, address);\n          return setProfile([null, { ...relevantProfile, email, signature, DID }]);\n        }\n\n        const boxProfile = await getProfile(address);\n        const verified = await getVerifiedAccounts(boxProfile);\n        console.log(boxProfile);\n        console.log(verified);\n\n        await relevantSpace.public.set('defaultProfile', '3box');\n\n        const emailObj = await box.verified.email();\n        // console.log('emailObj', emailObj);\n        const email = emailObj && emailObj.email_address;\n\n        // TODO - this is actually insecure! we need a separate signature for ETH address!\n\n        const { signature, DID } = await signClaim(idWallet, address);\n\n        return setProfile([null, { ...boxProfile, signature, DID, email }]);\n      } catch (err) {\n        // console.log(err);\n        Alert.alert(err.message);\n        return setProfile([err.message]);\n      }\n    };\n    init3Box();\n  }, [address]); // eslint-disable-line\n}\n\nexport function useUpdateProfile() {\n  const [accounts] = useWeb3();\n  // const metamask = useMetamask();\n  const address = accounts && utils.getAddress(accounts[0]);\n  return useCallback(\n    async profile => {\n      if (!box) return;\n      const relevantSpace = await box.openSpace('relevant');\n      // doesn't fire\n      // await relevantSpace.syncDone;\n      await Promise.all([box.syncDone]);\n      const imageObject = profile.image && [\n        {\n          '@type': 'ImageObject',\n          contentUrl: profile.image\n        }\n      ];\n      // for some reason this doesn't work?\n      await relevantSpace.public.set('defaultProfile', 'relevant');\n      await relevantSpace.public.set('image', imageObject);\n      await relevantSpace.public.set('name', profile.name);\n      await relevantSpace.private.set('email', profile.email);\n      await box.syncDone;\n      const relevantProfile = await Box.getSpace(address, 'relevant');\n      const email = await relevantSpace.private.get('email');\n      const all = await relevantSpace.public.all();\n      console.log('all', all);\n      console.log('relevantProfile', relevantProfile, email);\n    },\n    [address]\n  );\n}\n\nasync function signClaim(user, address) {\n  const { DID } = user;\n  const expiresIn = 10 * 60;\n  const signature = await user.signClaim({ DID, address }, { expiresIn });\n  return { signature, address, DID };\n}\n\nfunction getMnemonic() {\n  const mnemonic = local.getItem('3box_mnemonic');\n  if (mnemonic) return mnemonic;\n  const wallet = Wallet.createRandom();\n  local.setItem('3box_mnemonic', wallet.mnemonic);\n  return wallet.mnemonic;\n}\n"],"file":"3box.hooks.fancy.js"}