{"version":3,"sources":["../../../../src/modules/auth/web/handle.component.js"],"names":["SetHandle","props","user","FORM_FIELDS","name","component","ReduxFormField","type","label","placeholder","validate","required","validCharacters","email","isHidden","values","actions","updateHandle","updateFormFields","prevProps","handleSubmit","submit","map","field","Component","PropTypes","object","checkUser","func","nameError","string","mapStateToProps","state","initialValues","auth","handle","mapDispatchToProps","dispatch","loginUser","showModal","createUser","form","asyncValidate","signupAsyncValidation","asyncChangeFields"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport {\n  loginUser,\n  checkUser,\n  createUser,\n  updateHandle\n} from 'modules/auth/auth.actions';\nimport { withRouter } from 'react-router-dom';\nimport { showModal } from 'modules/navigation/navigation.actions';\nimport ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport {\n  required,\n  email,\n  validCharacters,\n  signupAsyncValidation\n} from 'modules/form/validators';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, BodyText, Button, View } from 'modules/styled/web';\n\nclass SetHandle extends Component {\n  static propTypes = {\n    user: PropTypes.object,\n    actions: PropTypes.object,\n    checkUser: PropTypes.func,\n    nameError: PropTypes.string,\n    handleSubmit: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.updateFormFields();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.user !== this.props.user) {\n      this.updateFormFields();\n    }\n  }\n\n  updateFormFields = () => {\n    const { user } = this.props;\n    this.FORM_FIELDS = [\n      {\n        name: 'handle',\n        component: ReduxFormField,\n        type: 'text',\n        label: 'Handle',\n        placeholder: 'Choose your handle:',\n        validate: [required, validCharacters]\n      },\n      {\n        name: 'email',\n        component: ReduxFormField,\n        type: 'email',\n        label: 'Email',\n        placeholder: 'Email (optional for email reset and notifications)',\n        validate: [email],\n        isHidden: user && user.email\n      }\n    ];\n  };\n\n  submit = values => {\n    const { actions } = this.props;\n    actions.updateHandle(values);\n  };\n\n  render() {\n    const { handleSubmit, user } = this.props;\n    if (!user) {\n      return (\n        <View>\n          <BodyText> You must be logged in to change your handle.</BodyText>\n        </View>\n      );\n    }\n    return (\n      <Form fdirection=\"column\" onSubmit={handleSubmit(this.submit)}>\n        {this.FORM_FIELDS.map(field =>\n          field.isHidden ? null : <Field {...field} key={field.name} />\n        )}\n        <View justify=\"flex-start\">\n          <Button type=\"submit\" ml=\"auto\" mt={4}>\n            Finish\n          </Button>\n        </View>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const initialValues = {};\n  const { user } = state.auth;\n  if (user && user.handle) {\n    initialValues.handle = user.handle;\n  }\n  return {\n    user,\n    auth: state.auth,\n    initialValues\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      loginUser,\n      showModal,\n      checkUser,\n      createUser,\n      updateHandle\n    },\n    dispatch\n  )\n});\n\nconst validate = () => {};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    reduxForm({\n      form: 'setHandle',\n      validate,\n      asyncValidate: signupAsyncValidation,\n      asyncChangeFields: ['handle', 'email']\n    })(SetHandle)\n  )\n);\n"],"file":"handle.component.js"}