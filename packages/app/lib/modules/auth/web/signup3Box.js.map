{"version":3,"sources":["../../../../src/modules/auth/web/signup3Box.js"],"names":["Signup3Box","propTypes","close","PropTypes","func","profileEror","profile","setProfile","accounts","metamask","address","utils","getAddress","initialValues","username","name","image","getImg","email","signature","additionalFields","ethLogin","msg","length","url","contentUrl"],"mappings":"qWAAA,qDACA,6DACA,uDACA,qCACA,kCACA,gDACA,8BACA,+D,gGAEAA,UAAU,CAACC,SAAX,CAAuB,CACrBC,KAAK,CAAEC,mBAAUC,IADI,CAAvB,CAIe,QAASJ,CAAAA,UAAT,MAA+B,IAATE,CAAAA,KAAS,MAATA,KAAS,eACC,oBAAS,EAAT,CADD,8GACpCG,WADoC,gBACvBC,OADuB,gBACbC,UADa,2BAEzB,uBAFyB,iDAErCC,QAFqC,aAG5C,GAAMC,CAAAA,QAAQ,CAAG,2BAAjB,CACA,GAAMC,CAAAA,OAAO,CAAGF,QAAQ,EAAIG,cAAMC,UAAN,CAAiBJ,QAAQ,CAAC,CAAD,CAAzB,CAA5B,CAEA,qBAAU,UAAM,CACd,GAAIE,OAAJ,CAAaH,UAAU,CAAC,EAAD,CAAV,CACd,CAFD,CAEG,CAACG,OAAD,CAFH,EAIA,wBAAe,CAAEA,OAAO,CAAPA,OAAF,CAAWD,QAAQ,CAARA,QAAX,CAAqBF,UAAU,CAAVA,UAArB,CAAf,EAEA,GAAMM,CAAAA,aAAa,CAAGP,OAAO,CACzB,CACEQ,QAAQ,CAAER,OAAO,CAACS,IADpB,CAEEC,KAAK,CAAEC,MAAM,CAACX,OAAD,CAFf,CAGEY,KAAK,CAAEZ,OAAO,CAACY,KAHjB,CADyB,CAMzB,EANJ,CAQA,GAAMC,CAAAA,SAAS,CAAGb,OAAO,EAAIA,OAAO,CAACa,SAArC,CAEA,GAAMC,CAAAA,gBAAgB,CAAGd,OAAO,EAAI,CAClCa,SAAS,CAATA,SADkC,CAElCE,QAAQ,CAAEX,OAFwB,CAGlCY,GAAG,CAAEhB,OAAO,CAACgB,GAHqB,CAApC,CAMA,MACE,8BAAC,eAAD,iEACE,6BAAC,WAAD,EAAQ,EAAE,CAAE,CAAZ,oFADF,CAEGZ,OAAO,EAAI,CAACJ,OAAZ,EACC,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,gEACE,6BAAC,iCAAD,kEADF,CAEE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,4FAFF,CAHJ,CAQGI,OAAO,EAAI,CAACJ,OAAZ,EAAuB,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,6EAAuBI,OAAvB,CAR1B,CASG,CAACS,SAAD,EACC,6BAAC,eAAD,EAAY,EAAE,CAAE,CAAhB,gEACE,6BAAC,SAAD,yHADF,CAVJ,CAcGd,WAAW,EACV,6BAAC,aAAD,EAAU,EAAE,CAAE,CAAd,gEACE,6BAAC,SAAD,kEAAOA,WAAP,CADF,CAfJ,CAmBE,6BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,gEAnBF,CAoBGK,OAAO,EAAIJ,OAAX,EAAsBa,SAAtB,EACC,6BAAC,gBAAD,EACE,aAAa,CAAEN,aADjB,CAEE,gBAAgB,CAAEO,gBAFpB,CAGE,KAAK,CAAElB,KAHT,gEArBJ,CADF,CA8BD,CAED,QAASe,CAAAA,MAAT,CAAgBX,OAAhB,CAAyB,CACvB,GAAI,CAACA,OAAO,CAACU,KAAT,EAAkB,CAACV,OAAO,CAACU,KAAR,CAAcO,MAArC,CAA6C,MAAO,KAAP,CAC7C,GAAMC,CAAAA,GAAG,CAAGlB,OAAO,CAACU,KAAR,CAAc,CAAd,EAAiBS,UAA7B,CACA,GAAI,CAACD,GAAL,CAAU,MAAO,KAAP,CACV,MAAOA,CAAAA,GAAG,CAAC,GAAD,CAAH,CAAW,+BAAiCA,GAAG,CAAC,GAAD,CAA/C,CAAuDA,GAA9D,CACD","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useWeb3, useMetamask } from 'modules/contract/contract.hooks';\nimport { Header, View, Text, ErrorBox, WarningBox } from 'modules/styled/uni';\nimport { use3BoxProfile } from 'modules/auth/3box.hooks';\nimport { ActivityIndicator } from 'react-native-web';\nimport { utils } from 'ethers';\nimport ProfileForm from './profile.form';\n\nSignup3Box.propTypes = {\n  close: PropTypes.func\n};\n\nexport default function Signup3Box({ close }) {\n  const [[profileEror, profile], setProfile] = useState([]);\n  const [accounts] = useWeb3();\n  const metamask = useMetamask();\n  const address = accounts && utils.getAddress(accounts[0]);\n\n  useEffect(() => {\n    if (address) setProfile([]);\n  }, [address]);\n\n  use3BoxProfile({ address, metamask, setProfile });\n\n  const initialValues = profile\n    ? {\n        username: profile.name,\n        image: getImg(profile),\n        email: profile.email\n      }\n    : {};\n\n  const signature = profile && profile.signature;\n\n  const additionalFields = profile && {\n    signature,\n    ethLogin: address,\n    msg: profile.msg\n  };\n\n  return (\n    <Fragment>\n      <Header mb={2}>Sign up with 3box</Header>\n      {address && !profile && (\n        <View mt={4}>\n          <ActivityIndicator />\n          <Text mt={2}>Fetching 3box profile...</Text>\n        </View>\n      )}\n      {address && !profile && <Text mt={1}>Address: {address}</Text>}\n      {!signature && (\n        <WarningBox mt={4}>\n          <Text>Please sign the authorization message using Metamask</Text>\n        </WarningBox>\n      )}\n      {profileEror && (\n        <ErrorBox mt={4}>\n          <Text>{profileEror}</Text>\n        </ErrorBox>\n      )}\n      <View mt={2} />\n      {address && profile && signature && (\n        <ProfileForm\n          initialValues={initialValues}\n          additionalFields={additionalFields}\n          close={close}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nfunction getImg(profile) {\n  if (!profile.image || !profile.image.length) return null;\n  const url = profile.image[0].contentUrl;\n  if (!url) return null;\n  return url['/'] ? 'https://ipfs.infura.io/ipfs/' + url['/'] : url;\n}\n"],"file":"signup3Box.js"}