{"version":3,"sources":["../../../../src/modules/auth/web/confirmEmail.component.js"],"names":["EmailConfirm","props","setState","sending","actions","sendConfirmation","then","state","email","initialize","auth","text","resend","confirmed","user","Component","PropTypes","object","func","mapStateToProps","mapDispatchToProps","dispatch","form","enableReinitialize"],"mappings":"y6BAAA,qDACA,6DACA,qCACA,qCACA,qCACA,4BACA,uCACA,qC,k0BAEMA,CAAAA,Y,4GAOJ,sBAAYC,KAAZ,CAAmB,2DACjB,uBAAMA,KAAN,EADiB,2FAkBA,UAAM,CACvB,MAAKC,QAAL,CAAc,CAAEC,OAAO,CAAE,IAAX,CAAd,EACA,MAAKF,KAAL,CAAWG,OAAX,CAAmBC,gBAAnB,GAAsCC,IAAtC,CAA2C,UAAM,CAC/C,MAAKJ,QAAL,CAAc,CAAEC,OAAO,CAAE,KAAX,CAAd,EACD,CAFD,EAGD,CAvBkB,EAEjB,MAAKI,KAAL,CAAa,CACXJ,OAAO,CAAE,KADE,CAEXK,KAAK,CAAE,IAFI,CAAb,CAFiB,aAMlB,C,qGAQoB,CACnB,KAAKP,KAAL,CAAWQ,UAAX,CAAsB,KAAKF,KAA3B,EACD,C,uCASQ,IACCG,CAAAA,IADD,CACU,KAAKT,KADf,CACCS,IADD,CAEP,GAAIC,CAAAA,IAAI,CAAG,+BAAX,CACA,GAAIC,CAAAA,MAAJ,CACA,GAAI,CAACF,IAAI,CAACG,SAAV,CAAqB,CACnBF,IAAI,CAAG,6BAAP,CACA,GAAID,IAAI,CAACI,IAAT,CAAe,CACbF,MAAM,CACJ,6BAAC,SAAD,EAAM,OAAO,CAAE,CAAC,UAAD,CAAa,SAAb,CAAf,CAAwC,UAAU,CAAC,QAAnD,iEACE,6BAAC,WAAD,EACE,EAAE,CAAE,CAAC,MAAD,CAAS,CAAT,CADN,CAEE,EAAE,CAAE,CAFN,CAGE,OAAO,CAAE,KAAKP,gBAHhB,CAIE,CAAC,CAAE,CAJL,CAKE,QAAQ,CAAE,KAAKE,KAAL,CAAWJ,OALvB,kGADF,CAUE,6BAAC,kBAAD,EAAe,EAAE,CAAE,CAAnB,0IAVF,CADF,CAgBD,CACF,CAED,MACE,8BAAC,SAAD,EAAM,UAAU,CAAC,QAAjB,gEACE,6BAAC,aAAD,iEAAWQ,IAAX,CADF,CAEGC,MAFH,CADF,CAMD,C,4EAjD+BX,K,CAAO,CACrC,GAAMO,CAAAA,KAAK,CAAGP,KAAK,CAACS,IAAN,CAAWI,IAAX,CAAkBb,KAAK,CAACS,IAAN,CAAWI,IAAX,CAAgBN,KAAlC,CAA0C,IAAxD,CACA,GAAMK,CAAAA,SAAS,CAAGZ,KAAK,CAACS,IAAN,CAAWI,IAAX,CAAkBb,KAAK,CAACS,IAAN,CAAWI,IAAX,CAAgBD,SAAlC,CAA8C,IAAhE,CACA,MAAO,CAAEL,KAAK,CAALA,KAAF,CAASK,SAAS,CAATA,SAAT,CAAP,CACD,C,0BAnBwBE,gB,+BAArBf,Y,aACe,CACjBI,OAAO,CAAEY,mBAAUC,MADF,CAEjBP,IAAI,CAAEM,mBAAUC,MAFC,CAGjBR,UAAU,CAAEO,mBAAUE,IAHL,C,EAkErB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAZ,KAAK,QAAK,CAChCG,IAAI,CAAEH,KAAK,CAACG,IADoB,CAAL,EAA7B,CAIA,GAAMU,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCjB,OAAO,CAAE,8BACP,CACEC,gBAAgB,CAAhBA,sBADF,CADO,CAIPgB,QAJO,CAD6B,CAAL,EAAnC,C,aASe,yBAAU,CACvBC,IAAI,CAAE,cADiB,CAEvBC,kBAAkB,CAAE,IAFG,CAAV,EAGZ,wBAAQJ,eAAR,CAAyBC,kBAAzB,EAA6CpB,YAA7C,CAHY,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, BodyText, SecondaryText } from 'modules/styled/uni';\nimport { reduxForm } from 'redux-form';\nimport { Button } from 'modules/styled/web';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { sendConfirmation } from 'modules/auth/auth.actions';\n\nclass EmailConfirm extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    auth: PropTypes.object,\n    initialize: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sending: false,\n      email: null\n    };\n  }\n\n  static getDerivedStateFromProps(props) {\n    const email = props.auth.user ? props.auth.user.email : null;\n    const confirmed = props.auth.user ? props.auth.user.confirmed : null;\n    return { email, confirmed };\n  }\n\n  componentDidUpdate() {\n    this.props.initialize(this.state);\n  }\n\n  sendConfirmation = () => {\n    this.setState({ sending: true });\n    this.props.actions.sendConfirmation().then(() => {\n      this.setState({ sending: false });\n    });\n  };\n\n  render() {\n    const { auth } = this.props;\n    let text = 'Your email has been confirmed';\n    let resend;\n    if (!auth.confirmed) {\n      text = 'Your email is not confirmed';\n      if (auth.user) {\n        resend = (\n          <View justify={['flex-end', 'stretch']} fdirection=\"column\">\n            <Button\n              mr={['auto', 0]}\n              mt={4}\n              onClick={this.sendConfirmation}\n              p={0}\n              disabled={this.state.sending}\n            >\n              Resend email confirmation code\n            </Button>\n            <SecondaryText mt={2}>\n              If you don't see an email in your inbox, please check your spam folder\n            </SecondaryText>\n          </View>\n        );\n      }\n    }\n\n    return (\n      <View fdirection=\"column\">\n        <BodyText>{text}</BodyText>\n        {resend}\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      sendConfirmation\n    },\n    dispatch\n  )\n});\n\nexport default reduxForm({\n  form: 'emailConfirm',\n  enableReinitialize: true\n})(connect(mapStateToProps, mapDispatchToProps)(EmailConfirm));\n"],"file":"confirmEmail.component.js"}