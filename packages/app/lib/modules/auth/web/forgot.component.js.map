{"version":3,"sources":["../../../../src/modules/auth/web/forgot.component.js"],"names":["Forgot","props","data","actions","location","params","queryString","parse","search","modal","queryParams","stringify","forgotPassword","username","res","email","setState","sentEmailTo","state","FORM_FIELDS","name","component","ReduxFormField","type","placeholder","validate","required","handleSubmit","colors","black","sendEmail","map","field","index","showModal","Component","PropTypes","object","func","initialValues","mapStateToProps","user","auth","enableReinitialize","mapDispatchToProps","dispatch","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyText, LinkFont } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { showModal } from 'modules/navigation/navigation.actions';\nimport { forgotPassword } from 'modules/auth/auth.actions';\nimport ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport { required } from 'modules/form/validators';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, View, Button } from 'modules/styled/web';\nimport queryString from 'query-string';\n\nclass Forgot extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    location: PropTypes.object,\n    handleSubmit: PropTypes.func,\n    initialValues: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      sentEmailTo: null\n    };\n\n    this.FORM_FIELDS = [\n      {\n        name: 'username',\n        component: ReduxFormField,\n        type: 'text',\n        placeholder: 'Username or Email',\n        validate: [required]\n      }\n    ];\n  }\n\n  sendEmail = async data => {\n    const { actions, location } = this.props;\n    const params = queryString.parse(location.search);\n    delete params.modal;\n    const queryParams = '?' + queryString.stringify(params);\n    const res = await actions.forgotPassword(data.username, queryParams);\n    if (res && res.email) {\n      this.setState({ sentEmailTo: res.email });\n    }\n  };\n\n  render() {\n    const { handleSubmit } = this.props;\n    if (this.state.sentEmailTo) {\n      return (\n        <BodyText c={colors.black}>\n          We have set an email to {this.state.sentEmailTo} with a link to reset your\n          password.{'\\n'}\n          If you don't see a password reset email in your inbox, please check your spam\n          folder.\n        </BodyText>\n      );\n    }\n    return (\n      <View fdirection=\"column\">\n        <Form fdirection=\"column\" onSubmit={handleSubmit(this.sendEmail)}>\n          {this.FORM_FIELDS.map((field, index) => (\n            <Field {...field} key={index} />\n          ))}\n          <View display=\"flex\" fdirection=\"row\" align=\"center\" mt={7} justify=\"flex-end\">\n            <LinkFont shrink={1}>\n              Back to <a onClick={() => this.props.actions.showModal('login')}>Sign in</a>\n            </LinkFont>\n            <Button type=\"submit\" m={0} ml={2}>\n              Send Recovery Email\n            </Button>\n          </View>\n        </Form>\n      </View>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  auth: state.auth,\n  initialValues: {},\n  enableReinitialize: true\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      showModal,\n      forgotPassword\n    },\n    dispatch\n  )\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    reduxForm({\n      form: 'forgotPassword'\n    })(Forgot)\n  )\n);\n"],"file":"forgot.component.js"}