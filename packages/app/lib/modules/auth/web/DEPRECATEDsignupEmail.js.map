{"version":3,"sources":["../../../../src/modules/auth/web/DEPRECATEDsignupEmail.js"],"names":["SignupEmail","props","data","invitecode","auth","actions","user","name","username","email","password","image","createUser","signedUp","close","vals","allVals","preview","fileName","s3","toS3Advanced","url","signup","browserAlerts","alert","submit","bind","handleSubmit","FORM_FIELDS","component","ReduxFormImageUpload","imageComponent","type","label","validate","ReduxFormField","autocomplete","required","validCharacters","map","field","Component","location","PropTypes","object","func","initialValues","mapStateToProps","state","mapDispatchToProps","dispatch","loginUser","showModal","checkUser","values","errors","confirmPassword","form","asyncValidate","signupAsyncValidation","asyncChangeFields"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormImage, LinkFont } from 'modules/styled/uni';\nimport ULink from 'modules/navigation/ULink.component';\nimport { s3 } from 'app/utils';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { loginUser, checkUser, createUser } from 'modules/auth/auth.actions';\nimport { browserAlerts } from 'app/utils/alert';\nimport { withRouter } from 'react-router-dom';\nimport { showModal } from 'modules/navigation/navigation.actions';\nimport ReduxFormField from 'modules/styled/form/reduxformfield.component';\nimport ReduxFormImageUpload from 'modules/styled/form/reduxformimageupload.component';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, View, Button } from 'modules/styled/web';\nimport {\n  required,\n  email,\n  validCharacters,\n  signupAsyncValidation\n} from 'modules/form/validators';\n\nclass SignupEmail extends Component {\n  static propTypes = {\n    location: PropTypes.object,\n    actions: PropTypes.object,\n    user: PropTypes.object,\n    auth: PropTypes.object,\n    handleSubmit: PropTypes.func,\n    initialValues: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.submit = this.submit.bind(this);\n    this.signup = this.signup.bind(this);\n  }\n\n  signup = async data => {\n    const { invitecode } = this.props.auth;\n    const { actions } = this.props;\n    try {\n      // TODO: Just use data object? This caused an error\n      const user = {\n        name: data.username,\n        email: data.email,\n        password: data.password,\n        image: data.image\n      };\n      const signedUp = await actions.createUser(user, invitecode);\n      if (signedUp) {\n        this.close();\n      }\n    } catch (err) {\n      // TODO error handling\n    }\n  };\n\n  submit = async vals => {\n    try {\n      const allVals = { ...vals };\n      if (allVals.image && allVals.image.preview && allVals.image.fileName) {\n        const image = await s3.toS3Advanced(\n          allVals.image.preview,\n          allVals.image.fileName\n        );\n        allVals.image = image.url;\n      }\n      this.signup(allVals);\n    } catch (err) {\n      browserAlerts.alert(err);\n    }\n  };\n\n  render() {\n    const { handleSubmit } = this.props;\n    const FORM_FIELDS = [\n      // Please note, this only works if the field is called 'image'\n      {\n        name: 'image',\n        component: ReduxFormImageUpload,\n        // placeholder: <AvatarFieldPlaceholder user={{}} />,\n        imageComponent: <FormImage />,\n        type: 'file-upload',\n        label: 'User Image',\n        validate: []\n      },\n      {\n        name: 'username',\n        component: ReduxFormField,\n        type: 'text',\n        label: 'Username',\n        autocomplete: 'username',\n        // TODO: TRIM USER VALUE?\n        validate: [required, validCharacters]\n      },\n      {\n        name: 'email',\n        type: 'email',\n        label: 'Email',\n        component: ReduxFormField,\n        autocomplete: 'username',\n        validate: [required, email]\n      },\n      {\n        name: 'password',\n        type: 'password',\n        label: 'Password',\n        autocomplete: 'new-password',\n        component: ReduxFormField,\n        validate: [required]\n      },\n      {\n        name: 'confirmPassword',\n        type: 'password',\n        autocomplete: 'new-password',\n        label: 'Confirm Password',\n        component: ReduxFormField,\n        validate: [required]\n      }\n    ];\n    return (\n      <Form fdirection=\"column\" onSubmit={handleSubmit(this.submit)}>\n        {FORM_FIELDS.map(field => (\n          <Field {...field} key={field.name} />\n        ))}\n        <View display=\"flex\" fdirection=\"row\" justify=\"flex-end\" mt={6} align=\"center\">\n          <LinkFont inline={1}>\n            By signing up, you agree to our{' '}\n            <ULink\n              to=\"//relevant.community/eula.html\"\n              external\n              target=\"_blank\"\n              inline={1}\n            >\n              Terms of Use\n            </ULink>\n          </LinkFont>\n          <Button type=\"submit\" ml={2.5}>\n            Sign Up\n          </Button>\n        </View>\n      </Form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  auth: state.auth\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      loginUser,\n      showModal,\n      checkUser,\n      createUser\n    },\n    dispatch\n  )\n});\n\nconst validate = values => {\n  const errors = {};\n  if (!values.password || !values.confirmPassword) {\n    return null;\n  }\n  if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  return errors;\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(\n    reduxForm({\n      form: 'signup',\n      validate,\n      asyncValidate: signupAsyncValidation,\n      asyncChangeFields: ['username', 'email']\n    })(SignupEmail)\n  )\n);\n"],"file":"DEPRECATEDsignupEmail.js"}