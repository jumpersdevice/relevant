{"version":3,"sources":["../../../../src/modules/auth/web/login.3box.js"],"names":["BoxLogin","propTypes","close","PropTypes","func","text","string","type","doLogin","logIn","Button","MetamaskButton","BoxButton","e","preventDefault","setTimeout","Web3Login","accounts","metamask","address","utils","getAddress"],"mappings":"mWAAA,qDACA,6DACA,kCACA,uDACA,8BACA,+C,gGAEAA,QAAQ,CAACC,SAAT,CAAqB,CACnBC,KAAK,CAAEC,mBAAUC,IADE,CAEnBC,IAAI,CAAEF,mBAAUG,MAFG,CAGnBC,IAAI,CAAEJ,mBAAUG,MAHG,CAArB,CAMe,QAASN,CAAAA,QAAT,MAAyC,IAArBE,CAAAA,KAAqB,MAArBA,KAAqB,CAAdG,IAAc,MAAdA,IAAc,CAARE,IAAQ,MAARA,IAAQ,eAC7B,oBAAS,KAAT,CAD6B,qDAC/CC,OAD+C,eACtCC,KADsC,eAEtD,GAAMC,CAAAA,MAAM,CAAGH,IAAI,GAAK,UAAT,CAAsBI,6BAAtB,CAAuCC,wBAAtD,CACA,MACE,8BAAC,eAAD,iEACGJ,OAAO,EAAI,6BAAC,SAAD,EAAW,KAAK,CAAEN,KAAlB,CAAyB,UAAU,CAAE,4BAAMO,CAAAA,KAAK,CAAC,KAAD,CAAX,EAArC,iEADd,CAEE,6BAAC,MAAD,EACE,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CADN,CAEE,EAAE,CAAE,CAAC,CAAD,CAAI,CAAJ,CAFN,CAGE,IAAI,CAAE,CAHR,CAIE,OAAO,CAAE,iBAAAI,CAAC,CAAI,CACZA,CAAC,CAACC,cAAF,GACAL,KAAK,CAAC,KAAD,CAAL,CACAM,UAAU,CAAC,iBAAMN,CAAAA,KAAK,CAAC,IAAD,CAAX,EAAD,CAAV,CACD,CARH,CASE,IAAI,CAAEJ,IAAI,EAAI,mBAThB,gEAFF,CADF,CAgBD,CAEDW,SAAS,CAACf,SAAV,CAAsB,CACpBC,KAAK,CAAEC,mBAAUC,IADG,CAAtB,CAIA,QAASY,CAAAA,SAAT,OAA8B,IAATd,CAAAA,KAAS,OAATA,KAAS,aACT,uBADS,iDACrBe,QADqB,aAE5B,GAAMC,CAAAA,QAAQ,CAAG,2BAAjB,CACA,GAAMC,CAAAA,OAAO,CAAGF,QAAQ,EAAIA,QAAQ,CAAC,CAAD,CAApB,EAA2BG,cAAMC,UAAN,CAAiBJ,QAAQ,CAAC,CAAD,CAAzB,CAA3C,CACA,GAAMR,CAAAA,KAAK,CAAG,yBAAgBP,KAAhB,CAAd,CAEA,qBAAU,UAAM,CACdgB,QAAQ,EAAIC,OAAZ,EAAuBV,KAAK,EAA5B,CACD,CAFD,CAEG,CAACS,QAAD,CAAWC,OAAX,CAFH,EAIA,MAAO,KAAP,CACD","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLoginWithBox } from 'modules/auth/3box.hooks';\nimport { useWeb3, useMetamask } from 'modules/contract/contract.hooks';\nimport { utils } from 'ethers';\nimport { BoxButton, MetamaskButton } from '../socialButtons';\n\nBoxLogin.propTypes = {\n  close: PropTypes.func,\n  text: PropTypes.string,\n  type: PropTypes.string\n};\n\nexport default function BoxLogin({ close, text, type }) {\n  const [doLogin, logIn] = useState(false);\n  const Button = type === 'metamask' ? MetamaskButton : BoxButton;\n  return (\n    <Fragment>\n      {doLogin && <Web3Login close={close} resetLogin={() => logIn(false)} />}\n      <Button\n        mr={[4, 0]}\n        mt={[0, 2]}\n        flex={1}\n        onPress={e => {\n          e.preventDefault();\n          logIn(false);\n          setTimeout(() => logIn(true));\n        }}\n        text={text || 'Sign In with 3Box'}\n      ></Button>\n    </Fragment>\n  );\n}\n\nWeb3Login.propTypes = {\n  close: PropTypes.func\n};\n\nfunction Web3Login({ close }) {\n  const [accounts] = useWeb3();\n  const metamask = useMetamask();\n  const address = accounts && accounts[0] && utils.getAddress(accounts[0]);\n  const logIn = useLoginWithBox(close);\n\n  useEffect(() => {\n    metamask && address && logIn();\n  }, [metamask, address]); // eslint-disable-line\n\n  return null;\n}\n"],"file":"login.3box.js"}