{"version":3,"sources":["../../../src/modules/auth/3box.hooks.js"],"names":["Alert","alert","use3BoxProfile","address","metamask","setProfile","init3Box","boxProfile","provider","providers","Web3Provider","msg","signature","message","useLoginWithBox","close","accounts","utils","getAddress","dispatch","logIn","success"],"mappings":"klBAAA,4BACA,kCACA,8BACA,iCACA,oCACA,oDACA,uCACA,oC,yyBAGA,GAAMA,CAAAA,KAAK,CAAGC,aAAMD,KAAN,EAAd,CACO,QAASE,CAAAA,cAAT,MAA2D,IAAjCC,CAAAA,OAAiC,MAAjCA,OAAiC,CAAxBC,QAAwB,MAAxBA,QAAwB,CAAdC,UAAc,MAAdA,UAAc,CAChE,MAAO,qBAAU,UAAM,CACrB,GAAI,CAACF,OAAD,EAAY,CAACC,QAAjB,CAA2B,OAC3B,GAAME,CAAAA,QAAQ,+EAAG,mOAEY,oBAAWH,OAAX,CAFZ,QAEPI,UAFO,eAIbF,UAAU,CAAC,CAAC,IAAD,kBAAYE,UAAZ,EAAD,CAAV,CAEMC,QANO,CAMI,GAAIC,mBAAUC,YAAd,CAA2BN,QAA3B,CANJ,uBAOoB,qBAAYI,QAAZ,CAAsBL,OAAtB,CAPpB,yCAOLQ,GAPK,oBAOLA,GAPK,CAOAC,SAPA,oBAOAA,SAPA,iCASNP,UAAU,CAAC,CAAC,IAAD,gCAAYE,UAAZ,MAAwBK,SAAS,CAATA,SAAxB,CAAmCD,GAAG,CAAHA,GAAnC,GAAD,CATJ,4DAWbX,KAAK,CAACC,KAAN,CAAY,YAAIY,OAAhB,EAXa,gCAYNR,UAAU,CAAC,CAAC,YAAIQ,OAAL,CAAD,CAZJ,uEAAH,kBAARP,CAAAA,QAAQ,2CAAd,CAeAA,QAAQ,GACT,CAlBM,CAkBJ,CAACH,OAAD,CAlBI,CAAP,CAmBD,CAEM,QAASW,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,aAClB,uBADkB,iDAC9BC,QAD8B,aAErC,GAAMZ,CAAAA,QAAQ,CAAG,2BAAjB,CACA,GAAMD,CAAAA,OAAO,CAAGa,QAAQ,EAAIA,QAAQ,CAAC,CAAD,CAApB,EAA2BC,cAAMC,UAAN,CAAiBF,QAAQ,CAAC,CAAD,CAAzB,CAA3C,CACA,GAAMG,CAAAA,QAAQ,CAAG,6BAAjB,CACA,GAAMC,CAAAA,KAAK,CAAG,gFAAY,qMACpB,CAAChB,QAAD,EAAa,CAACD,OADM,4DACUH,KAAK,CAACC,KAAN,CAAY,kCAAZ,CADV,SAGlBO,QAHkB,CAGP,GAAIC,mBAAUC,YAAd,CAA2BN,QAA3B,CAHO,wBAIS,qBAAYI,QAAZ,CAAsBL,OAAtB,CAJT,2CAIhBS,SAJgB,qBAIhBA,SAJgB,CAILD,GAJK,qBAILA,GAJK,yBAKFQ,CAAAA,QAAQ,CAAC,uBAAa,CAAEP,SAAS,CAATA,SAAF,CAAaT,OAAO,CAAPA,OAAb,CAAsBQ,GAAG,CAAHA,GAAtB,CAAb,CAAD,CALN,SAKlBU,OALkB,gBAMxBA,OAAO,EAAIN,KAAX,EAAoBA,KAAK,EAAzB,CANwB,iCAOjBM,OAPiB,2DAAZ,GAQX,CAAClB,OAAD,CAAUC,QAAV,CAAoBe,QAApB,CAA8BJ,KAA9B,CARW,CAAd,CASA,MAAOK,CAAAA,KAAP,CACD","sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { alert } from 'utils';\nimport { providers, utils } from 'ethers';\nimport { getProfile } from '3box/lib/api';\nimport { signMessage } from 'utils/eth';\nimport { useWeb3, useMetamask } from 'modules/contract/contract.hooks';\nimport { useDispatch } from 'react-redux';\nimport { loginWithBox } from 'modules/auth/auth.actions';\n// import { local } from 'utils/storage';\n\nconst Alert = alert.Alert();\nexport function use3BoxProfile({ address, metamask, setProfile }) {\n  return useEffect(() => {\n    if (!address || !metamask) return;\n    const init3Box = async () => {\n      try {\n        const boxProfile = await getProfile(address);\n\n        setProfile([null, { ...boxProfile }]);\n\n        const provider = new providers.Web3Provider(metamask);\n        const { msg, signature } = await signMessage(provider, address);\n\n        return setProfile([null, { ...boxProfile, signature, msg }]);\n      } catch (err) {\n        Alert.alert(err.message);\n        return setProfile([err.message]);\n      }\n    };\n    init3Box();\n  }, [address]); // eslint-disable-line\n}\n\nexport function useLoginWithBox(close) {\n  const [accounts] = useWeb3();\n  const metamask = useMetamask();\n  const address = accounts && accounts[0] && utils.getAddress(accounts[0]);\n  const dispatch = useDispatch();\n  const logIn = useCallback(async () => {\n    if (!metamask || !address) return Alert.alert('Pleas enable Metamask to log in.');\n\n    const provider = new providers.Web3Provider(metamask);\n    const { signature, msg } = await signMessage(provider, address);\n    const success = await dispatch(loginWithBox({ signature, address, msg }));\n    success && close && close();\n    return success;\n  }, [address, metamask, dispatch, close]);\n  return logIn;\n}\n\n// We are going to use this for a desktop-mobile sync\n// function getMnemonic() {\n//   const mnemonic = local.getItem('3box_mnemonic');\n//   if (mnemonic) return mnemonic;\n//   const wallet = Wallet.createRandom();\n//   local.setItem('3box_mnemonic', wallet.mnemonic);\n//   return wallet.mnemonic;\n// }\n"],"file":"3box.hooks.js"}