{"version":3,"sources":["../../../../src/modules/auth/mobile/forgot.component.js"],"names":["styles","Forgot","props","context","forgotPassword","bind","state","username","sendingEmail","userInput","focus","actions","setAuthStatusText","Alert","alert","blur","setState","res","email","navigation","navigate","spinner","KBView","KeyboardAvoidingView","share","View","flex","Platform","OS","StatusBar","currentHeight","IphoneX","fieldsParent","fieldsInner","fieldsInputParent","c","colors","grey","fieldsInput","largeButton","largeButtonText","Component","PropTypes","object","bool","propTypes","localStyles","StyleSheet","create","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableHighlight,\n  Alert,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n  StatusBar\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport dismissKeyboard from 'react-native-dismiss-keyboard';\nimport { globalStyles, IphoneX } from 'app/styles/global';\nimport CustomSpinner from 'modules/ui/mobile/CustomSpinner.component';\nimport { colors } from 'styles';\n\nlet styles;\n\nclass Forgot extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    navigation: PropTypes.object,\n    share: PropTypes.bool\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.state = {\n      username: null,\n      sendingEmail: false\n    };\n  }\n\n  componentDidMount() {\n    this.userInput.focus();\n  }\n\n  componentWillUnmount() {\n    this.props.actions.setAuthStatusText();\n  }\n\n  async forgotPassword() {\n    try {\n      if (!this.state.username) {\n        Alert.alert('must enter a username or password');\n        return;\n      }\n\n      this.userInput.blur();\n      dismissKeyboard();\n\n      this.setState({ sendingEmail: true });\n\n      const res = await this.props.actions.forgotPassword(this.state.username);\n      if (res && res.email) {\n        this.props.navigation.navigate('mainAuth');\n        this.setState({ sendingEmail: false });\n        Alert.alert(\n          `We have set an email to ${res.email}\n      with a link to reset the password for ${res.username}.`,\n          \"If you don't see a password reset email in your inbox, please check your spam folder.\"\n        );\n      }\n    } catch (err) {\n      Alert.alert(err);\n    }\n  }\n\n  render() {\n    let spinner;\n    if (this.state.sendingEmail) {\n      spinner = <CustomSpinner />;\n    }\n\n    let KBView = KeyboardAvoidingView;\n    if (this.props.share) {\n      KBView = View;\n    }\n\n    return (\n      <KBView\n        behavior={'padding'}\n        style={{ flex: 1 }}\n        keyboardVerticalOffset={\n          Platform.OS === 'android' ? StatusBar.currentHeight / 2 + 64 : IphoneX ? 88 : 64\n        }\n      >\n        <ScrollView\n          keyboardShouldPersistTaps={'always'}\n          keyboardDismissMode={'interactive'}\n          scrollEnabled={false}\n          contentContainerStyle={styles.fieldsParent}\n        >\n          <View style={styles.fieldsInner}>\n            <View style={styles.fieldsInputParent}>\n              <TextInput\n                ref={c => (this.userInput = c)}\n                underlineColorAndroid={'transparent'}\n                autoCorrect={false}\n                autoCapitalize={'none'}\n                // keyboardType={'email-address'}\n                clearTextOnFocus={false}\n                placeholderTextColor={colors.grey}\n                placeholder=\"username or email\"\n                onChangeText={username => this.setState({ username })}\n                value={this.state.username}\n                style={styles.fieldsInput}\n              />\n            </View>\n          </View>\n\n          <TouchableHighlight\n            onPress={this.forgotPassword}\n            underlayColor={'transparent'}\n            style={[styles.largeButton]}\n          >\n            <Text style={styles.largeButtonText}>Send Password Reset Link</Text>\n          </TouchableHighlight>\n\n          {spinner}\n        </ScrollView>\n      </KBView>\n    );\n  }\n}\n\nForgot.propTypes = {\n  actions: PropTypes.object\n};\n\nconst localStyles = StyleSheet.create({});\nstyles = { ...localStyles, ...globalStyles };\n\nexport default Forgot;\n"],"file":"forgot.component.js"}