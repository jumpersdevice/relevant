{"version":3,"sources":["../../../../src/modules/auth/mobile/resetPassword.component.js"],"names":["styles","ResetPassword","props","context","validate","bind","state","message","password","cPassword","navigation","index","routes","token","Alert","alert","actions","resetPassword","then","success","replace","catch","flex","Platform","OS","StatusBar","currentHeight","IphoneX","fieldsParent","fieldsInner","fieldsInputParent","colors","grey","setState","fieldsInput","largeButton","largeButtonText","Component","PropTypes","object","localStyles","StyleSheet","create","error","color","textAlign","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  TextInput,\n  TouchableHighlight,\n  Alert,\n  StyleSheet,\n  KeyboardAvoidingView,\n  ScrollView,\n  Platform,\n  StatusBar\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { colors } from 'styles';\n\nimport { globalStyles, IphoneX } from 'app/styles/global';\n\nlet styles;\n\nclass ResetPassword extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    navigation: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.validate = this.validate.bind(this);\n    this.state = {\n      message: '',\n      password: null,\n      cPassword: null\n    };\n  }\n\n  componentDidMount() {\n    const { index, routes } = this.props.navigation.state;\n    this.token = get(routes[index], 'params.token');\n  }\n\n  validate() {\n    if (this.state.password) {\n      if (this.state.password !== this.state.cPassword) {\n        Alert.alert(\"Passwords don't match\");\n        return;\n      }\n    } else {\n      Alert.alert('Password required');\n      return;\n    }\n    this.props.actions\n      .resetPassword(this.state.password, this.token)\n      .then(success => {\n        if (success) {\n          this.props.navigation.replace('login');\n        }\n      })\n      .catch(Alert.alert);\n  }\n\n  render() {\n    return (\n      <KeyboardAvoidingView\n        behavior={'padding'}\n        style={{ flex: 1 }}\n        keyboardVerticalOffset={\n          Platform.OS === 'android' ? StatusBar.currentHeight / 2 + 64 : IphoneX ? 88 : 64\n        }\n      >\n        <ScrollView\n          keyboardShouldPersistTaps={'always'}\n          scrollEnabled={false}\n          keyboardDismissMode={'interactive'}\n          contentContainerStyle={styles.fieldsParent}\n        >\n          <View style={styles.fieldsInner}>\n            <View style={styles.fieldsInputParent}>\n              <TextInput\n                autoCapitalize={'none'}\n                secureTextEntry\n                keyboardType={'default'}\n                clearTextOnFocus={false}\n                placeholderTextColor={colors.grey}\n                placeholder=\"new password\"\n                onChangeText={password => this.setState({ password })}\n                value={this.state.password}\n                style={styles.fieldsInput}\n              />\n            </View>\n\n            <View style={styles.fieldsInputParent}>\n              <TextInput\n                autoCapitalize={'none'}\n                secureTextEntry\n                keyboardType={'default'}\n                clearTextOnFocus={false}\n                placeholderTextColor={colors.grey}\n                placeholder=\"confirm password\"\n                onChangeText={cPassword => this.setState({ cPassword })}\n                value={this.state.cPassword}\n                style={styles.fieldsInput}\n              />\n            </View>\n          </View>\n\n          <TouchableHighlight\n            underlayColor={'transparent'}\n            style={[styles.largeButton]}\n            onPress={this.validate}\n          >\n            <Text style={styles.largeButtonText}>next</Text>\n          </TouchableHighlight>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst localStyles = StyleSheet.create({\n  error: {\n    color: 'red',\n    textAlign: 'center'\n  }\n});\n\nstyles = { ...globalStyles, ...localStyles };\n\nexport default ResetPassword;\n"],"file":"resetPassword.component.js"}