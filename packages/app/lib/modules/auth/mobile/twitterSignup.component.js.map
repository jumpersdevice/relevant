{"version":3,"sources":["../../../../src/modules/auth/mobile/twitterSignup.component.js"],"names":["styles","TwitterSignup","props","context","state","username","inProgress","renderUserName","bind","signUp","checkUser","codePush","disallowRestart","next","auth","twitter","name","userName","setState","usernameExists","Alert","alert","twitterProfile","preUser","handle","actions","updateHandle","token","nameError","string","match","NAME_PATTERN","test","then","results","_id","flex","fieldsInputParent","smallInfo","colors","grey","replace","trim","fieldsInput","error","flexDirection","justifyContent","alignItems","admin","signInText","navigation","navigate","routeName","active","button","largeButton","loading","largeButtonText","Platform","OS","StatusBar","currentHeight","IphoneX","authScrollContent","renderCTA","goToUrl","font12","Component","PropTypes","object","localStyles","StyleSheet","create","forgot","textAlign","marginTop","color","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n  Alert,\n  StatusBar\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport codePush from 'react-native-code-push';\nimport { globalStyles, IphoneX } from 'app/styles/global';\nimport { NAME_PATTERN } from 'app/utils/text';\nimport CustomSpinner from 'modules/ui/mobile/CustomSpinner.component';\nimport { colors } from 'styles';\nimport TwitterButton from './TwitterButton.component';\n\nlet styles;\n\nexport default class TwitterSignup extends Component {\n  static propTypes = {\n    auth: PropTypes.object,\n    actions: PropTypes.object,\n    admin: PropTypes.object,\n    navigation: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      username: '',\n      inProgress: false\n    };\n    this.renderUserName = this.renderUserName.bind(this);\n    this.signUp = this.signUp.bind(this);\n    this.checkUser = this.checkUser.bind(this);\n  }\n\n  componentDidMount() {\n    codePush.disallowRestart();\n  }\n\n  componentWillReceiveProps(next) {\n    if (next.auth.twitter && !this.props.auth.twitter) {\n      const name = next.auth.twitter.userName;\n      this.setState({ username: next.auth.twitter.userName });\n      this.checkUser(name);\n    }\n  }\n\n  async signUp() {\n    const { inProgress } = this.state;\n    if (inProgress) return null;\n    if (this.usernameExists) {\n      return Alert.alert('This handle is already taken');\n    }\n    const twitterProfile = this.props.auth.twitter;\n    const { preUser } = this.props.auth;\n    if (!preUser) return null;\n    preUser.handle = this.state.username;\n\n    this.setState({ inProgress: true });\n    await this.props.actions.updateHandle(preUser, twitterProfile.token);\n    this.setState({ inProgress: false });\n    return null;\n  }\n\n  checkUser(name) {\n    const { preUser } = this.props.auth;\n    if (!preUser) return null;\n    this.nameError = null;\n    const string = name || this.state.username;\n    if (!string) return null;\n    const match = NAME_PATTERN.test(string);\n    if (!match) {\n      return (this.nameError =\n        'username can only contain letters, numbers, dashes and underscores');\n    }\n    this.props.actions.checkUser(string, 'name').then(results => {\n      if (results && !preUser && results._id !== preUser._id) {\n        this.usernameExists = true;\n        this.nameError = 'This handle is already taken';\n      } else this.usernameExists = false;\n      this.setState({});\n    });\n    return true;\n  }\n\n  renderUserName() {\n    return (\n      <View style={{ flex: 1 }}>\n        <View style={styles.fieldsInputParent}>\n          <Text style={styles.smallInfo}>Choose your handle</Text>\n          <TextInput\n            underlineColorAndroid={'transparent'}\n            autoCapitalize={'none'}\n            autoCorrect={false}\n            keyboardType={'default'}\n            clearTextOnFocus={false}\n            placeholderTextColor={colors.grey}\n            placeholder=\"username\"\n            onChangeText={username => {\n              username = username.replace('@', '').trim();\n              this.setState({ username });\n              this.checkUser(username.trim());\n            }}\n            value={'@' + this.state.username}\n            style={styles.fieldsInput}\n          />\n        </View>\n        {this.nameError ? (\n          <Text style={[styles.smallInfo, styles.error]}>{this.nameError}</Text>\n        ) : null}\n      </View>\n    );\n  }\n\n  renderCTA() {\n    return (\n      <View\n        style={{\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <TwitterButton\n          type={'signup'}\n          auth={this.props.auth}\n          admin={this.props.admin}\n          actions={this.props.actions}\n        />\n        <Text style={styles.signInText}>or</Text>\n        <TouchableOpacity\n          onPress={() => {\n            this.props.navigation.navigate({ routeName: 'signup' });\n          }}\n        >\n          <Text style={[styles.signInText, styles.active]}>Sign up with email</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  render() {\n    const { auth } = this.props;\n    const { inProgress } = this.state;\n    const button = (\n      <TouchableOpacity\n        style={[styles.largeButton]}\n        disabled={inProgress || auth.loading}\n        onPress={this.signUp}\n      >\n        <Text style={styles.largeButtonText}>Finish</Text>\n      </TouchableOpacity>\n    );\n\n    if (this.props.auth.loading) {\n      return <CustomSpinner />;\n    }\n\n    return (\n      <KeyboardAvoidingView\n        behavior={'padding'}\n        style={{ flex: 1 }}\n        keyboardVerticalOffset={\n          Platform.OS === 'android' ? StatusBar.currentHeight / 2 + 64 : IphoneX ? 88 : 64\n        }\n      >\n        <ScrollView\n          keyboardShouldPersistTaps={'always'}\n          keyboardDismissMode={'interactive'}\n          style={{ flex: 1 }}\n          contentContainerStyle={styles.authScrollContent}\n        >\n          {this.props.auth.twitter ? this.renderUserName() : this.renderCTA()}\n          {this.props.auth.twitter ? button : null}\n\n          <TouchableOpacity\n            onPress={() =>\n              this.props.actions.goToUrl('https://relevant.community/eula.html')\n            }\n          >\n            <Text style={[styles.signInText, styles.font12]}>\n              By signing up, you agree to our{' '}\n              <Text style={[styles.signInText, styles.active, styles.font12]}>\n                Terms of Use\n              </Text>\n            </Text>\n          </TouchableOpacity>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst localStyles = StyleSheet.create({\n  forgot: {\n    textAlign: 'center',\n    marginTop: 5\n  },\n  error: {\n    marginTop: 5,\n    color: 'red',\n    textAlign: 'center'\n  }\n});\n\nstyles = { ...globalStyles, ...localStyles };\n"],"file":"twitterSignup.component.js"}