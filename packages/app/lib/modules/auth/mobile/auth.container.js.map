{"version":3,"sources":["../../../../src/modules/auth/mobile/auth.container.js"],"names":["AuthContainer","props","actions","getUser","then","user","codePush","allowRestart","navigation","navigate","auth","refreshTab","flex","backgroundColor","top","Component","PropTypes","object","AuthStack","router","mapStateToProps","state","admin","mapDispatchToProps","dispatch","authActions","adminActions","goToUrl","push","reloadTab","showModal"],"mappings":"8+BAAA,qDACA,iDAEA,6DACA,mFACA,4BACA,uCACA,+EACA,oEACA,+DAOA,wD,smDAEMA,CAAAA,a,iUASgB,gBAClB,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,GAA6BC,IAA7B,8EAAkC,iBAAMC,IAAN,sHAC3BA,IAD2B,yDACd,IADc,SAEhCC,6BAASC,YAAT,GAFgC,gCAGzB,KAAI,CAACN,KAAL,CAAWO,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,CAHyB,wDAAlC,gEAKD,C,+DAEoB,CACnB,GAAI,KAAKR,KAAL,CAAWS,IAAX,CAAgBL,IAApB,CAA0B,CACxBC,6BAASC,YAAT,GACA,KAAKN,KAAL,CAAWO,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,EACD,CACF,C,mEAEsB,CACrBH,6BAASC,YAAT,GACA,KAAKN,KAAL,CAAWC,OAAX,CAAmBS,UAAnB,CAA8B,UAA9B,EACD,C,uCAEQ,CACP,MACE,8BAAC,6BAAD,EACE,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,eAAe,CAAE,cAA5B,CADT,CAEE,UAAU,CAAE,CAAEC,GAAG,CAAE,OAAP,CAFd,gEAIE,6BAAC,yBAAD,EAAe,UAAU,CAAE,KAAKb,KAAL,CAAWO,UAAtC,CAAkD,WAAW,CAAE,KAAKP,KAApE,gEAJF,CADF,CAQD,C,2BAtCyBc,gB,+BAAtBf,a,aACe,CACjBQ,UAAU,CAAEQ,mBAAUC,MADL,CAEjBf,OAAO,CAAEc,mBAAUC,MAFF,CAGjBP,IAAI,CAAEM,mBAAUC,MAHC,C,+BADfjB,a,UAOYkB,sBAAUC,M,EAkC5B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CAChCX,IAAI,CAAEW,KAAK,CAACX,IADoB,CAEhCY,KAAK,CAAED,KAAK,CAACC,KAFmB,CAAL,EAA7B,CAKA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCtB,OAAO,CAAE,2EAEFuB,WAFE,EAGFC,YAHE,MAILC,OAAO,CAAPA,mBAJK,CAKLC,IAAI,CAAJA,gBALK,CAMLjB,UAAU,CAAVA,sBANK,CAOLkB,SAAS,CAATA,qBAPK,CAQLC,SAAS,CAATA,qBARK,GAUPN,QAVO,CAD6B,CAAL,EAAnC,C,aAee,wBAAQJ,eAAR,CAAyBG,kBAAzB,EAA6CvB,aAA7C,C","sourcesContent":["import React, { Component } from 'react';\nimport { SafeAreaView } from 'react-navigation';\n\nimport PropTypes from 'prop-types';\nimport codePush from 'react-native-code-push';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as adminActions from 'modules/admin/admin.actions';\nimport * as authActions from 'modules/auth/auth.actions';\nimport {\n  goToUrl,\n  push,\n  reloadTab,\n  refreshTab,\n  showModal\n} from 'modules/navigation/navigation.actions';\nimport { AuthNavigator, AuthStack } from 'modules/_app/mobile/authRouter';\n\nclass AuthContainer extends Component {\n  static propTypes = {\n    navigation: PropTypes.object,\n    actions: PropTypes.object,\n    auth: PropTypes.object\n  };\n\n  static router = AuthStack.router;\n\n  componentDidMount() {\n    this.props.actions.getUser().then(async user => {\n      if (!user) return null;\n      codePush.allowRestart();\n      return this.props.navigation.navigate('main');\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.props.auth.user) {\n      codePush.allowRestart();\n      this.props.navigation.navigate('main');\n    }\n  }\n\n  componentWillUnmount() {\n    codePush.allowRestart();\n    this.props.actions.refreshTab('discover');\n  }\n\n  render() {\n    return (\n      <SafeAreaView\n        style={{ flex: 1, backgroundColor: 'colors.white' }}\n        forceInset={{ top: 'never' }}\n      >\n        <AuthNavigator navigation={this.props.navigation} screenProps={this.props} />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  admin: state.admin\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...authActions,\n      ...adminActions,\n      goToUrl,\n      push,\n      refreshTab,\n      reloadTab,\n      showModal\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthContainer);\n"],"file":"auth.container.js"}