{"version":3,"sources":["../../../../src/modules/auth/mobile/imageUpload.component.js"],"names":["localStyles","styles","ImageUpload","props","context","renderButtons","bind","createUser","initImage","chooseImage","renderImage","state","image","uploading","self","err","data","Alert","alert","message","setState","utils","s3","toS3Advanced","auth","token","then","results","success","url","callback","ImagePicker","showImagePicker","pickerOptions","response","didCancel","error","customButton","uri","actions","invitecode","newUser","preUser","source","require","width","height","largeButton","largeButtonText","marginTop","globalStyles","padding","flex","justifyContent","alignItems","signInText","color","Component","PropTypes","object","propTypes","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Text, View, TouchableHighlight, StyleSheet, Image, Alert } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { globalStyles } from 'app/styles/global';\nimport { pickerOptions } from 'app/utils/pickerOptions';\nimport * as utils from 'app/utils';\nimport CustomSpinnerRelative from 'modules/ui/mobile/customSpinnerRelative.component';\nimport ImagePicker from 'react-native-image-picker';\n\nlet localStyles;\nlet styles;\n\nclass ImageUpload extends Component {\n  static propTypes = {\n    auth: PropTypes.object,\n    actions: PropTypes.object\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.renderButtons = this.renderButtons.bind(this);\n    this.createUser = this.createUser.bind(this);\n    this.initImage = this.initImage.bind(this);\n    this.chooseImage = this.chooseImage.bind(this);\n    this.renderImage = this.renderImage.bind(this);\n    this.state = {\n      image: null,\n      uploading: false\n    };\n  }\n\n  initImage() {\n    const self = this;\n    this.chooseImage((err, data) => {\n      if (err) return Alert.alert(err.message);\n      if (data) {\n        self.setState({ uploading: true });\n        utils.s3.toS3Advanced(data, this.props.auth.token).then(results => {\n          if (results.success) {\n            self.setState({ image: results.url, uploading: false });\n          } else {\n            Alert.alert('image error ', results);\n          }\n        });\n      }\n      return null;\n    });\n  }\n\n  chooseImage(callback) {\n    ImagePicker.showImagePicker(pickerOptions, response => {\n      if (response.didCancel) {\n        callback('cancelled');\n      } else if (response.error) {\n        callback('error');\n      } else if (response.customButton) {\n        callback('error');\n      } else {\n        callback(null, response.uri);\n      }\n    });\n  }\n\n  createUser() {\n    const { createUser } = this.props.actions;\n    const { invitecode } = this.props.auth;\n    const newUser = { ...this.props.auth.preUser };\n    newUser.image = this.state.image;\n    createUser(newUser, invitecode);\n  }\n\n  renderImage() {\n    let source = null;\n    if (!this.state.uploading) {\n      if (this.state.image) source = { uri: this.state.image };\n      else source = require('public/img/camera.png');\n      return (\n        <Image style={{ width: 200, height: 200 }} resizeMode={'cover'} source={source} />\n      );\n    }\n    return null;\n  }\n\n  renderButtons() {\n    if (this.state.image) {\n      return (\n        <View>\n          <TouchableHighlight\n            underlayColor={'transparent'}\n            style={[styles.largeButton]}\n            onPress={this.initImage}\n          >\n            <Text style={styles.largeButtonText}>Choose different image</Text>\n          </TouchableHighlight>\n          <TouchableHighlight\n            underlayColor={'transparent'}\n            style={[styles.largeButton, { marginTop: 10 }]}\n            onPress={this.createUser}\n          >\n            <Text style={styles.largeButtonText}>Create user</Text>\n          </TouchableHighlight>\n        </View>\n      );\n    }\n    return (\n      <TouchableHighlight\n        underlayColor={'transparent'}\n        style={[styles.largeButton]}\n        onPress={this.initImage}\n      >\n        <Text style={styles.largeButtonText}>upload image</Text>\n      </TouchableHighlight>\n    );\n  }\n\n  render() {\n    styles = { ...localStyles, ...globalStyles };\n\n    return (\n      <View style={{ padding: 20, flex: 1 }}>\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          {this.renderImage()}\n          <CustomSpinnerRelative visible={this.state.uploading} />\n        </View>\n        {this.renderButtons()}\n        <TouchableHighlight\n          onPress={() => this.createUser()}\n          underlayColor={'transparent'}\n        >\n          <Text style={styles.signInText}>\n            <Text style={{ color: '#3E3EFF' }}>Skip</Text> for now\n          </Text>\n        </TouchableHighlight>\n      </View>\n    );\n  }\n}\n\nImageUpload.propTypes = {\n  actions: PropTypes.object\n};\n\nlocalStyles = StyleSheet.create({});\n\nexport default ImageUpload;\n"],"file":"imageUpload.component.js"}