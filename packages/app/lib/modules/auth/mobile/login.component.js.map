{"version":3,"sources":["../../../../src/modules/auth/mobile/login.component.js"],"names":["styles","Login","props","context","login","bind","state","bool","notifText","username","password","codePush","disallowRestart","actions","setAuthStatusText","Alert","alert","loginUser","name","twitter","auth","KBView","KeyboardAvoidingView","share","View","local","length","twitterConnect","justifyContent","alignItems","signInText","signIn","largeButton","largeButtonText","loading","flex","Platform","OS","StatusBar","currentHeight","IphoneX","authScrollContent","fieldsInner","fieldsInputParent","c","userInput","colors","grey","setState","trim","fieldsInput","passInput","marginTop","showModal","navigation","navigate","routeName","params","title","active","Component","PropTypes","object","propTypes","localStyles","StyleSheet","create","forgot","textAlign","globalStyles"],"mappings":"y6BAAA,qDACA,gDAYA,6DACA,mFACA,iGACA,8CACA,uCACA,8FACA,gFACA,+C,omDAEA,GAAIA,CAAAA,MAAJ,C,GAEMC,CAAAA,K,8FAQJ,eAAYC,KAAZ,CAAmBC,OAAnB,CAA4B,oDAC1B,uBAAMD,KAAN,CAAaC,OAAb,EACA,MAAKC,KAAL,CAAa,MAAKA,KAAL,CAAWC,IAAX,4CAAb,CACA,MAAKC,KAAL,CAAa,CACXC,IAAI,CAAE,KADK,CAEXC,SAAS,CAAE,IAFA,CAGXC,QAAQ,CAAE,IAHC,CAIXC,QAAQ,CAAE,IAJC,CAAb,CAH0B,aAS3B,C,4FAEmB,CAElBC,6BAASC,eAAT,GACD,C,mEAEsB,CACrB,KAAKV,KAAL,CAAWW,OAAX,CAAmBC,iBAAnB,GACD,C,qCAEO,CACN,GAAI,CAAC,KAAKR,KAAL,CAAWG,QAAhB,CAA0B,CACxBM,sBAAMC,KAAN,CAAY,qBAAZ,EACA,OACD,CAED,GAAI,CAAC,KAAKV,KAAL,CAAWI,QAAhB,CAA0B,CACxBK,sBAAMC,KAAN,CAAY,qBAAZ,EACA,OACD,CACD,0CACA,KAAKd,KAAL,CAAWW,OAAX,CAAmBI,SAAnB,CAA6B,CAC3BC,IAAI,CAAE,KAAKZ,KAAL,CAAWG,QADU,CAE3BC,QAAQ,CAAE,KAAKJ,KAAL,CAAWI,QAFM,CAG3BS,OAAO,CAAE,KAAKjB,KAAL,CAAWkB,IAAX,CAAgBD,OAHE,CAA7B,EAKD,C,uCAEQ,oBACCN,CAAAA,OADD,CACa,KAAKX,KADlB,CACCW,OADD,CAGP,GAAIQ,CAAAA,MAAM,CAAGC,oCAAb,CACA,GAAI,KAAKpB,KAAL,CAAWqB,KAAf,CAAsB,CACpBF,MAAM,CAAGG,oBAAT,CACD,CAED,GAAIC,CAAAA,KAAK,CACP,KAAKnB,KAAL,CAAWG,QAAX,EACA,KAAKH,KAAL,CAAWI,QADX,EAEA,KAAKJ,KAAL,CAAWG,QAAX,CAAoBiB,MAFpB,EAGA,KAAKpB,KAAL,CAAWI,QAAX,CAAoBgB,MAJtB,CAMA,GAAI,KAAKxB,KAAL,CAAWkB,IAAX,CAAgBD,OAApB,CAA6BM,KAAK,CAAG,IAAR,CAE7B,GAAME,CAAAA,cAAc,CAClB,6BAAC,oBAAD,EAAM,KAAK,CAAE,CAAC,CAAEC,cAAc,CAAE,QAAlB,CAA4BC,UAAU,CAAE,QAAxC,CAAD,CAAb,gEACE,6BAAC,oBAAD,EAAM,KAAK,CAAE7B,MAAM,CAAC8B,UAApB,+GADF,CADF,CAQA,GAAMC,CAAAA,MAAM,CACV,6BAAC,gCAAD,EAAkB,OAAO,CAAE,KAAK3B,KAAhC,CAAuC,KAAK,CAAE,CAACJ,MAAM,CAACgC,WAAR,CAA9C,gEACE,6BAAC,oBAAD,EAAM,KAAK,CAAEhC,MAAM,CAACiC,eAApB,0EADF,CADF,CAMA,GAAI,KAAK/B,KAAL,CAAWkB,IAAX,CAAgBc,OAApB,CAA6B,CAC3B,MAAO,8BAAC,sBAAD,mEAAP,CACD,CAED,MACE,8BAAC,MAAD,EACE,QAAQ,CAAE,SADZ,CAEE,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAFT,CAGE,sBAAsB,CACpBC,yBAASC,EAAT,GAAgB,SAAhB,CAA4BC,0BAAUC,aAAV,CAA0B,CAA1B,CAA8B,EAA1D,CAA+DC,gBAAU,EAAV,CAAe,EAJlF,iEAOE,6BAAC,0BAAD,EACE,yBAAyB,CAAE,QAD7B,CAEE,mBAAmB,CAAE,aAFvB,CAGE,qBAAqB,CAAExC,MAAM,CAACyC,iBAHhC,iEAKE,6BAAC,oBAAD,EAAM,KAAK,CAAEzC,MAAM,CAAC0C,WAApB,kEACE,6BAAC,oBAAD,EAAM,KAAK,CAAE1C,MAAM,CAAC2C,iBAApB,kEACE,6BAAC,yBAAD,EACE,GAAG,CAAE,aAAAC,CAAC,QAAK,CAAA,MAAI,CAACC,SAAL,CAAiBD,CAAtB,EADR,CAEE,qBAAqB,CAAE,aAFzB,CAGE,WAAW,CAAE,KAHf,CAIE,cAAc,CAAE,MAJlB,CAKE,gBAAgB,CAAE,KALpB,CAME,oBAAoB,CAAEE,eAAOC,IAN/B,CAOE,WAAW,CAAC,mBAPd,CAQE,YAAY,CAAE,sBAAAtC,QAAQ,QAAI,CAAA,MAAI,CAACuC,QAAL,CAAc,CAAEvC,QAAQ,CAAEA,QAAQ,CAACwC,IAAT,EAAZ,CAAd,CAAJ,EARxB,CASE,KAAK,CAAE,KAAK3C,KAAL,CAAWG,QATpB,CAUE,KAAK,CAAET,MAAM,CAACkD,WAVhB,kEADF,CADF,CAgBE,6BAAC,oBAAD,EAAM,KAAK,CAAElD,MAAM,CAAC2C,iBAApB,kEACE,6BAAC,yBAAD,EACE,GAAG,CAAE,aAAAC,CAAC,QAAK,CAAA,MAAI,CAACO,SAAL,CAAiBP,CAAtB,EADR,CAEE,qBAAqB,CAAE,aAFzB,CAGE,cAAc,CAAE,MAHlB,CAIE,WAAW,CAAE,KAJf,CAKE,eAAe,KALjB,CAME,YAAY,CAAE,SANhB,CAOE,gBAAgB,CAAE,KAPpB,CAQE,oBAAoB,CAAEE,eAAOC,IAR/B,CASE,WAAW,CAAC,UATd,CAUE,YAAY,CAAE,sBAAArC,QAAQ,QAAI,CAAA,MAAI,CAACsC,QAAL,CAAc,CAAEtC,QAAQ,CAAEA,QAAQ,CAACuC,IAAT,EAAZ,CAAd,CAAJ,EAVxB,CAWE,KAAK,CAAE,KAAK3C,KAAL,CAAWI,QAXpB,CAYE,KAAK,CAAEV,MAAM,CAACkD,WAZhB,kEADF,CAhBF,CAgCGzB,KAAK,CAAG,IAAH,CACJ,6BAAC,oBAAD,mEACE,6BAAC,oBAAD,EAAM,KAAK,CAAEzB,MAAM,CAAC8B,UAApB,uEADF,CAEE,6BAAC,sBAAD,EAAe,IAAI,CAAE,KAAK5B,KAAL,CAAWkB,IAAhC,CAAsC,OAAO,CAAE,KAAKlB,KAAL,CAAWW,OAA1D,kEAFF,CAjCJ,CAsCG,CAACY,KAAD,EACC,6BAAC,oBAAD,EAAM,KAAK,CAAE,CAAE2B,SAAS,CAAE,EAAb,CAAb,kEACE,6BAAC,mCAAD,EACE,IAAI,CAAE,8BADR,CAEE,OAAO,CAAE,yBAAMvC,CAAAA,OAAO,CAACwC,SAAR,CAAkB,gBAAlB,CAAN,EAFX,kEADF,CAvCJ,CA8CE,6BAAC,oBAAD,EAAM,KAAK,CAAE,CAAElB,IAAI,CAAE,CAAR,CAAb,kEA9CF,CA+CG,KAAKjC,KAAL,CAAWkB,IAAX,CAAgBD,OAAhB,CAA0BQ,cAA1B,CAA2C,IA/C9C,CALF,CAuDGF,KAAK,CAAGM,MAAH,CAAY,IAvDpB,CAyDE,6BAAC,gCAAD,EACE,OAAO,CAAE,kBAAM,CACb,MAAI,CAAC7B,KAAL,CAAWoD,UAAX,CAAsBC,QAAtB,CAA+B,CAC7BC,SAAS,CAAE,QADkB,CAE7BC,MAAM,CAAE,CAAEC,KAAK,CAAE,iBAAT,CAFqB,CAA/B,EAID,CANH,kEAQE,6BAAC,oBAAD,EAAM,KAAK,CAAE,CAAC1D,MAAM,CAAC8B,UAAR,CAAoB9B,MAAM,CAAC2D,MAA3B,CAAb,0FARF,CAzDF,CAPF,CADF,CA8ED,C,mBA9JiBC,gB,+BAAd3D,K,aACe,CACjBY,OAAO,CAAEgD,mBAAUC,MADF,CAEjB1C,IAAI,CAAEyC,mBAAUC,MAFC,CAGjBR,UAAU,CAAEO,mBAAUC,MAHL,CAIjBvC,KAAK,CAAEsC,mBAAUtD,IAJA,C,EAgKrBN,KAAK,CAAC8D,SAAN,CAAkB,CAChB3C,IAAI,CAAEyC,mBAAUC,MADA,CAEhBjD,OAAO,CAAEgD,mBAAUC,MAFH,CAGhBR,UAAU,CAAEO,mBAAUC,MAHN,CAIhBvC,KAAK,CAAEsC,mBAAUtD,IAJD,CAAlB,CAOA,GAAMyD,CAAAA,WAAW,CAAGC,2BAAWC,MAAX,CAAkB,CACpCC,MAAM,CAAE,CACNC,SAAS,CAAE,QADL,CAENhB,SAAS,CAAE,CAFL,CAD4B,CAAlB,CAApB,CAMApD,MAAM,gCAAQgE,WAAR,EAAwBK,oBAAxB,CAAN,C,aAEepE,K","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Text,\n  View,\n  TextInput,\n  Alert,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableOpacity,\n  StatusBar\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport codePush from 'react-native-code-push';\nimport dismissKeyboard from 'react-native-dismiss-keyboard';\nimport { globalStyles, IphoneX } from 'app/styles/global';\nimport { colors } from 'styles';\nimport CustomSpinner from 'modules/ui/mobile/CustomSpinner.component';\nimport TwitterButton from './TwitterButton.component';\nimport { ConnectDesktopButton } from '../socialButtons';\n\nlet styles;\n\nclass Login extends Component {\n  static propTypes = {\n    actions: PropTypes.object,\n    auth: PropTypes.object,\n    navigation: PropTypes.object,\n    share: PropTypes.bool\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.login = this.login.bind(this);\n    this.state = {\n      bool: false,\n      notifText: null,\n      username: null,\n      password: null\n    };\n  }\n\n  componentDidMount() {\n    // this.userInput.focus();\n    codePush.disallowRestart();\n  }\n\n  componentWillUnmount() {\n    this.props.actions.setAuthStatusText();\n  }\n\n  login() {\n    if (!this.state.username) {\n      Alert.alert('must enter username');\n      return;\n    }\n\n    if (!this.state.password) {\n      Alert.alert('must enter password');\n      return;\n    }\n    dismissKeyboard();\n    this.props.actions.loginUser({\n      name: this.state.username,\n      password: this.state.password,\n      twitter: this.props.auth.twitter\n    });\n  }\n\n  render() {\n    const { actions } = this.props;\n\n    let KBView = KeyboardAvoidingView;\n    if (this.props.share) {\n      KBView = View;\n    }\n\n    let local =\n      this.state.username &&\n      this.state.password &&\n      this.state.username.length &&\n      this.state.password.length;\n\n    if (this.props.auth.twitter) local = true;\n\n    const twitterConnect = (\n      <View style={[{ justifyContent: 'center', alignItems: 'center' }]}>\n        <Text style={styles.signInText}>\n          Sign in with your Relevant account to finish\n        </Text>\n      </View>\n    );\n\n    const signIn = (\n      <TouchableOpacity onPress={this.login} style={[styles.largeButton]}>\n        <Text style={styles.largeButtonText}>sign in</Text>\n      </TouchableOpacity>\n    );\n\n    if (this.props.auth.loading) {\n      return <CustomSpinner />;\n    }\n\n    return (\n      <KBView\n        behavior={'padding'}\n        style={{ flex: 1 }}\n        keyboardVerticalOffset={\n          Platform.OS === 'android' ? StatusBar.currentHeight / 2 + 64 : IphoneX ? 88 : 64\n        }\n      >\n        <ScrollView\n          keyboardShouldPersistTaps={'always'}\n          keyboardDismissMode={'interactive'}\n          contentContainerStyle={styles.authScrollContent}\n        >\n          <View style={styles.fieldsInner}>\n            <View style={styles.fieldsInputParent}>\n              <TextInput\n                ref={c => (this.userInput = c)}\n                underlineColorAndroid={'transparent'}\n                autoCorrect={false}\n                autoCapitalize={'none'}\n                clearTextOnFocus={false}\n                placeholderTextColor={colors.grey}\n                placeholder=\"username or email\"\n                onChangeText={username => this.setState({ username: username.trim() })}\n                value={this.state.username}\n                style={styles.fieldsInput}\n              />\n            </View>\n\n            <View style={styles.fieldsInputParent}>\n              <TextInput\n                ref={c => (this.passInput = c)}\n                underlineColorAndroid={'transparent'}\n                autoCapitalize={'none'}\n                autoCorrect={false}\n                secureTextEntry\n                keyboardType={'default'}\n                clearTextOnFocus={false}\n                placeholderTextColor={colors.grey}\n                placeholder=\"password\"\n                onChangeText={password => this.setState({ password: password.trim() })}\n                value={this.state.password}\n                style={styles.fieldsInput}\n              />\n            </View>\n            {local ? null : (\n              <View>\n                <Text style={styles.signInText}>or</Text>\n                <TwitterButton auth={this.props.auth} actions={this.props.actions} />\n              </View>\n            )}\n            {!local && (\n              <View style={{ marginTop: 18 }}>\n                <ConnectDesktopButton\n                  text={'Sign in with Desktop Browser'}\n                  onPress={() => actions.showModal('connectDesktop')}\n                />\n              </View>\n            )}\n            <View style={{ flex: 1 }} />\n            {this.props.auth.twitter ? twitterConnect : null}\n          </View>\n\n          {local ? signIn : null}\n\n          <TouchableOpacity\n            onPress={() => {\n              this.props.navigation.navigate({\n                routeName: 'forgot',\n                params: { title: 'Forgot Password' }\n              });\n            }}\n          >\n            <Text style={[styles.signInText, styles.active]}>Forgot your password?</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      </KBView>\n    );\n  }\n}\n\nLogin.propTypes = {\n  auth: PropTypes.object,\n  actions: PropTypes.object,\n  navigation: PropTypes.object,\n  share: PropTypes.bool // flag for share extension\n};\n\nconst localStyles = StyleSheet.create({\n  forgot: {\n    textAlign: 'center',\n    marginTop: 5\n  }\n});\nstyles = { ...localStyles, ...globalStyles };\n\nexport default Login;\n"],"file":"login.component.js"}