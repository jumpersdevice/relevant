{"version":3,"sources":["../../../../src/modules/auth/mobile/TwitterButton.component.js"],"names":["require","RNTwitterSignIn","NativeModules","Constants","TWITTER_COMSUMER_KEY","process","env","TWITTER_CONSUMER_SECRET","TwitterButton","props","state","loggedIn","invitecode","auth","init","logIn","loginData","authToken","authTokenSecret","Error","actions","twitterAuth","serverLogin","setTimeout","reloadTab","text","type","children","isLoggedIn","twitter","connected","flex","paddingTop","flexDirection","colors","twitterBlue","_twitterSignIn","color","marginRight","Component","PropTypes","string","object","node"],"mappings":"8+BAAA,qDACA,gDACA,6DACA,oFACA,qCACA,uC,4mDAEAA,OAAO,yBAAP,C,GAEQC,CAAAA,e,CAAoBC,6B,CAApBD,e,CAER,GAAME,CAAAA,SAAS,CAAG,CAChBC,oBAAoB,CAAEC,OAAO,CAACC,GAAR,CAAYF,oBADlB,CAEhBG,uBAAuB,CAAEF,OAAO,CAACC,GAAR,CAAYC,uBAFrB,CAAlB,C,GAKqBC,CAAAA,a,8GAQnB,uBAAYC,KAAZ,CAAmB,4DACjB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,QAAQ,CAAE,KADC,CAAb,CAFiB,aAKlB,C,gYAIWC,U,CAAe,KAAKH,KAAL,CAAWI,I,CAA1BD,U,CACRX,eAAe,CAACa,IAAhB,CACEX,SAAS,CAACC,oBADZ,CAEED,SAAS,CAACI,uBAFZ,E,sBAIwBN,CAAAA,eAAe,CAACc,KAAhB,E,QAAlBC,S,eAEEC,S,CAA+BD,S,CAA/BC,S,CAAWC,e,CAAoBF,S,CAApBE,e,MACf,CAACD,SAAD,EAAc,CAACC,e,+BAAuB,IAAIC,CAAAA,KAAJ,CAAU,sBAAV,C,+BAGhB,MAAKV,KAAL,CAAWW,OAAX,CAAmBC,WAAnB,gCACrBL,SADqB,MAExBJ,UAAU,CAAVA,UAFwB,G,SAApBU,W,eAKN,GAAIA,WAAJ,CAAiB,CACfC,UAAU,CAAC,UAAM,CACf,MAAI,CAACd,KAAL,CAAWW,OAAX,CAAmBI,SAAnB,CAA6B,UAA7B,EACD,CAFS,CAEP,IAFO,CAAV,CAGD,C,iSAMI,iBACP,GAAIC,CAAAA,IAAI,CAAG,KAAKhB,KAAL,CAAWiB,IAAX,GAAoB,QAApB,CAA+B,SAA/B,CAA2C,SAAtD,CACAD,IAAI,EAAI,eAAR,CACA,GAAI,KAAKhB,KAAL,CAAWkB,QAAf,CAAyBF,IAAI,CAAG,KAAKhB,KAAL,CAAWkB,QAAlB,CACzB,GAAMC,CAAAA,UAAU,CAAG,KAAKnB,KAAL,CAAWI,IAAX,CAAgBgB,OAAnC,CACA,GAAIC,CAAAA,SAAJ,CACA,GAAIF,UAAU,EAAI,CAAC,KAAKnB,KAAL,CAAWiB,IAAZ,GAAqB,QAAvC,CAAiD,CAC/CI,SAAS,CACP,6BAAC,aAAD,EAAU,SAAS,CAAC,QAApB,yGADF,CAGD,CAED,MACE,8BAAC,SAAD,EAAM,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,UAAU,CAAE,EAAvB,CAA2BC,aAAa,CAAE,KAA1C,CAAb,gEACGL,UAAU,CACTE,SADS,CAGT,6BAAC,SAAD,EAAM,IAAI,CAAE,CAAZ,iEACE,6BAAC,gBAAD,EAAa,EAAE,CAAEI,eAAOC,WAAxB,CAAqC,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACC,cAAL,EAAN,EAA9C,iEACE,6BAAC,SAAD,EAAM,UAAU,CAAC,KAAjB,CAAuB,KAAK,CAAE,QAA9B,iEACE,6BAAC,iBAAD,EACE,YAAY,CAAE,CADhB,CAEE,IAAI,CAAE,cAFR,CAGE,IAAI,CAAE,EAHR,CAIE,KAAK,CAAE,OAJT,CAKE,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAT,CAAkBC,WAAW,CAAE,EAA/B,CALT,iEADF,CAQE,6BAAC,eAAD,kEAAab,IAAb,CARF,CADF,CADF,CAJJ,CADF,CAsBD,C,2BA7EwCc,gB,6DAAtB/B,a,aACA,CACjBkB,IAAI,CAAEc,mBAAUC,MADC,CAEjBrB,OAAO,CAAEoB,mBAAUE,MAFF,CAGjBf,QAAQ,CAAEa,mBAAUG,IAHH,CAIjB9B,IAAI,CAAE2B,mBAAUE,MAJC,C","sourcesContent":["import React, { Component } from 'react';\nimport { NativeModules } from 'react-native';\nimport PropTypes from 'prop-types';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { ButtonText, HoverButton, View, BodyText } from 'modules/styled/uni';\nimport { colors } from 'styles';\n\nrequire('../../../../publicenv');\n\nconst { RNTwitterSignIn } = NativeModules;\n\nconst Constants = {\n  TWITTER_COMSUMER_KEY: process.env.TWITTER_COMSUMER_KEY,\n  TWITTER_CONSUMER_SECRET: process.env.TWITTER_CONSUMER_SECRET\n};\n\nexport default class TwitterButton extends Component {\n  static propTypes = {\n    type: PropTypes.string,\n    actions: PropTypes.object,\n    children: PropTypes.node,\n    auth: PropTypes.object\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false\n    };\n  }\n\n  async _twitterSignIn() {\n    try {\n      const { invitecode } = this.props.auth;\n      RNTwitterSignIn.init(\n        Constants.TWITTER_COMSUMER_KEY,\n        Constants.TWITTER_CONSUMER_SECRET\n      );\n      const loginData = await RNTwitterSignIn.logIn();\n\n      const { authToken, authTokenSecret } = loginData;\n      if (!authToken || !authTokenSecret) throw new Error('Twitter login failed');\n\n      // this.props.actions.setTwitter(loginData);\n      const serverLogin = await this.props.actions.twitterAuth({\n        ...loginData,\n        invitecode\n      });\n\n      if (serverLogin) {\n        setTimeout(() => {\n          this.props.actions.reloadTab('discover');\n        }, 3000);\n      }\n    } catch (error) {\n      // Alert.alert(error.message);\n    }\n  }\n\n  render() {\n    let text = this.props.type === 'signup' ? 'Sign up' : 'Sign In';\n    text += ' with Twitter';\n    if (this.props.children) text = this.props.children;\n    const isLoggedIn = this.props.auth.twitter;\n    let connected;\n    if (isLoggedIn && !this.props.type === 'signup') {\n      connected = (\n        <BodyText alignSelf=\"center\">Twitter connected! Log in to complete.</BodyText>\n      );\n    }\n\n    return (\n      <View style={{ flex: 0, paddingTop: 20, flexDirection: 'row' }}>\n        {isLoggedIn ? (\n          connected\n        ) : (\n          <View flex={1}>\n            <HoverButton bg={colors.twitterBlue} onPress={() => this._twitterSignIn()}>\n              <View fdirection=\"row\" align={'center'}>\n                <Icon\n                  borderRadius={0}\n                  name={'logo-twitter'}\n                  size={24}\n                  color={'white'}\n                  style={{ color: 'white', marginRight: 10 }}\n                />\n                <ButtonText>{text}</ButtonText>\n              </View>\n            </HoverButton>\n          </View>\n        )}\n      </View>\n    );\n  }\n}\n"],"file":"TwitterButton.component.js"}