{"version":3,"sources":["../../../src/modules/post/invest.actions.js"],"names":["Alert","alert","linkSchema","schema","Entity","idAttribute","postSchema","metaPost","userSchema","investmentSchema","post","investor","updatePostVote","voteObj","type","UPDATE_POST_INVESTMENTS","payload","undoPostVote","UNDO_POST_INVESTMENT","setInvestments","investments","userId","index","SET_INVESTMENTS","loadingInvestments","LOADING_INVESTMENTS","setPostInvestments","data","postId","skip","SET_POST_INVESTMENTS","setUsers","users","SET_USERS","vote","amount","user","undo","displayBetPrompt","dispatch","_id","api","request","method","endpoint","path","body","JSON","stringify","res","undoInvest","investment","isComment","parentPost","showingPushBanner","showBetPrompt","message","getInvestments","limit","query","loadingPostInvestments","LOADING_POST_INVESTMENTS","getPostInvestments","entities","bet","stakedTokens"],"mappings":"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","sourcesContent":["import { normalize, schema } from 'normalizr';\nimport {\n  UPDATE_POST_INVESTMENTS,\n  UNDO_POST_INVESTMENT,\n  SET_POST_INVESTMENTS,\n  SET_INVESTMENTS,\n  LOADING_INVESTMENTS,\n  SET_USERS,\n  LOADING_POST_INVESTMENTS\n} from 'core/actionTypes';\nimport { api, alert } from 'app/utils';\nimport { setPostsSimple } from 'modules/post/post.actions';\nimport {\n  showPushNotificationPrompt,\n  showBetPrompt\n} from 'modules/activity/activity.actions';\n\nconst Alert = alert.Alert();\n\nconst linkSchema = new schema.Entity('links', {}, { idAttribute: '_id' });\n\nconst postSchema = new schema.Entity(\n  'posts',\n  { metaPost: linkSchema },\n  { idAttribute: '_id' }\n);\n\nconst userSchema = new schema.Entity('users', {}, { idAttribute: '_id' });\n\nconst investmentSchema = new schema.Entity(\n  'investments',\n  {\n    post: postSchema,\n    investor: userSchema\n  },\n  { idAttribute: '_id' }\n);\n\nexport function updatePostVote(voteObj) {\n  return {\n    type: UPDATE_POST_INVESTMENTS,\n    payload: voteObj\n  };\n}\n\nexport function undoPostVote(post) {\n  return {\n    type: UNDO_POST_INVESTMENT,\n    payload: post\n  };\n}\n\nexport function setInvestments(investments, userId, index) {\n  return {\n    type: SET_INVESTMENTS,\n    payload: {\n      investments,\n      userId,\n      index\n    }\n  };\n}\n\nexport function loadingInvestments() {\n  return {\n    type: LOADING_INVESTMENTS\n  };\n}\n\nexport function setPostInvestments(data, postId, skip) {\n  return {\n    type: SET_POST_INVESTMENTS,\n    payload: {\n      postId,\n      data,\n      index: skip || 0\n    }\n  };\n}\n\nexport function setUsers(users) {\n  return {\n    type: SET_USERS,\n    payload: users\n  };\n}\n\n// optimistic ui\nexport function vote({ amount, post, user, vote: undo, displayBetPrompt }) {\n  return async dispatch => {\n    try {\n      if (undo) dispatch(undoPostVote(post._id));\n      else dispatch(updatePostVote({ post: post._id, amount }));\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invest',\n          path: '/',\n          body: JSON.stringify({\n            investor: user._id,\n            amount,\n            post\n          })\n        })\n      );\n      if (res.undoInvest) dispatch(undoPostVote(post._id));\n      else dispatch(updatePostVote(res.investment));\n      const isComment = !!post.parentPost;\n      if (amount > 0 && !undo) {\n        const showingPushBanner = await dispatch(\n          showPushNotificationPrompt({\n            type: isComment ? 'upvoteComment' : 'upvotePost'\n          })\n        );\n        if (!showingPushBanner && displayBetPrompt) dispatch(showBetPrompt);\n      }\n      return res;\n    } catch (error) {\n      if (undo) dispatch(updatePostVote({ post: post._id, amount }));\n      else dispatch(undoPostVote(post._id));\n      return Alert.alert(error.message);\n    }\n  };\n}\n\nexport function getInvestments(userId, skip, limit) {\n  return async dispatch => {\n    try {\n      dispatch(loadingInvestments());\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invest',\n          path: '/' + userId,\n          query: { skip, limit }\n        })\n      );\n      const data = normalize({ investments: res }, { investments: [investmentSchema] });\n      dispatch(setPostsSimple(data));\n      dispatch(setInvestments(data, userId, skip));\n    } catch (err) {\n      // console.log(err);\n    }\n  };\n}\n\nexport function loadingPostInvestments(postId) {\n  return {\n    type: LOADING_POST_INVESTMENTS,\n    payload: postId\n  };\n}\n\nexport function getPostInvestments(postId, limit, skip) {\n  return async dispatch => {\n    try {\n      dispatch(loadingPostInvestments(postId));\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'invest',\n          query: { skip, limit },\n          path: `/post/${postId}`\n        })\n      );\n      const data = normalize({ investments: res }, { investments: [investmentSchema] });\n      dispatch(setUsers(data.entities.users));\n      dispatch(setPostInvestments(data, postId, skip));\n    } catch (err) {\n      // console.warn(err);\n    }\n  };\n}\n\nexport function bet({ postId, stakedTokens }) {\n  return async dispatch => {\n    try {\n      const res = await dispatch(\n        api.request({\n          method: 'POST',\n          endpoint: 'invest',\n          path: '/bet',\n          body: JSON.stringify({\n            postId,\n            stakedTokens\n          })\n        })\n      );\n      return dispatch(updatePostVote(res));\n    } catch (err) {\n      Alert.alert(err.message);\n      throw err;\n    }\n  };\n}\n"],"file":"invest.actions.js"}