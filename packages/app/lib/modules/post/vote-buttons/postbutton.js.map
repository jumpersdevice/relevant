{"version":3,"sources":["../../../../src/modules/post/vote-buttons/postbutton.js"],"names":["BUTTON_IMAGES","UPVOTE","white","require","default","active","hover","DOWNVOTE","ButtonImage","Image","isNative","p","disabled","PostButton","propTypes","color","PropTypes","string","alt","isActive","bool","imageSet","oneOf","onPress","func","tooltipData","object","setHover","setActive","images","defaultState","source","console","log","VOTE_BUTTON_SIZE"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Touchable } from 'modules/styled/uni';\nimport styled from 'styled-components/primitives';\nimport { isNative } from 'styles';\nimport Tooltip from 'modules/tooltip/tooltip.component';\nimport { VOTE_BUTTON_SIZE } from 'styles/layout';\n\nconst BUTTON_IMAGES = {\n  UPVOTE: {\n    white: require('public/img/vote_buttons/upvote-white.png'),\n    default: require('public/img/vote_buttons/upvote-grey-outline.png'),\n    active: require('public/img/vote_buttons/upvote-blue.png'),\n    hover: require('public/img/vote_buttons/upvote-blue-outline.png')\n  },\n  DOWNVOTE: {\n    white: require('public/img/vote_buttons/downvote-white.png'),\n    default: require('public/img/vote_buttons/downvote-grey-outline.png'),\n    active: require('public/img/vote_buttons/downvote-red.png'),\n    hover: require('public/img/vote_buttons/downvote-red-outline.png')\n  }\n};\n\nconst ButtonImage = styled(Image)`\n  ${() =>\n    !isNative\n      ? `transition-property: all;\n        transition-duration: 0.2s;\n        transition-timing-function: ease`\n      : ''}\n  ${p =>\n    p.hover && !p.active && !p.disabled && !isNative ? 'transform: scale(1.1);' : ''}\n`;\n\nPostButton.propTypes = {\n  color: PropTypes.string,\n  alt: PropTypes.string,\n  isActive: PropTypes.bool,\n  imageSet: PropTypes.oneOf(['DOWNVOTE', 'UPVOTE']),\n  onPress: PropTypes.func,\n  tooltipData: PropTypes.object\n};\n\nfunction PostButton({ alt, isActive, imageSet, onPress, color, tooltipData }) {\n  const [hover, setHover] = useState(false);\n  const [active, setActive] = useState(false);\n\n  const images = BUTTON_IMAGES[imageSet];\n  const defaultState = images[color] || images.default;\n  const source = (isActive && images.active) || (hover && images.hover) || defaultState;\n  console.log('vote button', source); // eslint-disable-line\n  console.log(BUTTON_IMAGES); // eslint-disable-line\n  return (\n    <Tooltip data={tooltipData} name=\"voteDesk\">\n      <Touchable onPress={onPress} bradius={2}>\n        <ButtonImage\n          w={VOTE_BUTTON_SIZE}\n          h={VOTE_BUTTON_SIZE}\n          alt={alt}\n          resizeMode=\"contain\"\n          source={source}\n          hover={hover}\n          active={active}\n          onMouseDown={() => setActive(1)}\n          onMouseUp={() => setActive(0)}\n          onMouseEnter={() => setHover(1)}\n          onMouseLeave={() => {\n            setHover(0);\n            setActive(0);\n          }}\n        />\n      </Touchable>\n    </Tooltip>\n  );\n}\n\nexport default PostButton;\n"],"file":"postbutton.js"}