{"version":3,"sources":["../../../src/modules/post/post.actions.js"],"names":["Alert","alert","apiServer","process","env","API_SERVER","userSchema","schema","Entity","idAttribute","repostSchema","linkSchema","parentPostSchema","metaPost","user","postSchema","repost","post","parentPost","commentPost","feedSchema","commentary","new","top","twitterFeed","processStrategy","value","parent","key","reqOptions","tk","credentials","headers","Accept","Authorization","DEFAULT_LIMIT","setUsers","users","type","types","SET_USERS","payload","setUserPosts","data","id","index","SET_USER_POSTS","setMyPosts","posts","setRecentPosts","SET_RECENT_POSTS","updatePost","UPDATE_POST","updateRelated","related","SET_RELATED","removePost","REMOVE_POST","postError","POST_ERROR","setTopic","topic","SET_TOPIC_POSTS","_id","setPosts","SET_POSTS","setPostsSimple","SET_POSTS_SIMPLE","getFeed","skip","_tag","limit","tag","dispatch","api","request","method","query","endpoint","path","then","res","feed","entities","errorActions","setError","catch","err","message","match","getTwitterFeed","deletePost","redirect","params","navigationActions","pop","clearPosts","CLEAR_POSTS","getPostsAction","setSelectedPost","setSelectedPostData","clearSelectedPost","getPosts","tags","sort","community","tagsString","length","map","t","join","communityParam","getState","auth","dataType","loadingUserPosts","getUserPosts","userId","responseJSON","error","addUpdatedComment","comment","editPost","body","JSON","stringify","response","getSelectedPost","postId","getRelated","setFeedCount","SET_FEED_COUNT","setSubscriptions","SET_SUBSCRIPTIONS","getSubscriptions","storage","getToken","fetch","json","flag","getPostHtml","link","text","html","setTopPosts","SET_TOP_POSTS","getFlaggedPosts","flagged","shuffleArray","array","i","j","Math","floor","random","getTopPosts","topPosts"],"mappings":"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","sourcesContent":["import { normalize, schema } from 'normalizr';\nimport * as types from 'core/actionTypes';\nimport { storage, api, alert } from 'app/utils';\nimport * as errorActions from 'modules/ui/error.actions';\nimport * as navigationActions from 'modules/navigation/navigation.actions';\n\nconst Alert = alert.Alert();\n\nconst apiServer = process.env.API_SERVER + '/api/';\nconst userSchema = new schema.Entity('users', {}, { idAttribute: '_id' });\nconst repostSchema = new schema.Entity('posts', { idAttribute: '_id' });\n\nconst linkSchema = new schema.Entity('links', {}, { idAttribute: '_id' });\n// const myVoteSchema = new schema.Entity('myVote', {}, { idAttribute: '_id' });\n\nconst parentPostSchema = new schema.Entity(\n  'posts',\n  {\n    metaPost: linkSchema,\n    user: userSchema\n  },\n  { idAttribute: '_id' }\n);\n\nexport const postSchema = new schema.Entity(\n  'posts',\n  {\n    user: userSchema,\n    repost: { post: repostSchema },\n    metaPost: linkSchema,\n    parentPost: parentPostSchema,\n    commentPost: parentPostSchema\n    // myVote: [myVoteSchema]\n  },\n  { idAttribute: '_id' }\n);\n\nconst feedSchema = new schema.Entity(\n  'posts',\n  {\n    commentary: [postSchema],\n    new: [postSchema],\n    top: [postSchema],\n    twitterFeed: [postSchema],\n\n    user: userSchema,\n    repost: { post: repostSchema },\n    metaPost: linkSchema\n    // twitterCommentary: [postSchema],\n  },\n  {\n    idAttribute: '_id',\n    processStrategy: (value, parent, key) => {\n      value[key] = value.commentary;\n      return value;\n    }\n  }\n);\n\nconst reqOptions = tk => ({\n  credentials: 'include',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${tk}`\n  }\n});\n\n// load 5 posts at a time\nconst DEFAULT_LIMIT = 10;\n\nexport function setUsers(users) {\n  return {\n    type: types.SET_USERS,\n    payload: users\n  };\n}\n\nexport function setUserPosts(data, id, index) {\n  return {\n    type: types.SET_USER_POSTS,\n    payload: {\n      data,\n      id,\n      index\n    }\n  };\n}\n\nexport function setMyPosts(posts) {\n  return {\n    type: 'SET_MY_POSTS',\n    payload: posts\n  };\n}\n\nexport function setRecentPosts(posts) {\n  return {\n    type: types.SET_RECENT_POSTS,\n    payload: posts\n  };\n}\n\nexport function updatePost(post) {\n  return {\n    type: types.UPDATE_POST,\n    payload: post\n  };\n}\n\nexport function updateRelated(related) {\n  return {\n    type: types.SET_RELATED,\n    payload: related\n  };\n}\n\nexport function removePost(post) {\n  return {\n    type: types.REMOVE_POST,\n    payload: post\n  };\n}\n\nexport function postError() {\n  return {\n    type: types.POST_ERROR\n  };\n}\n\nexport function setTopic(data, type, index, topic) {\n  return {\n    type: types.SET_TOPIC_POSTS,\n    payload: {\n      topic: topic._id || topic,\n      data,\n      type,\n      index\n    }\n  };\n}\n\nexport function setPosts(data, type, index) {\n  return {\n    type: types.SET_POSTS,\n    payload: {\n      data,\n      type,\n      index\n    }\n  };\n}\n\nexport function setPostsSimple(data) {\n  return {\n    type: types.SET_POSTS_SIMPLE,\n    payload: { data }\n  };\n}\n\nexport function getFeed(skip, _tag) {\n  if (!skip) skip = 0;\n  const type = 'feed';\n  const limit = DEFAULT_LIMIT;\n  const tag = _tag ? _tag._id : null;\n\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: { skip, limit, tag },\n        endpoint: 'feed',\n        path: '/'\n      })\n    )\n      .then(res => {\n        const data = normalize({ feed: res }, { feed: [postSchema] });\n        dispatch(setUsers(data.entities.users));\n        dispatch(setPosts(data, type, skip));\n        dispatch(errorActions.setError('read', false));\n      })\n      .catch(err => {\n        // TODO do we need this?\n        if (!err.message.match('Get fail for key: token')) {\n          dispatch(errorActions.setError('read', true, err.message));\n        }\n      });\n}\n\nexport function getTwitterFeed(skip, _tag) {\n  if (!skip) skip = 0;\n  const type = 'twitterFeed';\n  const limit = DEFAULT_LIMIT;\n  const tag = _tag ? _tag._id : null;\n\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'GET',\n        query: { skip, limit, tag },\n        endpoint: 'twitterFeed',\n        path: '/'\n      })\n    )\n      .then(res => {\n        const data = normalize({ twitterFeed: res }, { twitterFeed: [feedSchema] });\n        dispatch(setPosts(data, type, skip));\n        dispatch(errorActions.setError('read', false));\n      })\n      .catch(err => {\n        // TODO do we need this?\n        if (!err.message.match('Get fail for key: token')) {\n          dispatch(errorActions.setError('read', true, err.message));\n        }\n      });\n}\n\nexport function deletePost(post, redirect) {\n  return dispatch =>\n    dispatch(\n      api.request({\n        method: 'DELETE',\n        endpoint: 'post',\n        params: { id: post._id }\n      })\n    )\n      .then(() => {\n        dispatch(removePost(post));\n        if (redirect) dispatch(navigationActions.pop());\n      })\n      .catch(null);\n}\n\nexport function clearPosts(type) {\n  return {\n    type: types.CLEAR_POSTS,\n    payload: {\n      type\n    }\n  };\n}\n\nexport function getPostsAction(type) {\n  return {\n    type: 'GET_POSTS',\n    payload: type\n  };\n}\n\nexport function setSelectedPost(id) {\n  return {\n    type: 'SET_SELECTED_POST',\n    payload: id\n  };\n}\n\nexport function setSelectedPostData(post) {\n  return {\n    type: 'SET_SELECTED_POST_DATA',\n    payload: post\n  };\n}\n\nexport function clearSelectedPost() {\n  return {\n    type: 'CLEAR_SELECTED_POST'\n  };\n}\n\n// this function queries the meta posts\nexport function getPosts(skip, tags, sort, limit, community) {\n  let tagsString = '';\n  if (!skip) skip = 0;\n  if (!limit) limit = DEFAULT_LIMIT;\n  if (!sort) sort = null;\n  let tag = null;\n\n  // change this if we want to store top and new in separate places\n  const type = sort ? 'top' : 'new';\n  let topic;\n\n  if (tags && tags.length) {\n    tagsString = tags.map(t => t._id || t).join(', ');\n    tag = tagsString;\n    if (tags.length === 1) topic = tags[0];\n  }\n  const communityParam = community ? { community } : {};\n\n  return async (dispatch, getState) => {\n    try {\n      const { auth } = getState();\n      dispatch(getPostsAction(type));\n      const res = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'communityFeed',\n          query: { skip, sort, limit, tag, ...communityParam },\n          user: auth.user\n        })\n      );\n\n      const dataType = feedSchema;\n      const data = normalize({ [type]: res }, { [type]: [dataType] });\n\n      if (topic) {\n        dispatch(setTopic(data, type, skip, topic));\n      } else dispatch(setPosts(data, type, skip));\n      dispatch(errorActions.setError('discover', false));\n    } catch (err) {\n      dispatch(errorActions.setError('discover', true, err.message));\n    }\n  };\n}\n\nexport function loadingUserPosts() {\n  return {\n    type: 'LOADING_USER_POSTS'\n  };\n}\n\nexport function getUserPosts(skip, limit, userId) {\n  if (!skip) skip = 0;\n  if (!limit) limit = 5;\n  return async dispatch => {\n    dispatch(loadingUserPosts());\n    return dispatch(\n      api.request({\n        method: 'GET',\n        endpoint: 'post/user',\n        params: { id: userId },\n        query: { skip, limit }\n      })\n    )\n      .then(responseJSON => {\n        const data = normalize({ [userId]: responseJSON }, { [userId]: [postSchema] });\n        dispatch(setUsers(data.entities.users));\n        dispatch(setUserPosts(data, userId, skip));\n        dispatch(errorActions.setError('profile', false));\n      })\n      .catch(error => {\n        dispatch(errorActions.setError('profile', true, error.message));\n      });\n  };\n}\n\nexport function addUpdatedComment(comment) {\n  return {\n    type: 'UPDATE_COMMENT',\n    payload: comment\n  };\n}\n\nexport function editPost(post) {\n  return async dispatch => {\n    try {\n      const response = await dispatch(\n        api.request({\n          method: 'PUT',\n          endpoint: 'post',\n          body: JSON.stringify(post)\n        })\n      );\n      dispatch(updatePost(response));\n      return true;\n    } catch (err) {\n      Alert.alert('Post error please try again', err.message);\n      return false;\n    }\n  };\n}\n\nexport function getSelectedPost(postId) {\n  return async (dispatch, getState) => {\n    try {\n      const { auth } = getState();\n      const post = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'post',\n          path: '',\n          params: { id: postId },\n          user: auth.user\n        })\n      );\n      if (!post) {\n        dispatch(removePost(postId));\n      } else {\n        dispatch(updatePost(post));\n      }\n      dispatch(errorActions.setError('singlepost', false));\n      return post;\n    } catch (error) {\n      dispatch(errorActions.setError('singlepost', true, error.message));\n      return false;\n    }\n  };\n}\n\nexport function getRelated(postId) {\n  return async dispatch => {\n    try {\n      const responseJSON = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'metaPost',\n          path: '/related',\n          params: { id: postId }\n        })\n      );\n      dispatch(\n        updateRelated({\n          related: responseJSON,\n          postId\n        })\n      );\n      return responseJSON;\n    } catch (error) {\n      return false;\n    }\n  };\n}\n\nexport function setFeedCount(data) {\n  return {\n    type: types.SET_FEED_COUNT,\n    payload: data\n  };\n}\n\nexport function setSubscriptions(data) {\n  return {\n    type: types.SET_SUBSCRIPTIONS,\n    payload: data\n  };\n}\n\nexport function getSubscriptions() {\n  return dispatch =>\n    storage\n      .getToken()\n      .then(tk =>\n        fetch(`${apiServer}subscription/user`, {\n          ...reqOptions(tk),\n          method: 'GET'\n        })\n      )\n      .then(response => response.json())\n      .then(responseJSON => dispatch(setSubscriptions(responseJSON)))\n      .catch(null);\n}\n\nexport function flag(post) {\n  return dispatch =>\n    storage\n      .getToken()\n      .then(tk =>\n        fetch(`${apiServer}post/flag`, {\n          ...reqOptions(tk),\n          method: 'PUT',\n          body: JSON.stringify({ postId: post._id })\n        })\n      )\n      .then(response => response.json())\n      .then(responseJSON => {\n        Alert.alert('Thank you', 'Flagged posts will be reviewed by the administrators');\n        dispatch(updatePost(responseJSON));\n      })\n      .catch(null);\n}\n\nexport function getPostHtml(post) {\n  return dispatch =>\n    fetch(`${apiServer}post/readable?uri=${post.link}`, {\n      method: 'GET'\n    })\n      .then(response => response.text())\n      .then(html => {\n        dispatch(updatePost({ ...post, html }));\n      })\n      .catch(null);\n}\n\nexport function setTopPosts(data) {\n  return {\n    type: types.SET_TOP_POSTS,\n    payload: data\n  };\n}\n\nexport function getFlaggedPosts(skip) {\n  if (!skip) skip = 0;\n  const type = 'flagged';\n\n  return async dispatch => {\n    try {\n      const flagged = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'post',\n          path: '/flagged',\n          query: { skip, limit: DEFAULT_LIMIT }\n        })\n      );\n      const data = normalize({ [type]: flagged }, { [type]: [postSchema] });\n      dispatch(setPosts(data, type, skip));\n    } catch (err) {\n      Alert.alert(err.message, 'error');\n    }\n  };\n}\n\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nexport function getTopPosts() {\n  return async dispatch => {\n    try {\n      const topPosts = await dispatch(\n        api.request({\n          method: 'GET',\n          endpoint: 'post',\n          path: '/topPosts'\n        })\n      );\n      return dispatch(setTopPosts(shuffleArray(topPosts)));\n    } catch (error) {\n      return false;\n    }\n  };\n}\n"],"file":"post.actions.js"}