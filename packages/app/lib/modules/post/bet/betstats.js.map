{"version":3,"sources":["../../../../src/modules/post/bet/betstats.js"],"names":["BetStats","propTypes","post","PropTypes","object","earning","amount","number","maxBet","community","investments","state","posts","_id","map","filter","inv","stakedTokens","investor","auth","user","dispatch","existingShares","shares","existingStake","bets","length","users","invText","data","totalShares","postRewards","shareOfRewards","shareOfRewardsPercent","potentialRewards","shareEl","top","colors","blue"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { SmallText, Text, View } from 'modules/styled/uni';\nimport { computeShares } from 'app/utils/post';\nimport { computePostPayout } from 'app/utils/rewards';\nimport { useCommunity } from 'modules/community/community.selectors';\nimport { PieChart } from 'modules/stats/piechart';\nimport { getPostInvestments } from 'modules/post/invest.actions';\nimport { colors } from 'styles';\nimport { abbreviateNumber as toFixed } from 'utils/numbers';\nimport SmallCoinStat from './smallcoinstat';\n\nBetStats.propTypes = {\n  post: PropTypes.object,\n  earning: PropTypes.object,\n  amount: PropTypes.number,\n  maxBet: PropTypes.number\n};\n\nexport default function BetStats({ post, amount, earning, maxBet }) {\n  const community = useCommunity();\n\n  const investments = useSelector(state =>\n    (state.investments.posts[post._id] || [])\n      .map(_id => state.investments.investments[_id])\n      .filter(inv => inv.stakedTokens > 0 && inv.investor !== state.auth.user._id)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getPostInvestments(post._id));\n  }, [dispatch, post._id]);\n\n  const existingShares = earning ? earning.shares : 0;\n  const existingStake = earning ? earning.stakedTokens : 0;\n  const bets = investments.length;\n  const users = bets > 1 ? 'users' : 'user';\n  const invText = bets\n    ? `${bets} ${users} bet a total of ${toFixed(\n        post.data.totalShares - existingStake\n      )} coins on this post`\n    : '';\n  // : 'You are the first to bet on this post!';\n\n  const shares = computeShares({ post, stakedTokens: amount });\n  const postRewards = computePostPayout(post.data, community);\n  const shareOfRewards = !bets\n    ? (existingStake + amount) / (maxBet + existingStake)\n    : (shares + existingShares) / (post.data.shares + shares);\n\n  const shareOfRewardsPercent = shareOfRewards * 100;\n  const potentialRewards = postRewards * shareOfRewards;\n  // const showPie = shareOfRewards !== 1;\n\n  const shareEl = (\n    <SmallText inline={1}>\n      {'  '}\n      <Text style={{ top: 2 }} inline={1} mb={-0.5}>\n        <PieChart\n          w={'12px'}\n          h={'12px'}\n          percent={100 - shareOfRewardsPercent}\n          strokeWidth={30}\n          color={colors.blue}\n        />\n      </Text>{' '}\n      {toFixed(shareOfRewardsPercent)}%\n    </SmallText>\n  );\n\n  return (\n    <Fragment>\n      <SmallText>{invText}</SmallText>\n      {potentialRewards > 0 && (\n        <View mt={0.25} fdirection={'row'}>\n          <SmallText inline={1}>\n            Your estimated rewards: <SmallCoinStat amount={potentialRewards} />\n          </SmallText>\n          <SmallText inline={1}>{shareEl} of total</SmallText>\n        </View>\n      )}\n    </Fragment>\n  );\n}\n"],"file":"betstats.js"}