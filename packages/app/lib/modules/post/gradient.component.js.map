{"version":3,"sources":["../../../src/modules/post/gradient.component.js"],"names":["bgGradient","previewGradient","Gradient","title","image","preview","textOverlay","colors","generateColors","start","x","y","end","flex","string","color","length","Math","max","parseInt","propTypes","PropTypes","bool"],"mappings":"kLAAA,oDACA,6DACA,sG,oGAEA,GAAMA,CAAAA,UAAU,CAAG,CACjB,0BADiB,CAEjB,0BAFiB,CAGjB,yBAHiB,CAIjB,wBAJiB,CAKjB,wBALiB,CAAnB,CAQA,GAAMC,CAAAA,eAAe,CAAG,CACtB,yBADsB,CAEtB,wBAFsB,CAGtB,wBAHsB,CAAxB,CAMe,QAASC,CAAAA,QAAT,MAA6C,IAAzBC,CAAAA,KAAyB,MAAzBA,KAAyB,CAAlBC,KAAkB,MAAlBA,KAAkB,CAAXC,OAAW,MAAXA,OAAW,CAC1D,GAAMC,CAAAA,WAAW,CAAGD,OAAO,CAAGJ,eAAH,CAAqBD,UAAhD,CACA,GAAMO,CAAAA,MAAM,CAAGH,KAAK,CAAGE,WAAH,CAAiBE,cAAc,CAACL,KAAD,CAAnD,CAEA,GAAMM,CAAAA,KAAK,CAAGL,KAAK,CAAG,CAAEM,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,GAAb,CAAH,CAAwB,CAAED,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,GAAb,CAA3C,CACA,GAAMC,CAAAA,GAAG,CAAGR,KAAK,CAAG,CAAEM,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,GAAb,CAAH,CAAwB,CAAED,CAAC,CAAE,GAAL,CAAUC,CAAC,CAAE,GAAb,CAAzC,CAEA,MAAO,8BAAC,qCAAD,EAAgB,KAAK,CAAEF,KAAvB,CAA8B,GAAG,CAAEG,GAAnC,CAAwC,MAAM,CAAEL,MAAhD,CAAwD,KAAK,CAAE,CAAEM,IAAI,CAAE,CAAR,CAA/D,iEAAP,CACD,CAED,QAASL,CAAAA,cAAT,CAAwBM,MAAxB,CAAgC,CAC9B,GAAIC,CAAAA,KAAK,CAAGD,MAAM,CAAGA,MAAM,CAACE,MAAV,CAAmB,CAArC,CACAD,KAAK,CAAIA,KAAK,CAAG,GAAT,CAAgB,GAAhB,EAAuB,GAA/B,CACAA,KAAK,CAAGE,IAAI,CAACC,GAAL,CAAS,GAAT,CAAcH,KAAd,CAAR,CACA,MAAO,gBACGI,QAAQ,CAACJ,KAAK,CAAG,EAAT,CAAa,EAAb,CADX,mCAEGI,QAAQ,CAACJ,KAAD,CAAQ,EAAR,CAFX,wCAGGI,QAAQ,CAACJ,KAAK,CAAG,EAAT,CAAa,EAAb,CAHX,oBAAP,CAKD,CAEDb,QAAQ,CAACkB,SAAT,CAAqB,CACnBf,OAAO,CAAEgB,mBAAUC,IADA,CAEnBlB,KAAK,CAAEiB,mBAAUC,IAFE,CAGnBnB,KAAK,CAAEkB,mBAAUP,MAHE,CAArB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearGradient from 'react-native-linear-gradient';\n\nconst bgGradient = [\n  'hsla(240, 70%, 30%, .03)',\n  'hsla(240, 70%, 20%, .08)',\n  'hsla(240, 70%, 10%, .4)',\n  'hsla(240, 70%, 8%, .7)',\n  'hsla(240, 70%, 5%, .6)'\n];\n\nconst previewGradient = [\n  'hsla(240, 70%, 10%, .4)',\n  'hsla(240, 70%, 8%, .7)',\n  'hsla(240, 70%, 5%, .6)'\n];\n\nexport default function Gradient({ title, image, preview }) {\n  const textOverlay = preview ? previewGradient : bgGradient;\n  const colors = image ? textOverlay : generateColors(title);\n\n  const start = image ? { x: 0.5, y: 0.0 } : { x: 0.8, y: 0.0 };\n  const end = image ? { x: 0.5, y: 1.0 } : { x: 0.2, y: 1.0 };\n\n  return <LinearGradient start={start} end={end} colors={colors} style={{ flex: 1 }} />;\n}\n\nfunction generateColors(string) {\n  let color = string ? string.length : 0;\n  color = (color % 220) + 200 || 200;\n  color = Math.max(100, color);\n  return [\n    `hsla(${parseInt(color - 30, 10)}, 100%, 50%, 1)`,\n    `hsla(${parseInt(color, 10)},      100%, 50%, 1)`,\n    `hsla(${parseInt(color + 30, 10)}, 100%, 50%, 1)`\n  ];\n}\n\nGradient.propTypes = {\n  preview: PropTypes.bool,\n  image: PropTypes.bool,\n  title: PropTypes.string\n};\n"],"file":"gradient.component.js"}