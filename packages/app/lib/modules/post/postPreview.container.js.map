{"version":3,"sources":["../../../src/modules/post/postPreview.container.js"],"names":["PostPreview","props","posts","postId","community","actions","auth","screenSize","post","link","metaPost","links","parentId","parentPost","_id","goToPost","propTypes","PropTypes","object","number","string","mapStateToProps","state","mapDispatchToProps","dispatch","navigationActions"],"mappings":"mWAAA,oDACA,6DACA,uCACA,4BACA,sEACA,mFACA,4EACA,kCACA,2F,g5BAEA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,IACnBC,CAAAA,KADmB,CACqCD,KADrC,CACnBC,KADmB,CACZC,MADY,CACqCF,KADrC,CACZE,MADY,CACJC,SADI,CACqCH,KADrC,CACJG,SADI,CACOC,OADP,CACqCJ,KADrC,CACOI,OADP,CACgBC,IADhB,CACqCL,KADrC,CACgBK,IADhB,CACsBC,UADtB,CACqCN,KADrC,CACsBM,UADtB,CAE3B,GAAMC,CAAAA,IAAI,CAAGN,KAAK,CAACA,KAAN,CAAYC,MAAZ,CAAb,CACA,GAAI,CAACK,IAAL,CAAW,MAAO,KAAP,CAEX,GAAMC,CAAAA,IAAI,CAAGD,IAAI,EAAIA,IAAI,CAACE,QAAb,EAAyBR,KAAK,CAACS,KAAN,CAAYH,IAAI,CAACE,QAAjB,CAAtC,CACA,GAAME,CAAAA,QAAQ,CAAGJ,IAAI,CAACK,UAAL,CAAkBL,IAAI,CAACK,UAAL,CAAgBC,GAAhB,EAAuBN,IAAI,CAACK,UAA9C,CAA2DL,IAAI,CAACM,GAAjF,CAEA,MACE,8BAAC,SAAD,iEACE,6BAAC,cAAD,EACE,OAAO,CAAE,yBAAMT,CAAAA,OAAO,CAACU,QAAR,CAAiB,CAAED,GAAG,CAAEF,QAAP,CAAiBR,SAAS,CAATA,SAAjB,CAAjB,CAAN,EADX,CAEE,EAAE,YAAMA,SAAN,kBAAwBQ,QAAxB,CAFJ,gEAIE,6BAAC,SAAD,iEACGL,UAAU,CACT,6BAAC,uBAAD,EAAgB,OAAO,KAAvB,CAAwB,IAAI,CAAEE,IAA9B,CAAoC,IAAI,CAAED,IAA1C,CAAgD,MAAM,KAAtD,iEADS,CAGT,6BAAC,iBAAD,EAAU,OAAO,KAAjB,CAAkB,IAAI,CAAEC,IAAxB,CAA8B,IAAI,CAAED,IAApC,CAA0C,MAAM,KAAhD,CAAiD,IAAI,CAAEF,IAAvD,iEAJJ,CAJF,CADF,CADF,CAgBD,CAxBD,CA0BAN,WAAW,CAACgB,SAAZ,CAAwB,CACtBd,KAAK,CAAEe,mBAAUC,MADK,CAEtBX,UAAU,CAAEU,mBAAUE,MAFA,CAGtBhB,MAAM,CAAEc,mBAAUG,MAHI,CAItBhB,SAAS,CAAEa,mBAAUG,MAJC,CAKtBf,OAAO,CAAEY,mBAAUC,MALG,CAMtBZ,IAAI,CAAEW,mBAAUC,MANM,CAAxB,CASA,QAASG,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACLpB,KAAK,CAAEoB,KAAK,CAACpB,KADR,CAELI,IAAI,CAAEgB,KAAK,CAAChB,IAFP,CAAP,CAID,CAED,GAAMiB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCnB,OAAO,CAAE,+CAEFoB,iBAFE,EAIPD,QAJO,CAD6B,CAAL,EAAnC,C,aASe,wBAAQH,eAAR,CAAyBE,kBAAzB,EAA6CvB,WAA7C,C","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PostInfo from 'modules/post/postinfo.component';\nimport PostInfoMobile from 'modules/post/postinfo.mobile.component';\nimport ULink from 'modules/navigation/ULink.component';\nimport { View } from 'modules/styled/uni';\nimport * as navigationActions from 'modules/navigation/navigation.actions';\n\nconst PostPreview = props => {\n  const { posts, postId, community, actions, auth, screenSize } = props;\n  const post = posts.posts[postId];\n  if (!post) return null;\n\n  const link = post && post.metaPost && posts.links[post.metaPost];\n  const parentId = post.parentPost ? post.parentPost._id || post.parentPost : post._id;\n\n  return (\n    <View>\n      <ULink\n        onPress={() => actions.goToPost({ _id: parentId, community })}\n        to={`/${community}/post/${parentId}`}\n      >\n        <View>\n          {screenSize ? (\n            <PostInfoMobile preview link={link} post={post} noLink />\n          ) : (\n            <PostInfo preview link={link} post={post} noLink auth={auth} />\n          )}\n        </View>\n      </ULink>\n    </View>\n  );\n};\n\nPostPreview.propTypes = {\n  posts: PropTypes.object,\n  screenSize: PropTypes.number,\n  postId: PropTypes.string,\n  community: PropTypes.string,\n  actions: PropTypes.object,\n  auth: PropTypes.object\n};\n\nfunction mapStateToProps(state) {\n  return {\n    posts: state.posts,\n    auth: state.auth\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators(\n    {\n      ...navigationActions\n    },\n    dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostPreview);\n"],"file":"postPreview.container.js"}