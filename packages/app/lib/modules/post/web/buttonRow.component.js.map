{"version":3,"sources":["../../../../src/modules/post/web/buttonRow.component.js"],"names":["PostButtonRow","propTypes","post","PropTypes","object","hidePostButtons","bool","setActiveComment","func","parentPost","props","screenSize","state","navigation","community","auth","url","e","preventDefault","id","colors","blue"],"mappings":"qVAAA,qDACA,uCACA,qCACA,6DACA,uCACA,+EACA,0FACA,yCACA,yC,yGAEAA,aAAa,CAACC,SAAd,CAA0B,CACxBC,IAAI,CAAEC,mBAAUC,MADQ,CAExBC,eAAe,CAAEF,mBAAUG,IAFH,CAGxBC,gBAAgB,CAAEJ,mBAAUK,IAHJ,CAIxBC,UAAU,CAAEN,mBAAUC,MAJE,CAA1B,C,aAOe,gBAAKJ,aAAL,C,0BAEf,QAASA,CAAAA,aAAT,CAAuBU,KAAvB,CAA8B,IACpBR,CAAAA,IADoB,CACoCQ,KADpC,CACpBR,IADoB,CACdG,eADc,CACoCK,KADpC,CACdL,eADc,CACGE,gBADH,CACoCG,KADpC,CACGH,gBADH,CACqBE,UADrB,CACoCC,KADpC,CACqBD,UADrB,CAE5B,GAAME,CAAAA,UAAU,CAAG,4BAAY,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,UAAN,CAAiBF,UAArB,EAAjB,CAAnB,CACA,GAAMG,CAAAA,SAAS,CAAG,4BAAY,SAAAF,KAAK,QAAIA,CAAAA,KAAK,CAACG,IAAN,CAAWD,SAAf,EAAjB,CAAlB,CAEA,GAAME,CAAAA,GAAG,CAAG,6BAA+B,qBAAWF,SAAX,CAAsBZ,IAAtB,CAA3C,CAEA,MACE,8BAAC,SAAD,EACE,UAAU,CAAC,KADb,CAEE,OAAO,CAAC,eAFV,CAGE,KAAK,CAAC,QAHR,CAIE,IAAI,CAAE,CAJR,gEAOG,CAACG,eAAD,EAAoBM,UAApB,CACC,6BAAC,SAAD,EAAM,CAAC,CAAE,EAAT,gEACE,6BAAC,oBAAD,0BAAiBD,KAAjB,EAAwB,IAAI,CAAER,IAA9B,CAAoC,UAAU,KAA9C,kEADF,CADD,CAIG,IAXN,CAYE,6BAAC,SAAD,EAAM,UAAU,CAAC,KAAjB,gEACE,6BAAC,cAAD,EACE,EAAE,KADJ,CAEE,EAAE,CAAEK,gBAAgB,CAAG,GAAH,CAASS,GAF/B,CAGE,MAAM,KAHR,CAIE,YAAY,CAAE,IAJhB,CAKE,OAAO,CAAE,iBAAAC,CAAC,CAAI,CACZ,GAAI,CAACV,gBAAL,CAAuB,OACvBU,CAAC,CAACC,cAAF,GACAX,gBAAgB,CAACL,IAAI,CAACiB,EAAN,CAAhB,CACD,CATH,CAUE,OAAO,CAAE,iBAAAF,CAAC,CAAI,CACZA,CAAC,CAACC,cAAF,GACAX,gBAAgB,CAACL,IAAI,CAACiB,EAAN,CAAhB,CACD,CAbH,gEAeE,6BAAC,YAAD,EAAS,EAAE,CAAE,CAAb,CAAgB,CAAC,CAAEC,eAAOC,IAA1B,iEACGZ,UAAU,CAAG,OAAH,CAAa,SAD1B,CAfF,CADF,CAoBE,6BAAC,cAAD,EACE,EAAE,KADJ,CAEE,EAAE,CAAC,GAFL,CAGE,YAAY,CAAE,IAHhB,CAIE,MAAM,KAJR,CAKE,OAAO,CAAE,iBAAAQ,CAAC,CAAI,CACZA,CAAC,CAACC,cAAF,GACA,0BAAgBF,GAAhB,EACD,CARH,CASE,OAAO,CAAE,iBAAAC,CAAC,CAAI,CACZA,CAAC,CAACC,cAAF,GACA,0BAAgBF,GAAhB,EACD,CAZH,gEAcE,6BAAC,YAAD,EAAS,CAAC,CAAEI,eAAOC,IAAnB,yEAdF,CApBF,CAZF,CADF,CAoDD","sourcesContent":["import React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { View, CTALink } from 'modules/styled/uni';\nimport PropTypes from 'prop-types';\nimport { colors } from 'app/styles';\nimport ULink from 'modules/navigation/ULink.component';\nimport PostButtons from 'modules/post/vote-buttons/postbuttons.container';\nimport { copyToClipBoard } from 'app/utils/text';\nimport { getPostUrl } from 'app/utils/post';\n\nPostButtonRow.propTypes = {\n  post: PropTypes.object,\n  hidePostButtons: PropTypes.bool,\n  setActiveComment: PropTypes.func,\n  parentPost: PropTypes.object\n};\n\nexport default memo(PostButtonRow);\n\nfunction PostButtonRow(props) {\n  const { post, hidePostButtons, setActiveComment, parentPost } = props;\n  const screenSize = useSelector(state => state.navigation.screenSize);\n  const community = useSelector(state => state.auth.community);\n\n  const url = 'https://relevant.community' + getPostUrl(community, post);\n\n  return (\n    <View\n      fdirection=\"row\"\n      justify=\"space-between\"\n      align=\"center\"\n      wrap={1}\n      // stop-gap to avoid the page dimenisons breaking on deeply nested comments\n    >\n      {!hidePostButtons && screenSize ? (\n        <View w={12}>\n          <PostButtons {...props} post={post} horizontal />\n        </View>\n      ) : null}\n      <View fdirection=\"row\">\n        <ULink\n          hu\n          to={setActiveComment ? '#' : url}\n          inline\n          authrequired={true}\n          onClick={e => {\n            if (!setActiveComment) return;\n            e.preventDefault();\n            setActiveComment(post.id);\n          }}\n          onPress={e => {\n            e.preventDefault();\n            setActiveComment(post.id);\n          }}\n        >\n          <CTALink mr={3} c={colors.blue}>\n            {parentPost ? 'Reply' : 'Comment'}\n          </CTALink>\n        </ULink>\n        <ULink\n          hu\n          to=\"#\"\n          authrequired={true}\n          inline\n          onClick={e => {\n            e.preventDefault();\n            copyToClipBoard(url);\n          }}\n          onPress={e => {\n            e.preventDefault();\n            copyToClipBoard(url);\n          }}\n        >\n          <CTALink c={colors.blue}>Share</CTALink>\n        </ULink>\n      </View>\n    </View>\n  );\n}\n"],"file":"buttonRow.component.js"}