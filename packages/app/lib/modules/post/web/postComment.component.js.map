{"version":3,"sources":["../../../../src/modules/post/web/postComment.component.js"],"names":["CommentText","styled","Text","fonts","commentText","Container","View","PostComment","props","comment","auth","postUrl","body","embeddedUser","postDate","console","warning","Component","PropTypes","object","string"],"mappings":"6zBAAA,qDACA,6DAEA,6EACA,gFACA,+EACA,uCACA,qC,8zBAEA,GAAMA,CAAAA,WAAW,CAAGC,oBAAOC,IAAV,8FACbC,cAAMC,WADO,CAAjB,CAIA,GAAMC,CAAAA,SAAS,CAAGJ,oBAAOK,IAAV,oJACA,mBAAO,CAAP,CADA,CAGC,mBAAO,GAAP,CAHD,CAAf,C,GAOMC,CAAAA,W,iSAOK,iBAC4B,KAAKC,KADjC,CACCC,OADD,aACCA,OADD,CACUC,IADV,aACUA,IADV,CACgBC,OADhB,aACgBA,OADhB,CAEP,GAAI,CAACF,OAAD,EAAY,CAACA,OAAO,CAACG,IAAzB,CAA+B,CAC7B,MAAO,KAAP,CACD,CACD,MACE,8BAAC,SAAD,EAAM,EAAE,CAAE,mBAAO,CAAP,CAAV,CAAqB,UAAU,CAAE,KAAjC,CAAwC,KAAK,CAAE,QAA/C,gEACE,6BAAC,gBAAD,EACE,IAAI,CAAEH,OAAO,CAACI,YADhB,CAEE,IAAI,CAAEH,IAFR,CAGE,QAAQ,CAAED,OAAO,CAACK,QAHpB,CAIE,WAAW,CAAE,sBAAM,CACjBC,OAAO,CAACC,OAAR,CAAgB,OAAhB,EACD,CANH,CAOE,aAAa,KAPf,gEADF,CAUE,6BAAC,SAAD,iEACE,6BAAC,cAAD,EAAO,EAAE,CAAEL,OAAX,iEACE,6BAAC,WAAD,kEAAcF,OAAO,CAACG,IAAtB,CADF,CADF,CAVF,CADF,CAkBD,C,yBA9BuBK,gB,+BAApBV,W,aACe,CACjBG,IAAI,CAAEQ,mBAAUC,MADC,CAEjBV,OAAO,CAAES,mBAAUC,MAFF,CAGjBR,OAAO,CAAEO,mBAAUE,MAHF,C,eAgCNb,W","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n// import AvatarBox from 'modules/user/avatarbox.component';\nimport Avatar from 'modules/user/UAvatar.component';\nimport styled from 'styled-components/primitives';\nimport ULink from 'modules/navigation/ULink.component';\nimport { sizing, fonts } from 'app/styles';\nimport { View } from 'modules/styled/uni';\n\nconst CommentText = styled.Text`\n  ${fonts.commentText}\n`;\n\nconst Container = styled.View`\n  padding: 0 ${sizing(1)};\n  flex-shrink: 1;\n  max-height: ${sizing(4.5)};\n  overflow: hidden;\n`;\n\nclass PostComment extends Component {\n  static propTypes = {\n    auth: PropTypes.object,\n    comment: PropTypes.object,\n    postUrl: PropTypes.string\n  };\n\n  render() {\n    const { comment, auth, postUrl } = this.props;\n    if (!comment || !comment.body) {\n      return null;\n    }\n    return (\n      <View mt={sizing(2)} fdirection={'row'} align={'center'}>\n        <Avatar\n          user={comment.embeddedUser}\n          auth={auth}\n          postTime={comment.postDate}\n          setSelected={() => {\n            console.warning('TODO:'); // eslint-disable-line\n          }}\n          showRelevance\n        />\n        <Container>\n          <ULink to={postUrl}>\n            <CommentText>{comment.body}</CommentText>\n          </ULink>\n        </Container>\n      </View>\n    );\n  }\n}\n\nexport default PostComment;\n"],"file":"postComment.component.js"}