{"version":3,"sources":["../../../../src/modules/stats/mobile/percent.component.js"],"names":["styles","Percent","percent","Math","max","numbers","percentChange","props","user","percentPretty","abbreviateNumber","animate","clearTimeout","animationTimer","newPercent","newPercentPretty","parseFloat","forceUpdate","setTimeout","fontSize","fontFamily","letterSpacing","percentComponent","flexDirection","alignItems","color","green","marginBottom","textAlign","bebas","Component","PropTypes","object","number","string","localStyles","StyleSheet","create","globalStyles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport { numbers } from 'app/utils';\nimport { globalStyles, green } from 'app/styles/global';\nimport get from 'lodash/get';\n\nlet styles;\n\nclass Percent extends Component {\n  static propTypes = {\n    user: PropTypes.object,\n    fontSize: PropTypes.number,\n    fontFamily: PropTypes.string\n  };\n\n  componentDidMount() {\n    this.percent = Math.max(0, numbers.percentChange(get(this.props.user, 'relevance')));\n    this.percentPretty = numbers.abbreviateNumber(this.percent);\n    this.animate();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.animationTimer);\n  }\n\n  animate() {\n    const newPercent = Math.max(\n      0,\n      numbers.percentChange(get(this.props.user, 'relevance'))\n    );\n    const newPercentPretty = numbers.abbreviateNumber(newPercent);\n\n    if (parseFloat(this.percentPretty) !== parseFloat(newPercentPretty)) {\n      this.percent = newPercent;\n      this.forceUpdate();\n    }\n    this.animationTimer = setTimeout(() => this.animate(), 300);\n  }\n\n  render() {\n    const user = get(this.props.user, 'relevance');\n    // console.log(user);\n    const fontSize = this.props.fontSize || 17;\n    // let arrowSize = this.props.fontSize - 1;\n    if (!user) return null;\n    let fontFamily;\n    if (this.props.fontFamily) {\n      fontFamily = { fontFamily: this.props.fontFamily, letterSpacing: 0 };\n    }\n\n    const percent = Math.max(0, numbers.percentChange(user));\n\n    let percentComponent = null;\n\n    if (percent >= 0) {\n      percentComponent = (\n        <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n          <Text style={{ fontSize, color: green, marginBottom: -3 }}>▲</Text>\n          <Text\n            style={[\n              { fontSize, textAlign: 'right', color: green },\n              styles.bebas,\n              fontFamily\n            ]}\n          >\n            {numbers.abbreviateNumber(percent)}%\n          </Text>\n        </View>\n      );\n    } else if (percent < 0) {\n      percentComponent = (\n        <View style={{ flexDirection: 'row', alignItems: 'flex-end' }}>\n          <Text style={{ fontSize, color: 'red', marginBottom: -3 }}>▼</Text>\n          <Text\n            style={[\n              { fontSize, color: 'red', textAlign: 'right' },\n              styles.bebas,\n              fontFamily\n            ]}\n          >\n            {numbers.abbreviateNumber(percent)}%\n          </Text>\n        </View>\n      );\n    }\n\n    return percentComponent;\n  }\n}\n\nexport default Percent;\n\nconst localStyles = StyleSheet.create({});\n\nstyles = { ...globalStyles, ...localStyles };\n"],"file":"percent.component.js"}