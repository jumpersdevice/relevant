{"version":3,"sources":["../../../src/modules/stats/percent.component.js"],"names":["Percent","props","user","align","mr","size","rest","percent","Math","max","numbers","percentChange","percentPretty","abbreviateNumber","isNegative","colors","red","green","propTypes","userProps","PropTypes","string","number"],"mappings":"iXAAA,oDACA,6DACA,uDACA,0DACA,kCACA,oCACA,kC,oGAEe,QAASA,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACrC,GAAI,CAAC,iBAAIA,KAAK,CAACC,IAAV,CAAgB,WAAhB,CAAL,CAAmC,CACjC,MAAO,KAAP,CACD,CAHoC,GAI7BC,CAAAA,KAJ6B,CAIAF,KAJA,CAI7BE,KAJ6B,CAItBC,EAJsB,CAIAH,KAJA,CAItBG,EAJsB,CAIlBC,IAJkB,CAIAJ,KAJA,CAIlBI,IAJkB,CAITC,IAJS,uCAIAL,KAJA,wBAKrC,GAAMM,CAAAA,OAAO,CAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,CAAYC,eAAQC,aAAR,CAAsB,iBAAIV,KAAK,CAACC,IAAV,CAAgB,WAAhB,CAAtB,CAAZ,CAAhB,CACA,GAAMU,CAAAA,aAAa,CAAGF,eAAQG,gBAAR,CAAyBN,OAAzB,CAAtB,CACA,GAAMO,CAAAA,UAAU,CAAGP,OAAO,CAAG,CAA7B,CACA,MACE,8BAAC,mBAAD,0BAAoBD,IAApB,EAA0B,KAAK,CAAEH,KAAK,EAAI,QAA1C,CAAoD,EAAE,CAAE,GAAKC,EAA7D,iEACE,6BAAC,SAAD,EAAM,EAAE,CAAEC,IAAV,CAAgB,CAAC,CAAES,UAAU,CAAGC,eAAOC,GAAV,CAAgBD,eAAOE,KAApD,gEACGH,UAAU,CAAG,IAAH,CAAU,IADvB,CADF,CAIGF,aAJH,KADF,CAQD,CAEDZ,OAAO,CAACkB,SAAR,CAAoB,CAClBhB,IAAI,CAAEiB,yBADY,CAElBhB,KAAK,CAAEiB,mBAAUC,MAFC,CAGlBjB,EAAE,CAAEgB,mBAAUC,MAHI,CAIlBhB,IAAI,CAAEe,mBAAUE,MAJE,CAApB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { userProps } from 'app/utils/propValidation';\nimport { numbers } from 'app/utils';\nimport { colors } from 'app/styles';\nimport { NumericalValue, Text } from 'modules/styled/uni';\n\nexport default function Percent(props) {\n  if (!get(props.user, 'relevance')) {\n    return null;\n  }\n  const { align, mr, size, ...rest } = props;\n  const percent = Math.max(0, numbers.percentChange(get(props.user, 'relevance')));\n  const percentPretty = numbers.abbreviateNumber(percent);\n  const isNegative = percent < 0;\n  return (\n    <NumericalValue {...rest} align={align || 'center'} mr={2 || mr}>\n      <Text fs={size} c={isNegative ? colors.red : colors.green}>\n        {isNegative ? '▼ ' : '▲ '}\n      </Text>\n      {percentPretty}%\n    </NumericalValue>\n  );\n}\n\nPercent.propTypes = {\n  user: userProps,\n  align: PropTypes.string,\n  mr: PropTypes.string,\n  size: PropTypes.number\n};\n"],"file":"percent.component.js"}