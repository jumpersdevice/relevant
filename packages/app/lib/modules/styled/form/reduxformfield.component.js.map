{"version":3,"sources":["../../../../src/modules/styled/form/reduxformfield.component.js"],"names":["ReduxFormField","props","label","input","type","meta","name","placeholder","autocomplete","dirty","touched","error","warning","colors","black","red","propTypes","PropTypes","string","oneOfType","node","object","defaultProps"],"mappings":"gQAAA,oDACA,6DACA,2BACA,uC,iHAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,IACtBC,CAAAA,KADsB,CACwCD,KADxC,CACtBC,KADsB,CACfC,KADe,CACwCF,KADxC,CACfE,KADe,CACRC,IADQ,CACwCH,KADxC,CACRG,IADQ,CACFC,IADE,CACwCJ,KADxC,CACFI,IADE,CACIC,IADJ,CACwCL,KADxC,CACIK,IADJ,CACUC,WADV,CACwCN,KADxC,CACUM,WADV,CACuBC,YADvB,CACwCP,KADxC,CACuBO,YADvB,IAEtBC,CAAAA,KAFsB,CAEaJ,IAFb,CAEtBI,KAFsB,CAEfC,OAFe,CAEaL,IAFb,CAEfK,OAFe,CAENC,KAFM,CAEaN,IAFb,CAENM,KAFM,CAECC,OAFD,CAEaP,IAFb,CAECO,OAFD,CAG9B,MACE,8BAAC,SAAD,EAAM,OAAO,CAAC,MAAd,CAAqB,UAAU,CAAC,QAAhC,CAAyC,EAAE,CAAE,CAA7C,gEACGV,KAAK,CACJ,sCAAO,WAAUI,IAAjB,gEACE,6BAAC,aAAD,EAAU,CAAC,CAAEO,eAAOC,KAApB,iEAA4BZ,KAA5B,CADF,CADI,CAIF,IALN,CAME,6BAAC,UAAD,0BACMC,KADN,EAEE,WAAW,CAAEI,WAAW,EAAIL,KAF9B,CAGE,YAAY,CAAEM,YAHhB,CAIE,IAAI,CAAEF,IAJR,CAKE,IAAI,CAAEF,IALR,CAME,MAAM,CAAE,CANV,CAOE,CAAC,CAAC,KAPJ,CAQE,EAAE,CAAE,CARN,iEANF,CAgBG,CAACK,KAAK,EAAIC,OAAV,IACGC,KAAK,EACL,6BAAC,kBAAD,EAAe,CAAC,CAAEE,eAAOE,GAAzB,CAA8B,EAAE,CAAE,CAAlC,iEACGJ,KADH,CADD,EAKEC,OAAO,EAAI,6BAAC,kBAAD,EAAe,CAAC,CAAEC,eAAOE,GAAzB,iEAA+BH,OAA/B,CANf,CAhBH,CADF,CA0BD,CA7BD,CA+BAZ,cAAc,CAACgB,SAAf,CAA2B,CACzBL,KAAK,CAAEM,mBAAUC,MADQ,CAEzBd,IAAI,CAAEa,mBAAUC,MAFS,CAGzBZ,IAAI,CAAEW,mBAAUC,MAHS,CAIzBhB,KAAK,CAAEe,mBAAUE,SAAV,CAAoB,CAACF,mBAAUC,MAAX,CAAmBD,mBAAUG,IAA7B,CAApB,CAJkB,CAKzBb,WAAW,CAAEU,mBAAUC,MALE,CAMzBb,IAAI,CAAEY,mBAAUI,MANS,CAOzBlB,KAAK,CAAEc,mBAAUI,MAPQ,CAQzBb,YAAY,CAAES,mBAAUC,MARC,CAA3B,CAWAlB,cAAc,CAACsB,YAAf,CAA8B,CAC5Bd,YAAY,CAAE,IADc,CAA9B,C,aAIeR,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, Input } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst ReduxFormField = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View display=\"flex\" fdirection=\"column\" mt={3}>\n      {label ? (\n        <label html-for={name}>\n          <LinkFont c={colors.black}>{label}</LinkFont>\n        </label>\n      ) : null}\n      <Input\n        {...input}\n        placeholder={placeholder || label}\n        autoComplete={autocomplete}\n        name={name}\n        type={type}\n        border={1}\n        p=\"2 2\"\n        mt={1}\n      />\n      {(dirty || touched) &&\n        ((error && (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        )) ||\n          (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n    </View>\n  );\n};\n\nReduxFormField.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nReduxFormField.defaultProps = {\n  autocomplete: null\n};\n\nexport default ReduxFormField;\n"],"file":"reduxformfield.component.js"}