{"version":3,"sources":["../../../../src/modules/styled/form/checkbox.js"],"names":["Checkbox","props","label","input","type","meta","name","placeholder","autocomplete","dirty","touched","error","warning","colors","black","red","propTypes","PropTypes","string","object","defaultProps"],"mappings":"gQAAA,oDACA,6DACA,2BACA,uC,iGAEA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,KAAK,CAAI,IAChBC,CAAAA,KADgB,CAC8CD,KAD9C,CAChBC,KADgB,CACTC,KADS,CAC8CF,KAD9C,CACTE,KADS,CACFC,IADE,CAC8CH,KAD9C,CACFG,IADE,CACIC,IADJ,CAC8CJ,KAD9C,CACII,IADJ,CACUC,IADV,CAC8CL,KAD9C,CACUK,IADV,CACgBC,WADhB,CAC8CN,KAD9C,CACgBM,WADhB,CAC6BC,YAD7B,CAC8CP,KAD9C,CAC6BO,YAD7B,IAEhBC,CAAAA,KAFgB,CAEmBJ,IAFnB,CAEhBI,KAFgB,CAETC,OAFS,CAEmBL,IAFnB,CAETK,OAFS,CAEAC,KAFA,CAEmBN,IAFnB,CAEAM,KAFA,CAEOC,OAFP,CAEmBP,IAFnB,CAEOO,OAFP,CAGxB,MACE,8BAAC,SAAD,EAAM,UAAU,CAAC,QAAjB,CAA0B,EAAE,CAAE,CAA9B,gEACE,6BAAC,SAAD,EAAM,UAAU,CAAC,KAAjB,gEACE,6BAAC,eAAD,0BACMT,KADN,EAEE,WAAW,CAAEI,WAAW,EAAIL,KAF9B,CAGE,YAAY,CAAEM,YAHhB,CAIE,IAAI,CAAEF,IAJR,CAKE,IAAI,CAAEF,IALR,CAME,EAAE,CAAE,CANN,iEADF,CAQK,GARL,CASGF,KAAK,CACJ,sCAAO,WAAUI,IAAjB,iEACE,6BAAC,aAAD,EAAU,CAAC,CAAEO,eAAOC,KAApB,iEAA4BZ,KAA5B,CADF,CADI,CAIF,IAbN,CAcG,CAACO,KAAK,EAAIC,OAAV,IACGC,KAAK,EACL,6BAAC,kBAAD,EAAe,CAAC,CAAEE,eAAOE,GAAzB,CAA8B,EAAE,CAAE,CAAlC,iEACGJ,KADH,CADD,EAKEC,OAAO,EAAI,6BAAC,kBAAD,EAAe,CAAC,CAAEC,eAAOE,GAAzB,iEAA+BH,OAA/B,CANf,CAdH,CADF,CADF,CA0BD,CA7BD,CA+BAZ,QAAQ,CAACgB,SAAT,CAAqB,CACnBL,KAAK,CAAEM,mBAAUC,MADE,CAEnBd,IAAI,CAAEa,mBAAUC,MAFG,CAGnBZ,IAAI,CAAEW,mBAAUC,MAHG,CAInBhB,KAAK,CAAEe,mBAAUC,MAJE,CAKnBX,WAAW,CAAEU,mBAAUC,MALJ,CAMnBb,IAAI,CAAEY,mBAAUE,MANG,CAOnBhB,KAAK,CAAEc,mBAAUE,MAPE,CAQnBX,YAAY,CAAES,mBAAUC,MARL,CAArB,CAWAlB,QAAQ,CAACoB,YAAT,CAAwB,CACtBZ,YAAY,CAAE,IADQ,CAAxB,C,aAIeR,Q","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { View, LinkFont, SecondaryText, InputPlain } from 'modules/styled/web';\nimport { colors } from 'app/styles';\n\nconst Checkbox = props => {\n  const { label, input, type, meta, name, placeholder, autocomplete } = props;\n  const { dirty, touched, error, warning } = meta;\n  return (\n    <View fdirection=\"column\" mt={3}>\n      <View fdirection=\"row\">\n        <InputPlain\n          {...input}\n          placeholder={placeholder || label}\n          autoComplete={autocomplete}\n          name={name}\n          type={type}\n          mr={1}\n        />{' '}\n        {label ? (\n          <label html-for={name}>\n            <LinkFont c={colors.black}>{label}</LinkFont>\n          </label>\n        ) : null}\n        {(dirty || touched) &&\n          ((error && (\n            <SecondaryText c={colors.red} mt={1}>\n              {error}\n            </SecondaryText>\n          )) ||\n            (warning && <SecondaryText c={colors.red}>{warning}</SecondaryText>))}\n      </View>\n    </View>\n  );\n};\n\nCheckbox.propTypes = {\n  error: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  meta: PropTypes.object,\n  input: PropTypes.object,\n  autocomplete: PropTypes.string\n};\n\nCheckbox.defaultProps = {\n  autocomplete: null\n};\n\nexport default Checkbox;\n"],"file":"checkbox.js"}