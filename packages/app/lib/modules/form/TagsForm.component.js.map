{"version":3,"sources":["../../../src/modules/form/TagsForm.component.js"],"names":["process","env","BROWSER","require","TagsForm","props","input","tags","tag","setState","state","filter","t","handleChange","bind","handleBlur","handleKeyDown","onChange","e","target","value","tagEls","length","map","i","deselectTag","colors","black","placeholderText","Component","PropTypes","string","func","object"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkFont, Tag, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\n\nif (process.env.BROWSER === true) {\n  require('modules/createPost/web/selectTags.css');\n}\n\nexport default class TagsForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  static propTypes = {\n    placeholderText: PropTypes.string,\n    onChange: PropTypes.func,\n    input: PropTypes.object\n  };\n\n  state = {\n    input: '',\n    // tags: this.props.initialTags\n    tags: []\n  };\n\n  componentDidUpdate() {\n    this.props.onChange(this.state.tags);\n  }\n\n  selectTag = tag => {\n    // console.log('selecting tag', tag);\n    this.setState({ tags: [...this.state.tags, tag] });\n  };\n\n  deselectTag = tag => {\n    // console.log('deselect tag');\n    const tags = this.state.tags.filter(t => t !== tag);\n    this.setState({ tags });\n  };\n\n  handleBlur = () => {};\n  // null\n  // console.log('on blur');\n  // let inputTags = e.target.value.split(/,|#/);\n  // // debugger;\n  // // if (inputTags) {\n  // inputTags = inputTags.map(t => t.trim().replace('#', '')).filter(t => t.length);\n  // if (inputTags.length) {\n  //   this.selectTag(inputTags);\n  // }\n  // // }\n  // return this.setState({ input: '' });\n\n  handleChange(e) {\n    this.setState({ input: e.target.value });\n    return null;\n    // console.log('on change!');\n    // e.preventDefault();\n    // const inputTags = e.target.value;\n    // let tagsArr = inputTags.split(/,|#/);\n    // if (tagsArr) {\n    //   tagsArr = tagsArr.map(t => t.trim()).filter(t => t.length);\n    // }\n    // let newTags;\n    // if (tagsArr && tagsArr.length > 1) {\n    //   this.selectTag(tagsArr[0]);\n    //   newTags = tagsArr[1];\n    // } else {\n    //   newTags = inputTags;\n    // }\n    // // console.log('setting state', newTags);\n    // this.setState({ input: newTags });\n  }\n\n  handleKeyDown() {\n    // this.setState({ input: e.target.value });\n    return null;\n    // if (e.keyCode !== 13 && e.keyCode !== 9) {\n    //   return null;\n    // }\n    // // console.log('keydow', e);\n    // if (e.keyCode === 13) {\n    //   e.preventDefault();\n    // }\n    // const tag = e.target.value.trim().replace('#', '');\n    // // console.log('val and tag', e.target.value, tag);\n    // // If there is a value we prevent default on the tab key\n    // // if not we let it proceed for accessibility reasons (i.e. navigating the form)\n    // if (e.target.value.trim() && e.keyCode === 9) {\n    //   e.preventDefault();\n    // }\n    // // debugger\n    // this.selectTag(tag);\n    // return this.setState({ input: '' });\n    // return null;\n  }\n\n  render() {\n    const { tags, input } = this.state;\n    // console.log('tags', tags);\n    let tagEls;\n    if (!tags || !tags.length) {\n      tagEls = null;\n    } else {\n      tagEls = tags.map((tag, i) => (\n        <Tag\n          key={i}\n          m={0}\n          mr={1}\n          mt={1}\n          disabled={false}\n          role={'checkbox'}\n          aria-checked\n          onClick={() => this.deselectTag(tag)}\n        >\n          #{tag}\n        </Tag>\n      ));\n    }\n    // const input = this.state.input || '';\n\n    return (\n      <View display=\"flex\" fdirection=\"column\" mt={3}>\n        <View>\n          <LinkFont c={colors.black}>Your Tags </LinkFont>\n          <View display=\"flex\" fdirection=\"row\" wrap=\"wrap\">\n            {tagEls}\n          </View>\n        </View>\n        <div className=\"tagInput\">\n          <input\n            key=\"tags-input\"\n            placeholder={this.props.placeholderText}\n            value={this.props.input.value}\n            onKeyDown={this.handleKeyDown}\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n          />\n        </div>\n      </View>\n    );\n  }\n}\n"],"file":"TagsForm.component.js"}