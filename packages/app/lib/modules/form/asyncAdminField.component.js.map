{"version":3,"sources":["../../../src/modules/form/asyncAdminField.component.js"],"names":["AsyncAdminField","inputValue","newValue","replace","setState","val","length","props","actions","searchUser","userSearch","map","u","label","handle","value","vals","formattedVals","v","input","onChange","error","colors","black","menu","styles","position","top","loadOptions","handleChange","red","Component","PropTypes","object","oneOfType","string","node","mapStateToProps","state","user","search","mapDispatchToProps","dispatch"],"mappings":"0lCAAA,qDACA,6DACA,uDACA,kCACA,oCACA,iEACA,4BACA,uCACA,0C,0mDAEMA,CAAAA,e,sbASI,CAAEC,UAAU,CAAE,EAAd,C,8FAEY,SAAAC,QAAQ,CAAI,CAC9B,GAAMD,CAAAA,UAAU,CAAGC,QAAQ,CAACC,OAAT,CAAiB,KAAjB,CAAwB,EAAxB,CAAnB,CACA,MAAKC,QAAL,CAAc,CAAEH,UAAU,CAAVA,UAAF,CAAd,EACA,MAAOA,CAAAA,UAAP,CACD,C,qKAEa,iBAAMI,GAAN,qIACPA,GAAG,CAACC,MADG,yDACY,IADZ,+BAEa,OAAKC,KAAL,CAAWC,OAAX,CAAmBC,UAAnB,CAA8BJ,GAA9B,CAFb,QAENK,UAFM,+CAGLA,UAAU,CAACC,GAAX,CAAe,SAAAC,CAAC,QAAK,CAAEC,KAAK,CAAED,CAAC,CAACE,MAAX,CAAmBC,KAAK,CAAEH,CAAC,CAACE,MAA5B,CAAL,EAAhB,CAHK,wD,uJAMC,SAAAE,IAAI,CAAI,CACrB,GAAMC,CAAAA,aAAa,CAAGD,IAAI,CAACL,GAAL,CAAS,SAAAO,CAAC,QAAIA,CAAAA,CAAC,CAACH,KAAN,EAAV,CAAtB,CACA,MAAKR,KAAL,CAAWY,KAAX,CAAiBC,QAAjB,CAA0BH,aAA1B,EACD,C,gGAEQ,iBACyB,KAAKV,KAD9B,CACCM,KADD,aACCA,KADD,CACQQ,KADR,aACQA,KADR,CACeF,KADf,aACeA,KADf,CAEP,GAAMH,CAAAA,IAAI,CAAG,iBAAIG,KAAJ,CAAW,OAAX,CAAoB,EAApB,EAAwBR,GAAxB,CAA4B,SAAAC,CAAC,QAAK,CAAEC,KAAK,CAAED,CAAT,CAAYG,KAAK,CAAEH,CAAnB,CAAL,EAA7B,CAAb,CACA,MACE,8BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,CAAa,MAAM,CAAE,CAArB,gEACGC,KAAK,CACJ,6BAAC,aAAD,EAAU,CAAC,CAAES,eAAOC,KAApB,CAA2B,EAAE,CAAE,CAA/B,iEACGV,KADH,CADI,CAIF,IALN,CAME,6BAAC,cAAD,EACE,MAAM,CAAE,CAAEW,IAAI,CAAE,cAAAC,MAAM,wCAAUA,MAAV,MAAkBC,QAAQ,CAAE,UAA5B,CAAwCC,GAAG,CAAE,CAA7C,IAAd,CADV,CAEE,OAAO,KAFT,CAGE,YAAY,KAHd,CAIE,cAAc,KAJhB,CAKE,KAAK,CAAEX,IALT,CAME,WAAW,CAAE,KAAKY,WANpB,CAOE,QAAQ,CAAE,KAAKC,YAPjB,gEANF,CAeGR,KAAK,CACJ,6BAAC,kBAAD,EAAe,CAAC,CAAEC,eAAOQ,GAAzB,CAA8B,EAAE,CAAE,CAAlC,iEACGT,KADH,CADI,CAIF,IAnBN,CADF,CAuBD,C,6BAtD2BU,gB,+BAAxB/B,e,aACe,CACjBmB,KAAK,CAAEa,mBAAUC,MADA,CAEjBpB,KAAK,CAAEmB,mBAAUE,SAAV,CAAoB,CAACF,mBAAUG,MAAX,CAAmBH,mBAAUI,IAA7B,CAApB,CAFU,CAGjBf,KAAK,CAAEW,mBAAUG,MAHA,CAIjB3B,OAAO,CAAEwB,mBAAUC,MAJF,C,EAwDrB,QAASI,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CAC9B,MAAO,CACL5B,UAAU,CAAE4B,KAAK,CAACC,IAAN,CAAWC,MADlB,CAAP,CAGD,CAED,QAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CACpC,MAAO,CACLlC,OAAO,CAAE,8BACP,CACEC,UAAU,CAAVA,gBADF,CADO,CAIPiC,QAJO,CADJ,CAAP,CAQD,C,aAEc,wBAAQL,eAAR,CAAyBI,kBAAzB,EAA6CzC,eAA7C,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport AsyncSelect from 'react-select/async';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { searchUser } from 'modules/user/user.actions';\n\nclass AsyncAdminField extends Component {\n  static propTypes = {\n    input: PropTypes.object,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    error: PropTypes.string,\n    actions: PropTypes.object\n    // userSearch: PropTypes.array\n  };\n\n  state = { inputValue: '' };\n\n  handleInputChange = newValue => {\n    const inputValue = newValue.replace(/\\W/g, '');\n    this.setState({ inputValue });\n    return inputValue;\n  };\n\n  loadOptions = async val => {\n    if (!val.length) return null;\n    const userSearch = await this.props.actions.searchUser(val);\n    return userSearch.map(u => ({ label: u.handle, value: u.handle }));\n  };\n\n  handleChange = vals => {\n    const formattedVals = vals.map(v => v.value);\n    this.props.input.onChange(formattedVals);\n  };\n\n  render() {\n    const { label, error, input } = this.props;\n    const vals = get(input, 'value', []).map(u => ({ label: u, value: u }));\n    return (\n      <View mt={2} zIndex={0}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <AsyncSelect\n          styles={{ menu: styles => ({ ...styles, position: 'relative', top: 0 }) }}\n          isMulti\n          cacheOptions\n          defaultOptions\n          value={vals}\n          loadOptions={this.loadOptions}\n          onChange={this.handleChange}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userSearch: state.user.search\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(\n      {\n        searchUser\n      },\n      dispatch\n    )\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsyncAdminField);\n"],"file":"asyncAdminField.component.js"}