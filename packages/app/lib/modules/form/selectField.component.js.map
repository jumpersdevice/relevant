{"version":3,"sources":["../../../src/modules/form/selectField.component.js"],"names":["SelectField","inputValue","value","props","input","onChange","label","error","options","defaultValue","opts","map","o","colors","black","menu","styles","position","top","zIndex","handleChange","red","Component","PropTypes","object","array","oneOfType","string","node"],"mappings":"y6BAAA,qDACA,6DACA,kCACA,oCACA,iE,smDAEqBA,CAAAA,W,saAQX,CAAEC,UAAU,CAAE,EAAd,C,yFAEO,SAAAC,KAAK,CAAI,CACtB,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,QAAjB,CAA0BH,KAAK,CAACA,KAAhC,EACD,C,4FAEQ,iBACkC,KAAKC,KADvC,CACCG,KADD,aACCA,KADD,CACQC,KADR,aACQA,KADR,CACeC,OADf,aACeA,OADf,CACwBJ,KADxB,aACwBA,KADxB,CAEP,GAAMK,CAAAA,YAAY,CAAG,CAAEP,KAAK,CAAEE,KAAK,CAACF,KAAf,CAAsBI,KAAK,CAAEF,KAAK,CAACF,KAAnC,CAArB,CACA,GAAMQ,CAAAA,IAAI,CAAGF,OAAO,CAACG,GAAR,CAAY,SAAAC,CAAC,QAAK,CAAEN,KAAK,CAAEM,CAAT,CAAYV,KAAK,CAAEU,CAAnB,CAAL,EAAb,CAAb,CACA,MACE,8BAAC,SAAD,EAAM,EAAE,CAAE,CAAV,CAAa,MAAM,CAAE,CAArB,gEACGN,KAAK,CACJ,6BAAC,aAAD,EAAU,CAAC,CAAEO,eAAOC,KAApB,CAA2B,EAAE,CAAE,CAA/B,iEACGR,KADH,CADI,CAIF,IALN,CAME,6BAAC,oBAAD,EACE,MAAM,CAAE,CACNS,IAAI,CAAE,cAAAC,MAAM,wCAAUA,MAAV,MAAkBC,QAAQ,CAAE,UAA5B,CAAwCC,GAAG,CAAE,CAA7C,CAAgDC,MAAM,CAAE,EAAxD,IADN,CADV,CAME,YAAY,CAAEV,YANhB,CAOE,QAAQ,CAAE,KAAKW,YAPjB,CAQE,OAAO,CAAEV,IARX,gEANF,CAgBGH,KAAK,CACJ,6BAAC,kBAAD,EAAe,CAAC,CAAEM,eAAOQ,GAAzB,CAA8B,EAAE,CAAE,CAAlC,iEACGd,KADH,CADI,CAIF,IApBN,CADF,CAwBD,C,yBA1CsCe,gB,2DAApBtB,W,aACA,CACjBI,KAAK,CAAEmB,mBAAUC,MADA,CAEjBhB,OAAO,CAAEe,mBAAUE,KAFF,CAGjBnB,KAAK,CAAEiB,mBAAUG,SAAV,CAAoB,CAACH,mBAAUI,MAAX,CAAmBJ,mBAAUK,IAA7B,CAApB,CAHU,CAIjBrB,KAAK,CAAEgB,mBAAUI,MAJA,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { LinkFont, SecondaryText, View } from 'modules/styled/uni';\nimport { colors } from 'app/styles';\nimport Select from 'react-select';\n\nexport default class SelectField extends Component {\n  static propTypes = {\n    input: PropTypes.object,\n    options: PropTypes.array,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    error: PropTypes.string\n  };\n\n  state = { inputValue: '' };\n\n  handleChange = value => {\n    this.props.input.onChange(value.value);\n  };\n\n  render() {\n    const { label, error, options, input } = this.props;\n    const defaultValue = { value: input.value, label: input.value };\n    const opts = options.map(o => ({ label: o, value: o }));\n    return (\n      <View mt={2} zIndex={0}>\n        {label ? (\n          <LinkFont c={colors.black} mb={1}>\n            {label}\n          </LinkFont>\n        ) : null}\n        <Select\n          styles={{\n            menu: styles => ({ ...styles, position: 'relative', top: 0, zIndex: 10 })\n          }}\n          // isMulti\n          // cacheOptions\n          defaultValue={defaultValue}\n          onChange={this.handleChange}\n          options={opts}\n        />\n        {error ? (\n          <SecondaryText c={colors.red} mt={1}>\n            {error}\n          </SecondaryText>\n        ) : null}\n      </View>\n    );\n  }\n}\n"],"file":"selectField.component.js"}