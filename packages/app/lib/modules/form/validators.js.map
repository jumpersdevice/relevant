{"version":3,"sources":["../../../src/modules/form/validators.js"],"names":["required","value","undefined","email","valid","test","validCharacters","match","NAME_PATTERN","asyncEmail","results","asyncUsername","signupAsyncValidation","values","errors","username","error","handle","Object","keys","length","passwordsShouldMatch","password","confirmPassword","compose","validators","reduce","validator"],"mappings":"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","sourcesContent":["import { NAME_PATTERN } from 'app/utils/text';\nimport { checkUser } from 'modules/auth/auth.actions';\n\nexport const required = value =>\n  value || typeof value === 'number' ? undefined : 'Required';\n\nexport const email = value => {\n  if (!value) {\n    return undefined;\n  }\n  const valid = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,15}$/i.test(value);\n  if (valid) {\n    return undefined;\n  }\n  return 'Not a valid e-mail';\n};\n\nexport const validCharacters = value => {\n  const match = NAME_PATTERN.test(value);\n  if (!match) {\n    return 'Can only contain letters, \\nnumbers, dashes and underscores';\n  }\n  return undefined;\n};\n\nexport const asyncEmail = async value => {\n  const results = await checkUser(value, 'email', true)();\n  if (results) {\n    return 'This email has already been used';\n  }\n  return undefined;\n};\n\nexport const asyncUsername = async value => {\n  if (value) {\n    const results = await checkUser(value, 'name', true)();\n    // TODO: no error if username is own username\n    if (results) {\n      return 'This username is already taken';\n    }\n  }\n  return undefined;\n};\n\nexport const signupAsyncValidation = async values => {\n  // console.log('props  ', props  );\n  const errors = {};\n  if (values.username) {\n    const error = await asyncUsername(values.username);\n    if (error) {\n      errors.username = error;\n    }\n  }\n  if (values.email) {\n    const error = await asyncEmail(values.email);\n    if (error) {\n      errors.email = error;\n    }\n  }\n  if (values.handle) {\n    const error = await asyncUsername(values.handle);\n    if (error) {\n      errors.handle = error;\n    }\n  }\n  if (Object.keys(errors).length) {\n    throw errors;\n  }\n};\n\nexport const passwordsShouldMatch = values => {\n  const errors = {};\n  if (!values.password || !values.confirmPassword) {\n    return null;\n  }\n  if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords must match';\n  }\n  return errors;\n};\n\nexport const compose = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined);\n"],"file":"validators.js"}