{"version":3,"sources":["../../src/core/apollo.client.js"],"names":["API_URL","process","env","WEB","require","API_SERVER","BROWSER","window","cache","InMemoryCache","dataIdFromObject","object","_id","restore","__APOLLO_STATE__","uri","wsUri","replace","wsLink","WebSocketLink","options","reconnect","reconnectionAttempts","lazy","timeout","subscriptionMiddleware","applyMiddleware","next","token","subscriptionClient","use","httpLink","HttpLink","authMiddleware","req","headers","credentials","authorization","link","query","definition","kind","operation","client","ApolloClient"],"mappings":"8bAAA,2CACA,0DACA,gDACA,yCACA,sDACA,uCACA,4CACA,iD,yyBAEA,GAAIA,CAAAA,OAAJ,CACA,GAAIC,OAAO,CAACC,GAAR,CAAYC,GAAZ,GAAoB,MAAxB,CAAgC,CAC9BC,OAAO,mBAAP,CACAJ,OAAO,CAAGC,OAAO,CAACC,GAAR,CAAYG,UAAtB,CACD,CAHD,IAGO,IAAIJ,OAAO,CAACC,GAAR,CAAYI,OAAhB,CAAyB,CAC9BN,OAAO,CAAGO,MAAM,CAACF,UAAjB,CACD,CAED,GAAMG,CAAAA,KAAK,CAAG,GAAIC,mCAAJ,CAAkB,CAC9BC,gBAAgB,CAAE,0BAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,GAAP,EAAc,IAAlB,EADM,CAAlB,CAAd,CAIAJ,KAAK,CAACK,OAAN,CAAcN,MAAM,CAACO,gBAArB,EAEA,GAAMC,CAAAA,GAAG,CAAGf,OAAZ,CACA,GAAMgB,CAAAA,KAAK,CAAGD,GAAG,CAACE,OAAJ,CAAY,MAAZ,CAAoB,IAApB,CAAd,CAEA,GAAMC,CAAAA,MAAM,CAAG,GAAIC,4BAAJ,CAAkB,CAC/BJ,GAAG,WAAKC,KAAL,YAD4B,CAE/BI,OAAO,CAAE,CACPC,SAAS,CAAE,IADJ,CAEPC,oBAAoB,CAAE,EAFf,CAGPC,IAAI,CAAE,IAHC,CAIPC,OAAO,CAAE,KAJF,CAFsB,CAAlB,CAAf,CAUA,GAAMC,CAAAA,sBAAsB,CAAG,CAC7BC,eAAe,0FAAE,iBAAON,OAAP,CAAgBO,IAAhB,yIACO,uBADP,QACfP,OAAO,CAACQ,KADO,eAEfD,IAAI,GAFW,sDAAF,6GADc,CAA/B,CAMAT,MAAM,CAACW,kBAAP,CAA0BC,GAA1B,CAA8B,CAACL,sBAAD,CAA9B,EAEA,GAAMM,CAAAA,QAAQ,CAAG,GAAIC,yBAAJ,CAAa,CAAEjB,GAAG,WAAKA,GAAL,YAAL,CAAb,CAAjB,CAEA,GAAMkB,CAAAA,cAAc,CAAG,gHAAW,kBAAOC,GAAP,8IAAcC,OAAd,MAAcA,OAAd,wBACZ,uBADY,QAC1BP,KAD0B,iDAEzB,CACLQ,WAAW,CAAE,SADR,CAELD,OAAO,gCACFA,OADE,MAELE,aAAa,CAAET,KAAK,kBAAaA,KAAb,EAAuB,EAFtC,EAFF,CAFyB,0DAAX,qEAAvB,CAWA,GAAMU,CAAAA,IAAI,CAAG,sBAEX,eAAe,IAAZC,CAAAA,KAAY,OAAZA,KAAY,CACb,GAAMC,CAAAA,UAAU,CAAG,uCAAkBD,KAAlB,CAAnB,CACA,MACEC,CAAAA,UAAU,CAACC,IAAX,GAAoB,qBAApB,EAA6CD,UAAU,CAACE,SAAX,GAAyB,cADxE,CAGD,CAPU,CAQXxB,MARW,CASXa,QATW,CAAb,CAYO,GAAMY,CAAAA,MAAM,CAAG,GAAIC,2BAAJ,CAAiB,CACrCpC,KAAK,CAALA,KADqC,CAErC8B,IAAI,CAAE,uBAAOL,cAAP,CAAuBK,IAAvB,CAF+B,CAAjB,CAAf,C","sourcesContent":["import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { getToken } from 'utils/storage';\nimport { setContext } from 'apollo-link-context';\nimport { concat, split } from 'apollo-link';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { getMainDefinition } from 'apollo-utilities';\n\nlet API_URL;\nif (process.env.WEB !== 'true') {\n  require('../../publicenv');\n  API_URL = process.env.API_SERVER;\n} else if (process.env.BROWSER) {\n  API_URL = window.API_SERVER;\n}\n\nconst cache = new InMemoryCache({\n  dataIdFromObject: object => object._id || null\n});\n\ncache.restore(window.__APOLLO_STATE__);\n\nconst uri = API_URL;\nconst wsUri = uri.replace('http', 'ws');\n\nconst wsLink = new WebSocketLink({\n  uri: `${wsUri}/graphql`,\n  options: {\n    reconnect: true,\n    reconnectionAttempts: 50,\n    lazy: true,\n    timeout: 20000\n  }\n});\n\nconst subscriptionMiddleware = {\n  applyMiddleware: async (options, next) => {\n    options.token = await getToken();\n    next();\n  }\n};\nwsLink.subscriptionClient.use([subscriptionMiddleware]);\n\nconst httpLink = new HttpLink({ uri: `${uri}/graphql` });\n\nconst authMiddleware = setContext(async (req, { headers }) => {\n  const token = await getToken();\n  return {\n    credentials: 'include',\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' && definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink\n);\n\nexport const client = new ApolloClient({\n  cache,\n  link: concat(authMiddleware, link)\n});\n"],"file":"apollo.client.js"}