{"version":3,"sources":["../../../src/core/mobile/configureStore.js"],"names":["require","window","navigator","userAgent","io","socket","process","env","API_SERVER","transports","jsonp","on","emit","opts","store","configureStore","socketIoMiddleware","thunk","createStore","rootReducer","s","getState","auth","user","type","payload","_id","module","hot","accept","nextRootReducer","default","replaceReducer","exports","STORE"],"mappings":"wLAAA,4BACA,+DACA,oEACA,6DAEAA,OAAO,sBAAP,CAEAC,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA6B,cAA7B,CACA,GAAMC,CAAAA,EAAE,CAAGJ,OAAO,CAAC,iCAAD,CAAlB,CAEA,GAAMK,CAAAA,MAAM,CAAGD,EAAE,CAACE,OAAO,CAACC,GAAR,CAAYC,UAAb,CAAyB,CACxCC,UAAU,CAAE,CAAC,WAAD,CAD4B,CAExCC,KAAK,CAAE,KAFiC,CAAzB,CAAjB,CAKAL,MAAM,CAACM,EAAP,CAAU,eAAV,CAA2B,UAAM,CAC/BN,MAAM,CAACO,IAAP,CAAY,cAAZ,EACD,CAFD,EAIAP,MAAM,CAACM,EAAP,CAAU,mBAAV,CAA+B,UAAM,CACnCN,MAAM,CAACD,EAAP,CAAUS,IAAV,CAAeJ,UAAf,CAA4B,CAAC,SAAD,CAAY,WAAZ,CAA5B,CACD,CAFD,EAIA,GAAIK,CAAAA,KAAJ,CAEe,QAASC,CAAAA,cAAT,EAA0B,CACvC,GAAMC,CAAAA,kBAAkB,CAAG,yBAAyBX,MAAzB,CAAiC,SAAjC,CAA3B,CAEAS,KAAK,CAAG,2BAAgBG,mBAAhB,CAAuBD,kBAAvB,EAA2CE,kBAA3C,EACNC,iBADM,CAAR,CAKAd,MAAM,CAACM,EAAP,CAAU,SAAV,CAAqB,UAAM,CACzB,GAAMS,CAAAA,CAAC,CAAGN,KAAK,CAACO,QAAN,EAAV,CACA,GAAID,CAAC,CAACE,IAAF,EAAUF,CAAC,CAACE,IAAF,CAAOC,IAArB,CAA2B,CACzBlB,MAAM,CAACO,IAAP,CAAY,QAAZ,CAAsB,CACpBY,IAAI,CAAE,kBADc,CAEpBC,OAAO,CAAEL,CAAC,CAACE,IAAF,CAAOC,IAAP,CAAYG,GAFD,CAAtB,EAID,CACF,CARD,EAUA,GAAIC,MAAM,CAACC,GAAX,CAAgB,CACdD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,UAAM,CACtB,GAAMC,CAAAA,eAAe,CAAG9B,OAAO,eAAP,CAA+B+B,OAAvD,CACAjB,KAAK,CAACkB,cAAN,CAAqBF,eAArB,EACD,CAHD,EAID,CACD,MAAOhB,CAAAA,KAAP,CACD,CAEDmB,OAAO,CAACC,KAAR,CAAgBpB,KAAhB","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSocketIoMiddleware from 'redux-socket.io';\nimport rootReducer from 'core/reducers';\n\nrequire('../../../publicenv');\n\nwindow.navigator.userAgent = 'react-native';\nconst io = require('socket.io-client/dist/socket.io');\n\nconst socket = io(process.env.API_SERVER, {\n  transports: ['websocket'],\n  jsonp: false\n});\n\nsocket.on('pingKeepAlive', () => {\n  socket.emit('pingResponse');\n});\n\nsocket.on('reconnect_attempt', () => {\n  socket.io.opts.transports = ['polling', 'websocket'];\n});\n\nlet store;\n\nexport default function configureStore() {\n  const socketIoMiddleware = createSocketIoMiddleware(socket, 'server/');\n\n  store = applyMiddleware(thunk, socketIoMiddleware)(createStore)(\n    rootReducer\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n  socket.on('connect', () => {\n    const s = store.getState();\n    if (s.auth && s.auth.user) {\n      socket.emit('action', {\n        type: 'server/storeUser',\n        payload: s.auth.user._id\n      });\n    }\n  });\n\n  if (module.hot) {\n    module.hot.accept(() => {\n      const nextRootReducer = require('core/reducers/index').default;\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n  return store;\n}\n\nexports.STORE = store;\n"],"file":"configureStore.js"}