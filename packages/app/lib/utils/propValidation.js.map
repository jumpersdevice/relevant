{"version":3,"sources":["../../src/utils/propValidation.js"],"names":["userProps","PropTypes","shape","handle","string","balance","number","image","name","postProps","_id","isRequired","user","title","embeddedUser","object","tags","array","body","postDate","instanceOf","Date","data","link","parentPost","type","authProps","isAuthenticated","bool","community","elementTypePropTypeChecker","props","propName","componentName","Error"],"mappings":"oRAAA,6DACA,iCAEO,GAAMA,CAAAA,SAAS,CAAGC,mBAAUC,KAAV,CAAgB,CACvCC,MAAM,CAAEF,mBAAUG,MADqB,CAEvCC,OAAO,CAAEJ,mBAAUK,MAFoB,CAGvCC,KAAK,CAAEN,mBAAUG,MAHsB,CAIvCI,IAAI,CAAEP,mBAAUG,MAJuB,CAAhB,CAAlB,C,4BAQA,GAAMK,CAAAA,SAAS,CAAGR,mBAAUC,KAAV,CAAgB,CACvCQ,GAAG,CAAET,mBAAUG,MAAV,CAAiBO,UADiB,CAEvCC,IAAI,CAAEX,mBAAUG,MAAV,CAAiBO,UAFgB,CAGvCE,KAAK,CAAEZ,mBAAUG,MAHsB,CAIvCU,YAAY,CAAEb,mBAAUc,MAJe,CAKvCC,IAAI,CAAEf,mBAAUgB,KALuB,CAMvCC,IAAI,CAAEjB,mBAAUG,MANuB,CAOvCe,QAAQ,CAAElB,mBAAUmB,UAAV,CAAqBC,IAArB,CAP6B,CAQvCC,IAAI,CAAErB,mBAAUc,MARuB,CASvCQ,IAAI,CAAEtB,mBAAUc,MATuB,CAUvCS,UAAU,CAAEvB,mBAAUK,MAViB,CAWvCmB,IAAI,CAAExB,mBAAUG,MAXuB,CAAhB,CAAlB,C,4BAcA,GAAMsB,CAAAA,SAAS,CAAGzB,mBAAUC,KAAV,CAAgB,CACvCyB,eAAe,CAAE1B,mBAAU2B,IADY,CAEvChB,IAAI,CAAEZ,SAFiC,CAGvC6B,SAAS,CAAE5B,mBAAUG,MAHkB,CAAhB,CAAlB,C,4BAOA,QAAS0B,CAAAA,0BAAT,CAAoCC,KAApC,CAA2CC,QAA3C,CAAqDC,aAArD,CAAoE,CACzE,GAAIF,KAAK,CAACC,QAAD,CAAL,EAAmB,CAAC,gCAAmBD,KAAK,CAACC,QAAD,CAAxB,CAAxB,CAA6D,CAC3D,MAAO,IAAIE,CAAAA,KAAJ,yBACYF,QADZ,2BACsCC,aADtC,+CAAP,CAGD,CACF","sourcesContent":["import PropTypes from 'prop-types';\nimport { isValidElementType } from 'react-is';\n\nexport const userProps = PropTypes.shape({\n  handle: PropTypes.string,\n  balance: PropTypes.number,\n  image: PropTypes.string,\n  name: PropTypes.string\n  // relevance: // TODO shape or null\n});\n\nexport const postProps = PropTypes.shape({\n  _id: PropTypes.string.isRequired, // TODO\n  user: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  embeddedUser: PropTypes.object, // userProp?\n  tags: PropTypes.array,\n  body: PropTypes.string,\n  postDate: PropTypes.instanceOf(Date),\n  data: PropTypes.object, // TODO shape or null\n  link: PropTypes.object, // TODO shape or null\n  parentPost: PropTypes.number,\n  type: PropTypes.string\n});\n\nexport const authProps = PropTypes.shape({\n  isAuthenticated: PropTypes.bool,\n  user: userProps,\n  community: PropTypes.string\n});\n\n// eslint-disable-next-line consistent-return\nexport function elementTypePropTypeChecker(props, propName, componentName) {\n  if (props[propName] && !isValidElementType(props[propName])) {\n    return new Error(\n      `Invalid prop '${propName}' supplied to '${componentName}': the prop is not a valid React component`\n    );\n  }\n}\n"],"file":"propValidation.js"}