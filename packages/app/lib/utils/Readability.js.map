{"version":3,"sources":["../../src/utils/Readability.js"],"names":["root","Node","require","Readability","uri","doc","options","_uri","_doc","_biggestFrame","_articleByline","_articleDir","_debug","debug","_maxElemsToParse","maxElemsToParse","DEFAULT_MAX_ELEMS_TO_PARSE","_nbTopCandidates","nbTopCandidates","DEFAULT_N_TOP_CANDIDATES","_maxPages","maxPages","DEFAULT_MAX_PAGES","_flags","FLAG_STRIP_UNLIKELYS","FLAG_WEIGHT_CLASSES","FLAG_CLEAN_CONDITIONALLY","_parsedPages","_pageETags","_curPageNum","logEl","e","rv","nodeName","nodeType","TEXT_NODE","textContent","classDesc","className","replace","elDesc","id","log","msg","Array","prototype","map","call","arguments","x","join","dump","args","concat","console","DEFAULT_TAGS_TO_SCORE","toUpperCase","split","REGEXPS","unlikelyCandidates","okMaybeItsACandidate","positive","negative","extraneous","byline","replaceFonts","normalize","videos","nextLink","prevLink","whitespace","hasContent","DIV_TO_P_ELEMS","ALTER_TO_DIV_EXCEPTIONS","_postProcessContent","articleContent","_fixRelativeUris","_forEachNode","nodeList","fn","forEach","_someNode","some","_concatNodeLists","slice","nodeLists","list","apply","_getAllNodesWithTag","node","tagNames","querySelectorAll","tag","getElementsByTagName","scheme","prePath","pathBase","toAbsoluteURI","test","substr","indexOf","links","link","href","getAttribute","text","createTextNode","parentNode","replaceChild","setAttribute","imgs","img","src","_getArticleTitle","curTitle","origTitle","title","_getInnerText","match","length","headings","heading","substring","lastIndexOf","hOnes","trim","_prepDocument","styleNode","removeChild","body","_replaceBrs","fontNode","_setNodeTag","_nextElement","next","ELEMENT_NODE","nextSibling","elem","br","replaced","tagName","sibling","p","createElement","nextElem","appendChild","__JSDOMParser__","localName","toLowerCase","replacement","ownerDocument","firstChild","readability","i","attributes","name","value","_prepArticle","_cleanStyles","_cleanConditionally","_clean","_cleanHeaders","paragraph","imgCount","embedCount","objectCount","iframeCount","totalCount","_initializeNode","contentScore","_getClassWeight","_removeAndGetNext","nextNode","_getNextNode","ignoreSelfAndKids","firstElementChild","nextElementSibling","_getNextNodeNoElementProperties","nextSiblingEl","n","children","_checkByline","matchString","undefined","rel","_isValidByline","_getNodeAncestors","maxDepth","ancestors","push","_grabArticle","page","isPaging","pageCacheHtml","innerHTML","documentElement","stripUnlikelyCandidates","_flagIsActive","elementsToScore","_hasSinglePInsideElement","newNode","_hasChildBlockElement","childNodes","childNode","style","display","candidates","elementToScore","innerText","Math","min","floor","ancestor","level","scoreDivider","topCandidates","c","cl","candidate","candidateScore","_getLinkDensity","t","aTopCandidate","splice","pop","topCandidate","neededToCreateTopCandidate","kids","parentOfTopCandidate","lastScore","scoreThreshold","parentScore","siblingScoreThreshold","max","siblings","s","sl","append","contentBonus","linkDensity","nodeContent","nodeLength","search","div","_removeFlag","String","_getArticleMetadata","metadata","values","metaElements","namePattern","propertyPattern","element","elementName","elementProperty","content","excerpt","description","_removeScripts","scriptNode","nodeValue","removeAttribute","noscriptNode","normalizeSpaces","_getCharCount","cur","textLength","linkLength","linkNode","_findBaseUrl","noUrlParams","path","urlSlashes","reverse","cleanedSegments","possibleType","slashLen","segment","del","host","_findNextPageLink","possiblePages","allLinks","articleBaseUrl","il","linkHref","spec","linkText","linkHrefLeftover","score","linkObj","linkData","positiveNodeMatch","negativeNodeMatch","parentNodeClassAndId","linkTextAsNumber","parseInt","topPage","hasOwnProperty","nextHref","_successfulRequest","request","status","responseText","_ajax","url","XMLHttpRequest","respondToReadyState","readyState","success","error","onreadystatechange","open","setRequestHeader","send","postBody","_appendNextPage","nextPageLink","articlePage","getElementById","nextPageMarkup","pageUrl","thisPage","r","eTag","getResponseHeader","responseHtml","firstP","rPage","setTimeout","bind","weight","isEmbed","attributeValues","attr","_hasAncestorTag","depth","tagsList","curTagsLength","isList","li","input","embeds","ei","contentLength","toRemove","headerIndex","headers","flag","_addFlag","isProbablyReaderable","helperIsVisible","nodes","matches","textContentLength","sqrt","parse","numTags","Error","articleTitle","paragraphs","p1","p2","article","dir","module","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2010 Arc90 Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*\n * This code is heavily based on Arc90's readability.js (1.7.1) script\n * available at: http://code.google.com/p/arc90labs-readability\n */\n\n/* eslint-disable */\n\nconst root = this;\nconst Node = require('./lib/node');\n\n/**\n * Public constructor.\n * @param {Object}       uri     The URI descriptor object.\n * @param {HTMLDocument} doc     The document to parse.\n * @param {Object}       options The options object.\n */\nconst Readability = function (uri, doc, options) {\n  options = options || {};\n\n  this._uri = uri;\n  this._doc = doc;\n  this._biggestFrame = false;\n  this._articleByline = null;\n  this._articleDir = null;\n\n  // Configureable options\n  this._debug = !!options.debug;\n  this._maxElemsToParse = options.maxElemsToParse || this.DEFAULT_MAX_ELEMS_TO_PARSE;\n  this._nbTopCandidates = options.nbTopCandidates || this.DEFAULT_N_TOP_CANDIDATES;\n  this._maxPages = options.maxPages || this.DEFAULT_MAX_PAGES;\n\n  // Start with all flags set\n  this._flags = this.FLAG_STRIP_UNLIKELYS |\n                this.FLAG_WEIGHT_CLASSES |\n                this.FLAG_CLEAN_CONDITIONALLY;\n\n  // The list of pages we've parsed in this call of readability,\n  // for autopaging. As a key store for easier searching.\n  this._parsedPages = {};\n\n  // A list of the ETag headers of pages we've parsed, in case they happen to match,\n  // we'll know it's a duplicate.\n  this._pageETags = {};\n\n  // Make an AJAX request for each page and append it to the document.\n  this._curPageNum = 1;\n\n  // Control whether log messages are sent to the console\n  if (this._debug) {\n    function logEl(e) {\n      const rv = e.nodeName + ' ';\n      if (e.nodeType == e.TEXT_NODE) {\n        return rv + '(\"' + e.textContent + '\")';\n      }\n      const classDesc = e.className && ('.' + e.className.replace(/ /g, '.'));\n      const elDesc = e.id ? '(#' + e.id + classDesc + ')' :\n        (classDesc ? '(' + classDesc + ')' : '');\n      return rv + elDesc;\n    }\n    this.log = function () {\n      if ('dump' in root) {\n        const msg = Array.prototype.map.call(arguments, (x) => (x && x.nodeName) ? logEl(x) : x).join(' ');\n        dump('Reader: (Readability) ' + msg + '\\n');\n      } else if ('console' in root) {\n        const args = ['Reader: (Readability) '].concat(arguments);\n        console.log(...args);\n      }\n    };\n  } else {\n    this.log = function () {};\n  }\n};\n\nReadability.prototype = {\n  FLAG_STRIP_UNLIKELYS: 0x1,\n  FLAG_WEIGHT_CLASSES: 0x2,\n  FLAG_CLEAN_CONDITIONALLY: 0x4,\n\n  // Max number of nodes supported by this parser. Default: 0 (no limit)\n  DEFAULT_MAX_ELEMS_TO_PARSE: 0,\n\n  // The number of top candidates to consider when analysing how\n  // tight the competition is among candidates.\n  DEFAULT_N_TOP_CANDIDATES: 5,\n\n  // The maximum number of pages to loop through before we call\n  // it quits and just show a link.\n  DEFAULT_MAX_PAGES: 5,\n\n  // Element tags to score by default.\n  DEFAULT_TAGS_TO_SCORE: 'section,h2,h3,h4,h5,h6,p,td,pre'.toUpperCase().split(','),\n\n  // All of the regular expressions in use within readability.\n  // Defined up here so we don't instantiate them repeatedly in loops.\n  REGEXPS: {\n    unlikelyCandidates: /banner|combx|comment|community|disqus|extra|foot|header|menu|related|remark|rss|share|shoutbox|sidebar|skyscraper|sponsor|ad-break|agegate|pagination|pager|popup/i,\n    okMaybeItsACandidate: /and|article|body|column|main|shadow/i,\n    positive: /article|body|content|entry|hentry|main|page|pagination|post|text|blog|story/i,\n    negative: /hidden|banner|combx|comment|com-|contact|foot|footer|footnote|masthead|media|meta|outbrain|promo|related|scroll|share|shoutbox|sidebar|skyscraper|sponsor|shopping|tags|tool|widget/i,\n    extraneous: /print|archive|comment|discuss|e[\\-]?mail|share|reply|all|login|sign|single|utility/i,\n    byline: /byline|author|dateline|writtenby/i,\n    replaceFonts: /<(\\/?)font[^>]*>/gi,\n    normalize: /\\s{2,}/g,\n    videos: /\\/\\/(www\\.)?(dailymotion|youtube|youtube-nocookie|player\\.vimeo)\\.com/i,\n    nextLink: /(next|weiter|continue|>([^\\|]|$)|»([^\\|]|$))/i,\n    prevLink: /(prev|earl|old|new|<|«)/i,\n    whitespace: /^\\s*$/,\n    hasContent: /\\S$/,\n  },\n\n  DIV_TO_P_ELEMS: ['A', 'BLOCKQUOTE', 'DL', 'DIV', 'IMG', 'OL', 'P', 'PRE', 'TABLE', 'UL', 'SELECT'],\n\n  ALTER_TO_DIV_EXCEPTIONS: ['DIV', 'ARTICLE', 'SECTION', 'P'],\n\n  /**\n   * Run any post-process modifications to article content as necessary.\n   *\n   * @param Element\n   * @return void\n  * */\n  _postProcessContent(articleContent) {\n    // Readability cannot open relative uris so we convert them to absolute uris.\n    this._fixRelativeUris(articleContent);\n  },\n\n  /**\n   * Iterate over a NodeList, which doesn't natively fully implement the Array\n   * interface.\n   *\n   * For convenience, the current object context is applied to the provided\n   * iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return void\n   */\n  _forEachNode(nodeList, fn) {\n    return Array.prototype.forEach.call(nodeList, fn, this);\n  },\n\n  /**\n   * Iterate over a NodeList, return true if any of the provided iterate\n   * function calls returns true, false otherwise.\n   *\n   * For convenience, the current object context is applied to the\n   * provided iterate function.\n   *\n   * @param  NodeList nodeList The NodeList.\n   * @param  Function fn       The iterate function.\n   * @return Boolean\n   */\n  _someNode(nodeList, fn) {\n    return Array.prototype.some.call(nodeList, fn, this);\n  },\n\n  /**\n   * Concat all nodelists passed as arguments.\n   *\n   * @return ...NodeList\n   * @return Array\n   */\n  _concatNodeLists() {\n    const slice = Array.prototype.slice;\n    const args = slice.call(arguments);\n    const nodeLists = args.map((list) => slice.call(list));\n    return Array.prototype.concat.apply([], nodeLists);\n  },\n\n  _getAllNodesWithTag(node, tagNames) {\n    if (node.querySelectorAll) {\n      return node.querySelectorAll(tagNames.join(','));\n    }\n    return [].concat.apply([], tagNames.map((tag) => node.getElementsByTagName(tag)));\n  },\n\n  /**\n   * Converts each <a> and <img> uri in the given element to an absolute URI.\n   *\n   * @param Element\n   * @return void\n   */\n  _fixRelativeUris(articleContent) {\n    const scheme = this._uri.scheme;\n    const prePath = this._uri.prePath;\n    const pathBase = this._uri.pathBase;\n\n    function toAbsoluteURI(uri) {\n      // If this is already an absolute URI, return it.\n      if (/^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]*:/.test(uri)) { return uri; }\n\n      // Scheme-rooted relative URI.\n      if (uri.substr(0, 2) == '//') { return scheme + '://' + uri.substr(2); }\n\n      // Prepath-rooted relative URI.\n      if (uri[0] == '/') { return prePath + uri; }\n\n      // Dotslash relative URI.\n      if (uri.indexOf('./') === 0) { return pathBase + uri.slice(2); }\n\n      // Standard relative URI; add entire path. pathBase already includes a\n      // trailing \"/\".\n      return pathBase + uri;\n    }\n\n    const links = articleContent.getElementsByTagName('a');\n    this._forEachNode(links, function (link) {\n      const href = link.getAttribute('href');\n      if (href) {\n        // Replace links with javascript: URIs with text content, since\n        // they won't work after scripts have been removed from the page.\n        if (href.indexOf('javascript:') === 0) {\n          const text = this._doc.createTextNode(link.textContent);\n          link.parentNode.replaceChild(text, link);\n        } else {\n          link.setAttribute('href', toAbsoluteURI(href));\n        }\n      }\n    });\n\n    const imgs = articleContent.getElementsByTagName('img');\n    this._forEachNode(imgs, (img) => {\n      const src = img.getAttribute('src');\n      if (src) {\n        img.setAttribute('src', toAbsoluteURI(src));\n      }\n    });\n  },\n\n  /**\n   * Get the article title as an H1.\n   *\n   * @return void\n   * */\n  _getArticleTitle() {\n    const doc = this._doc;\n    let curTitle = '';\n    let origTitle = '';\n\n    try {\n      curTitle = origTitle = doc.title;\n\n      // If they had an element with id \"title\" in their HTML\n      if (typeof curTitle !== 'string') { curTitle = origTitle = this._getInnerText(doc.getElementsByTagName('title')[0]); }\n    } catch (e) {}\n\n    if (curTitle.match(/ [\\|\\-] /)) {\n      curTitle = origTitle.replace(/(.*)[\\|\\-] .*/gi, '$1');\n\n      if (curTitle.split(' ').length < 3) { curTitle = origTitle.replace(/[^\\|\\-]*[\\|\\-](.*)/gi, '$1'); }\n    } else if (curTitle.indexOf(': ') !== -1) {\n      // Check if we have an heading containing this exact string, so we\n      // could assume it's the full title.\n      const headings = this._concatNodeLists(\n        doc.getElementsByTagName('h1'),\n        doc.getElementsByTagName('h2')\n      );\n      const match = this._someNode(headings, (heading) => heading.textContent === curTitle);\n\n      // If we don't, let's extract the title out of the original title string.\n      if (!match) {\n        curTitle = origTitle.substring(origTitle.lastIndexOf(':') + 1);\n\n        // If the title is now too short, try the first colon instead:\n        if (curTitle.split(' ').length < 3) { curTitle = origTitle.substring(origTitle.indexOf(':') + 1); }\n      }\n    } else if (curTitle.length > 150 || curTitle.length < 15) {\n      const hOnes = doc.getElementsByTagName('h1');\n\n      if (hOnes.length === 1) { curTitle = this._getInnerText(hOnes[0]); }\n    }\n\n    curTitle = curTitle.trim();\n\n    if (curTitle.split(' ').length <= 4) { curTitle = origTitle; }\n\n    return curTitle;\n  },\n\n  /**\n   * Prepare the HTML document for readability to scrape it.\n   * This includes things like stripping javascript, CSS, and handling terrible markup.\n   *\n   * @return void\n   * */\n  _prepDocument() {\n    const doc = this._doc;\n\n    // Remove all style tags in head\n    this._forEachNode(doc.getElementsByTagName('style'), (styleNode) => {\n      styleNode.parentNode.removeChild(styleNode);\n    });\n\n    if (doc.body) {\n      this._replaceBrs(doc.body);\n    }\n\n    this._forEachNode(doc.getElementsByTagName('font'), function (fontNode) {\n      this._setNodeTag(fontNode, 'SPAN');\n    });\n  },\n\n  /**\n   * Finds the next element, starting from the given node, and ignoring\n   * whitespace in between. If the given node is an element, the same node is\n   * returned.\n   */\n  _nextElement(node) {\n    let next = node;\n    while (next\n        && (next.nodeType != Node.ELEMENT_NODE)\n        && this.REGEXPS.whitespace.test(next.textContent)) {\n      next = next.nextSibling;\n    }\n    return next;\n  },\n\n  /**\n   * Replaces 2 or more successive <br> elements with a single <p>.\n   * Whitespace between <br> elements are ignored. For example:\n   *   <div>foo<br>bar<br> <br><br>abc</div>\n   * will become:\n   *   <div>foo<br>bar<p>abc</p></div>\n   */\n  _replaceBrs(elem) {\n    this._forEachNode(elem.getElementsByTagName('br'), function (br) {\n      let next = br.nextSibling;\n\n      // Whether 2 or more <br> elements have been found and replaced with a\n      // <p> block.\n      let replaced = false;\n\n      // If we find a <br> chain, remove the <br>s until we hit another element\n      // or non-whitespace. This leaves behind the first <br> in the chain\n      // (which will be replaced with a <p> later).\n      while ((next = this._nextElement(next)) && (next.tagName == 'BR')) {\n        replaced = true;\n        var sibling = next.nextSibling;\n        next.parentNode.removeChild(next);\n        next = sibling;\n      }\n\n      // If we removed a <br> chain, replace the remaining <br> with a <p>. Add\n      // all sibling nodes as children of the <p> until we hit another <br>\n      // chain.\n      if (replaced) {\n        const p = this._doc.createElement('p');\n        br.parentNode.replaceChild(p, br);\n\n        next = p.nextSibling;\n        while (next) {\n          // If we've hit another <br><br>, we're done adding children to this <p>.\n          if (next.tagName == 'BR') {\n            const nextElem = this._nextElement(next);\n            if (nextElem && nextElem.tagName == 'BR') { break; }\n          }\n\n          // Otherwise, make this node a child of the new <p>.\n          var sibling = next.nextSibling;\n          p.appendChild(next);\n          next = sibling;\n        }\n      }\n    });\n  },\n\n  _setNodeTag(node, tag) {\n    this.log('_setNodeTag', node, tag);\n    if (node.__JSDOMParser__) {\n      node.localName = tag.toLowerCase();\n      node.tagName = tag.toUpperCase();\n      return node;\n    }\n\n    const replacement = node.ownerDocument.createElement(tag);\n    while (node.firstChild) {\n      replacement.appendChild(node.firstChild);\n    }\n    node.parentNode.replaceChild(replacement, node);\n    if (node.readability) { replacement.readability = node.readability; }\n\n    for (let i = 0; i < node.attributes.length; i++) {\n      replacement.setAttribute(node.attributes[i].name, node.attributes[i].value);\n    }\n    return replacement;\n  },\n\n  /**\n   * Prepare the article node for display. Clean out any inline styles,\n   * iframes, forms, strip extraneous <p> tags, etc.\n   *\n   * @param Element\n   * @return void\n   * */\n  _prepArticle(articleContent) {\n    this._cleanStyles(articleContent);\n\n    // Clean out junk from the article content\n    this._cleanConditionally(articleContent, 'form');\n    this._clean(articleContent, 'object');\n    this._clean(articleContent, 'embed');\n    this._clean(articleContent, 'h1');\n    this._clean(articleContent, 'footer');\n\n    // If there is only one h2, they are probably using it as a header\n    // and not a subheader, so remove it since we already have a header.\n    if (articleContent.getElementsByTagName('h2').length === 1) { this._clean(articleContent, 'h2'); }\n\n    this._clean(articleContent, 'iframe');\n    this._cleanHeaders(articleContent);\n\n    // Do these last as the previous stuff may have removed junk\n    // that will affect these\n    this._cleanConditionally(articleContent, 'table');\n    this._cleanConditionally(articleContent, 'ul');\n    this._cleanConditionally(articleContent, 'div');\n\n    // Remove extra paragraphs\n    this._forEachNode(articleContent.getElementsByTagName('p'), function (paragraph) {\n      const imgCount = paragraph.getElementsByTagName('img').length;\n      const embedCount = paragraph.getElementsByTagName('embed').length;\n      const objectCount = paragraph.getElementsByTagName('object').length;\n      // At this point, nasty iframes have been removed, only remain embedded video ones.\n      const iframeCount = paragraph.getElementsByTagName('iframe').length;\n      const totalCount = imgCount + embedCount + objectCount + iframeCount;\n\n      if (totalCount === 0 && !this._getInnerText(paragraph, false)) { paragraph.parentNode.removeChild(paragraph); }\n    });\n\n    this._forEachNode(articleContent.getElementsByTagName('br'), function (br) {\n      const next = this._nextElement(br.nextSibling);\n      if (next && next.tagName == 'P') { br.parentNode.removeChild(br); }\n    });\n  },\n\n  /**\n   * Initialize a node with the readability object. Also checks the\n   * className/id for special names to add to its score.\n   *\n   * @param Element\n   * @return void\n  * */\n  _initializeNode(node) {\n    node.readability = { contentScore: 0 };\n\n    switch (node.tagName) {\n      case 'DIV':\n        node.readability.contentScore += 5;\n        break;\n\n      case 'PRE':\n      case 'TD':\n      case 'BLOCKQUOTE':\n        node.readability.contentScore += 3;\n        break;\n\n      case 'ADDRESS':\n      case 'OL':\n      case 'UL':\n      case 'DL':\n      case 'DD':\n      case 'DT':\n      case 'LI':\n      case 'FORM':\n        node.readability.contentScore -= 3;\n        break;\n\n      case 'H1':\n      case 'H2':\n      case 'H3':\n      case 'H4':\n      case 'H5':\n      case 'H6':\n      case 'TH':\n        node.readability.contentScore -= 5;\n        break;\n    }\n\n    node.readability.contentScore += this._getClassWeight(node);\n  },\n\n  _removeAndGetNext(node) {\n    const nextNode = this._getNextNode(node, true);\n    node.parentNode.removeChild(node);\n    return nextNode;\n  },\n\n  /**\n   * Traverse the DOM from node to node, starting at the node passed in.\n   * Pass true for the second parameter to indicate this node itself\n   * (and its kids) are going away, and we want the next node over.\n   *\n   * Calling this in a loop will traverse the DOM depth-first.\n   */\n  _getNextNode(node, ignoreSelfAndKids) {\n    // First check for kids if those aren't being ignored\n    if (!ignoreSelfAndKids && node.firstElementChild) {\n      return node.firstElementChild;\n    }\n    // Then for siblings...\n    if (node.nextElementSibling) {\n      return node.nextElementSibling;\n    }\n    // And finally, move up the parent chain *and* find a sibling\n    // (because this is depth-first traversal, we will have already\n    // seen the parent nodes themselves).\n    do {\n      node = node.parentNode;\n    } while (node && !node.nextElementSibling);\n    return node && node.nextElementSibling;\n  },\n\n  /**\n   * Like _getNextNode, but for DOM implementations with no\n   * firstElementChild/nextElementSibling functionality...\n   */\n  _getNextNodeNoElementProperties(node, ignoreSelfAndKids) {\n    function nextSiblingEl(n) {\n      do {\n        n = n.nextSibling;\n      } while (n && n.nodeType !== n.ELEMENT_NODE);\n      return n;\n    }\n    // First check for kids if those aren't being ignored\n    if (!ignoreSelfAndKids && node.children[0]) {\n      return node.children[0];\n    }\n    // Then for siblings...\n    let next = nextSiblingEl(node);\n    if (next) {\n      return next;\n    }\n    // And finally, move up the parent chain *and* find a sibling\n    // (because this is depth-first traversal, we will have already\n    // seen the parent nodes themselves).\n    do {\n      node = node.parentNode;\n      if (node) { next = nextSiblingEl(node); }\n    } while (node && !next);\n    return node && next;\n  },\n\n  _checkByline(node, matchString) {\n    if (this._articleByline) {\n      return false;\n    }\n\n    if (node.getAttribute !== undefined) {\n      var rel = node.getAttribute('rel');\n    }\n\n    if ((rel === 'author' || this.REGEXPS.byline.test(matchString)) && this._isValidByline(node.textContent)) {\n      this._articleByline = node.textContent.trim();\n      return true;\n    }\n\n    return false;\n  },\n\n  _getNodeAncestors(node, maxDepth) {\n    maxDepth = maxDepth || 0;\n    let i = 0,\n      ancestors = [];\n    while (node.parentNode) {\n      ancestors.push(node.parentNode);\n      if (maxDepth && ++i === maxDepth) { break; }\n      node = node.parentNode;\n    }\n    return ancestors;\n  },\n\n  /** *\n   * grabArticle - Using a variety of metrics (content score, classname, element types), find the content that is\n   *         most likely to be the stuff a user wants to read. Then return it wrapped up in a div.\n   *\n   * @param page a document to run upon. Needs to be a full document, complete with body.\n   * @return Element\n  * */\n  _grabArticle(page) {\n    this.log('**** grabArticle ****');\n    const doc = this._doc;\n    const isPaging = (page !== null);\n    page = page || this._doc.body;\n\n    // We can't grab an article if we don't have a page!\n    if (!page) {\n      this.log('No body found in document. Abort.');\n      return null;\n    }\n\n    const pageCacheHtml = page.innerHTML;\n\n    // Check if any \"dir\" is set on the toplevel document element\n    this._articleDir = doc.documentElement.getAttribute('dir');\n\n    while (true) {\n      const stripUnlikelyCandidates = this._flagIsActive(this.FLAG_STRIP_UNLIKELYS);\n\n      // First, node prepping. Trash nodes that look cruddy (like ones with the\n      // class name \"comment\", etc), and turn divs into P tags where they have been\n      // used inappropriately (as in, where they contain no other block level elements.)\n      const elementsToScore = [];\n      var node = this._doc.documentElement;\n\n      while (node) {\n        const matchString = node.className + ' ' + node.id;\n\n        // Check to see if this node is a byline, and remove it if it is.\n        if (this._checkByline(node, matchString)) {\n          node = this._removeAndGetNext(node);\n          continue;\n        }\n\n        // Remove unlikely candidates\n        if (stripUnlikelyCandidates) {\n          if (this.REGEXPS.unlikelyCandidates.test(matchString) &&\n              !this.REGEXPS.okMaybeItsACandidate.test(matchString) &&\n              node.tagName !== 'BODY' &&\n              node.tagName !== 'A') {\n            this.log('Removing unlikely candidate - ' + matchString);\n            node = this._removeAndGetNext(node);\n            continue;\n          }\n        }\n\n        if (this.DEFAULT_TAGS_TO_SCORE.indexOf(node.tagName) !== -1) {\n          elementsToScore.push(node);\n        }\n\n        // Turn all divs that don't have children block level elements into p's\n        if (node.tagName === 'DIV') {\n          // Sites like http://mobile.slate.com encloses each paragraph with a DIV\n          // element. DIVs with only a P element inside and no text content can be\n          // safely converted into plain P elements to avoid confusing the scoring\n          // algorithm with DIVs with are, in practice, paragraphs.\n          if (this._hasSinglePInsideElement(node)) {\n            const newNode = node.children[0];\n            node.parentNode.replaceChild(newNode, node);\n            node = newNode;\n          } else if (!this._hasChildBlockElement(node)) {\n            node = this._setNodeTag(node, 'P');\n            elementsToScore.push(node);\n          } else {\n            // EXPERIMENTAL\n            this._forEachNode(node.childNodes, (childNode) => {\n              if (childNode.nodeType === Node.TEXT_NODE) {\n                const p = doc.createElement('p');\n                p.textContent = childNode.textContent;\n                p.style.display = 'inline';\n                p.className = 'readability-styled';\n                node.replaceChild(p, childNode);\n              }\n            });\n          }\n        }\n        node = this._getNextNode(node);\n      }\n\n      /**\n       * Loop through all paragraphs, and assign a score to them based on how content-y they look.\n       * Then add their score to their parent node.\n       *\n       * A score is determined by things like number of commas, class names, etc. Maybe eventually link density.\n      * */\n      var candidates = [];\n      this._forEachNode(elementsToScore, function (elementToScore) {\n        if (!elementToScore.parentNode || typeof (elementToScore.parentNode.tagName) === 'undefined') { return; }\n\n        // If this paragraph is less than 25 characters, don't even count it.\n        const innerText = this._getInnerText(elementToScore);\n        if (innerText.length < 25) { return; }\n\n        // Exclude nodes with no ancestor.\n        const ancestors = this._getNodeAncestors(elementToScore, 3);\n        if (ancestors.length === 0) { return; }\n\n        let contentScore = 0;\n\n        // Add a point for the paragraph itself as a base.\n        contentScore += 1;\n\n        // Add points for any commas within this paragraph.\n        contentScore += innerText.split(',').length;\n\n        // For every 100 characters in this paragraph, add another point. Up to 3 points.\n        contentScore += Math.min(Math.floor(innerText.length / 100), 3);\n\n        // Initialize and score ancestors.\n        this._forEachNode(ancestors, function (ancestor, level) {\n          if (!ancestor.tagName) { return; }\n\n          if (typeof (ancestor.readability) === 'undefined') {\n            this._initializeNode(ancestor);\n            candidates.push(ancestor);\n          }\n\n          // Node score divider:\n          // - parent:             1 (no division)\n          // - grandparent:        2\n          // - great grandparent+: ancestor level * 3\n          const scoreDivider = level === 0 ? 1 : level === 1 ? 2 : level * 3;\n          ancestor.readability.contentScore += contentScore / scoreDivider;\n        });\n      });\n\n      // After we've calculated scores, loop through all of the possible\n      // candidate nodes we found and find the one with the highest score.\n      const topCandidates = [];\n      for (let c = 0, cl = candidates.length; c < cl; c += 1) {\n        const candidate = candidates[c];\n\n        // Scale the final candidates score based on link density. Good content\n        // should have a relatively small link density (5% or less) and be mostly\n        // unaffected by this operation.\n        const candidateScore = candidate.readability.contentScore * (1 - this._getLinkDensity(candidate));\n        candidate.readability.contentScore = candidateScore;\n\n        this.log('Candidate:', candidate, 'with score ' + candidateScore);\n\n        for (let t = 0; t < this._nbTopCandidates; t++) {\n          const aTopCandidate = topCandidates[t];\n\n          if (!aTopCandidate || candidateScore > aTopCandidate.readability.contentScore) {\n            topCandidates.splice(t, 0, candidate);\n            if (topCandidates.length > this._nbTopCandidates) { topCandidates.pop(); }\n            break;\n          }\n        }\n      }\n\n      let topCandidate = topCandidates[0] || null;\n      let neededToCreateTopCandidate = false;\n\n      // If we still have no top candidate, just use the body as a last resort.\n      // We also have to copy the body node so it is something we can modify.\n      if (topCandidate === null || topCandidate.tagName === 'BODY') {\n        // Move all of the page's children into topCandidate\n        topCandidate = doc.createElement('DIV');\n        neededToCreateTopCandidate = true;\n        // Move everything (not just elements, also text nodes etc.) into the container\n        // so we even include text directly in the body:\n        const kids = page.childNodes;\n        while (kids.length) {\n          this.log('Moving child out:', kids[0]);\n          topCandidate.appendChild(kids[0]);\n        }\n\n        page.appendChild(topCandidate);\n\n        this._initializeNode(topCandidate);\n      } else if (topCandidate) {\n        // Because of our bonus system, parents of candidates might have scores\n        // themselves. They get half of the node. There won't be nodes with higher\n        // scores than our topCandidate, but if we see the score going *up* in the first\n        // few steps up the tree, that's a decent sign that there might be more content\n        // lurking in other places that we want to unify in. The sibling stuff\n        // below does some of that - but only if we've looked high enough up the DOM\n        // tree.\n        let parentOfTopCandidate = topCandidate.parentNode;\n        let lastScore = topCandidate.readability.contentScore;\n        // The scores shouldn't get too low.\n        const scoreThreshold = lastScore / 3;\n        while (parentOfTopCandidate && parentOfTopCandidate.readability) {\n          const parentScore = parentOfTopCandidate.readability.contentScore;\n          if (parentScore < scoreThreshold) { break; }\n          if (parentScore > lastScore) {\n            // Alright! We found a better parent to use.\n            topCandidate = parentOfTopCandidate;\n            break;\n          }\n          lastScore = parentOfTopCandidate.readability.contentScore;\n          parentOfTopCandidate = parentOfTopCandidate.parentNode;\n        }\n      }\n\n      // Now that we have the top candidate, look through its siblings for content\n      // that might also be related. Things like preambles, content split by ads\n      // that we removed, etc.\n      const articleContent = doc.createElement('DIV');\n      if (isPaging) { articleContent.id = 'readability-content'; }\n\n      const siblingScoreThreshold = Math.max(10, topCandidate.readability.contentScore * 0.2);\n      const siblings = topCandidate.parentNode.children;\n\n      for (let s = 0, sl = siblings.length; s < sl; s++) {\n        let sibling = siblings[s];\n        let append = false;\n\n        this.log('Looking at sibling node:', sibling, sibling.readability ? ('with score ' + sibling.readability.contentScore) : '');\n        this.log('Sibling has score', sibling.readability ? sibling.readability.contentScore : 'Unknown');\n\n        if (sibling === topCandidate) {\n          append = true;\n        } else {\n          let contentBonus = 0;\n\n          // Give a bonus if sibling nodes and top candidates have the example same classname\n          if (sibling.className === topCandidate.className && topCandidate.className !== '') { contentBonus += topCandidate.readability.contentScore * 0.2; }\n\n          if (sibling.readability &&\n              ((sibling.readability.contentScore + contentBonus) >= siblingScoreThreshold)) {\n            append = true;\n          } else if (sibling.nodeName === 'P') {\n            const linkDensity = this._getLinkDensity(sibling);\n            const nodeContent = this._getInnerText(sibling);\n            const nodeLength = nodeContent.length;\n\n            if (nodeLength > 80 && linkDensity < 0.25) {\n              append = true;\n            } else if (nodeLength < 80 && linkDensity === 0 && nodeContent.search(/\\.( |$)/) !== -1) {\n              append = true;\n            }\n          }\n        }\n\n        if (append) {\n          this.log('Appending node:', sibling);\n\n          if (this.ALTER_TO_DIV_EXCEPTIONS.indexOf(sibling.nodeName) === -1) {\n            // We have a node that isn't a common block level element, like a form or td tag.\n            // Turn it into a div so it doesn't get filtered out later by accident.\n            this.log('Altering sibling:', sibling, 'to div.');\n\n            sibling = this._setNodeTag(sibling, 'DIV');\n          }\n\n          articleContent.appendChild(sibling);\n          // siblings is a reference to the children array, and\n          // sibling is removed from the array when we call appendChild().\n          // As a result, we must revisit this index since the nodes\n          // have been shifted.\n          s -= 1;\n          sl -= 1;\n        }\n      }\n\n      if (this._debug) { this.log('Article content pre-prep: ' + articleContent.innerHTML); }\n      // So we have all of the content that we need. Now we clean it up for presentation.\n      this._prepArticle(articleContent);\n      if (this._debug) { this.log('Article content post-prep: ' + articleContent.innerHTML); }\n\n      if (this._curPageNum === 1) {\n        if (neededToCreateTopCandidate) {\n          // We already created a fake div thing, and there wouldn't have been any siblings left\n          // for the previous loop, so there's no point trying to create a new div, and then\n          // move all the children over. Just assign IDs and class names here. No need to append\n          // because that already happened anyway.\n          topCandidate.id = 'readability-page-1';\n          topCandidate.className = 'page';\n        } else {\n          const div = doc.createElement('DIV');\n          div.id = 'readability-page-1';\n          div.className = 'page';\n          const children = articleContent.childNodes;\n          while (children.length) {\n            div.appendChild(children[0]);\n          }\n          articleContent.appendChild(div);\n        }\n      }\n\n      if (this._debug) { this.log('Article content after paging: ' + articleContent.innerHTML); }\n\n      // Now that we've gone through the full algorithm, check to see if\n      // we got any meaningful content. If we didn't, we may need to re-run\n      // grabArticle with different flags set. This gives us a higher likelihood of\n      // finding the content, and the sieve approach gives us a higher likelihood of\n      // finding the -right- content.\n      if (this._getInnerText(articleContent, true).length < 500) {\n        page.innerHTML = pageCacheHtml;\n\n        if (this._flagIsActive(this.FLAG_STRIP_UNLIKELYS)) {\n          this._removeFlag(this.FLAG_STRIP_UNLIKELYS);\n        } else if (this._flagIsActive(this.FLAG_WEIGHT_CLASSES)) {\n          this._removeFlag(this.FLAG_WEIGHT_CLASSES);\n        } else if (this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY)) {\n          this._removeFlag(this.FLAG_CLEAN_CONDITIONALLY);\n        } else {\n          return null;\n        }\n      } else {\n        return articleContent;\n      }\n    }\n  },\n\n  /**\n   * Check whether the input string could be a byline.\n   * This verifies that the input is a string, and that the length\n   * is less than 100 chars.\n   *\n   * @param possibleByline {string} - a string to check whether its a byline.\n   * @return Boolean - whether the input string is a byline.\n   */\n  _isValidByline(byline) {\n    if (typeof byline === 'string' || byline instanceof String) {\n      byline = byline.trim();\n      return (byline.length > 0) && (byline.length < 100);\n    }\n    return false;\n  },\n\n  /**\n   * Attempts to get excerpt and byline metadata for the article.\n   *\n   * @return Object with optional \"excerpt\" and \"byline\" properties\n   */\n  _getArticleMetadata() {\n    const metadata = {};\n    const values = {};\n    const metaElements = this._doc.getElementsByTagName('meta');\n\n    // Match \"description\", or Twitter's \"twitter:description\" (Cards)\n    // in name attribute.\n    const namePattern = /^\\s*((twitter)\\s*:\\s*)?(description|title)\\s*$/gi;\n\n    // Match Facebook's Open Graph title & description properties.\n    const propertyPattern = /^\\s*og\\s*:\\s*(description|title)\\s*$/gi;\n\n    // Find description tags.\n    this._forEachNode(metaElements, (element) => {\n      const elementName = element.getAttribute('name');\n      const elementProperty = element.getAttribute('property');\n\n      if ([elementName, elementProperty].indexOf('author') !== -1) {\n        metadata.byline = element.getAttribute('content');\n        return;\n      }\n\n      let name = null;\n      if (namePattern.test(elementName)) {\n        name = elementName;\n      } else if (propertyPattern.test(elementProperty)) {\n        name = elementProperty;\n      }\n\n      if (name) {\n        const content = element.getAttribute('content');\n        if (content) {\n          // Convert to lowercase and remove any whitespace\n          // so we can match below.\n          name = name.toLowerCase().replace(/\\s/g, '');\n          values[name] = content.trim();\n        }\n      }\n    });\n\n    if ('description' in values) {\n      metadata.excerpt = values.description;\n    } else if ('og:description' in values) {\n      // Use facebook open graph description.\n      metadata.excerpt = values['og:description'];\n    } else if ('twitter:description' in values) {\n      // Use twitter cards description.\n      metadata.excerpt = values['twitter:description'];\n    }\n\n    if ('og:title' in values) {\n      // Use facebook open graph title.\n      metadata.title = values['og:title'];\n    } else if ('twitter:title' in values) {\n      // Use twitter cards title.\n      metadata.title = values['twitter:title'];\n    }\n\n    return metadata;\n  },\n\n  /**\n   * Removes script tags from the document.\n   *\n   * @param Element\n  * */\n  _removeScripts(doc) {\n    this._forEachNode(doc.getElementsByTagName('script'), (scriptNode) => {\n      scriptNode.nodeValue = '';\n      scriptNode.removeAttribute('src');\n\n      if (scriptNode.parentNode) { scriptNode.parentNode.removeChild(scriptNode); }\n    });\n    this._forEachNode(doc.getElementsByTagName('noscript'), (noscriptNode) => {\n      if (noscriptNode.parentNode) { noscriptNode.parentNode.removeChild(noscriptNode); }\n    });\n  },\n\n  /**\n   * Check if this node has only whitespace and a single P element\n   * Returns false if the DIV node contains non-empty text nodes\n   * or if it contains no P or more than 1 element.\n   *\n   * @param Element\n  * */\n  _hasSinglePInsideElement(element) {\n    // There should be exactly 1 element child which is a P:\n    if (element.children.length != 1 || element.children[0].tagName !== 'P') {\n      return false;\n    }\n\n    // And there should be no text nodes with real content\n    return !this._someNode(element.childNodes, function (node) {\n      return node.nodeType === Node.TEXT_NODE &&\n             this.REGEXPS.hasContent.test(node.textContent);\n    });\n  },\n\n  /**\n   * Determine whether element has any children block level elements.\n   *\n   * @param Element\n   */\n  _hasChildBlockElement(element) {\n    return this._someNode(element.childNodes, function (node) {\n      return this.DIV_TO_P_ELEMS.indexOf(node.tagName) !== -1 ||\n             this._hasChildBlockElement(node);\n    });\n  },\n\n  /**\n   * Get the inner text of a node - cross browser compatibly.\n   * This also strips out any excess whitespace to be found.\n   *\n   * @param Element\n   * @param Boolean normalizeSpaces (default: true)\n   * @return string\n  * */\n  _getInnerText(e, normalizeSpaces) {\n    normalizeSpaces = (typeof normalizeSpaces === 'undefined') ? true : normalizeSpaces;\n    const textContent = e.textContent.trim();\n\n    if (normalizeSpaces) {\n      return textContent.replace(this.REGEXPS.normalize, ' ');\n    }\n    return textContent;\n  },\n\n  /**\n   * Get the number of times a string s appears in the node e.\n   *\n   * @param Element\n   * @param string - what to split on. Default is \",\"\n   * @return number (integer)\n  * */\n  _getCharCount(e, s) {\n    s = s || ',';\n    return this._getInnerText(e).split(s).length - 1;\n  },\n\n  /**\n   * Remove the style attribute on every e and under.\n   * TODO: Test if getElementsByTagName(*) is faster.\n   *\n   * @param Element\n   * @return void\n  * */\n  _cleanStyles(e) {\n    e = e || this._doc;\n    if (!e) { return; }\n    let cur = e.firstChild;\n\n    // Remove any root styles, if we're able.\n    if (typeof e.removeAttribute === 'function' && e.className !== 'readability-styled') { e.removeAttribute('style'); }\n\n    // Go until there are no more child nodes\n    while (cur !== null) {\n      if (cur.nodeType === cur.ELEMENT_NODE) {\n        // Remove style attribute(s) :\n        if (cur.className !== 'readability-styled') { cur.removeAttribute('style'); }\n\n        this._cleanStyles(cur);\n      }\n\n      cur = cur.nextSibling;\n    }\n  },\n\n  /**\n   * Get the density of links as a percentage of the content\n   * This is the amount of text that is inside a link divided by the total text in the node.\n   *\n   * @param Element\n   * @return number (float)\n  * */\n  _getLinkDensity(element) {\n    const textLength = this._getInnerText(element).length;\n    if (textLength === 0) { return; }\n\n    let linkLength = 0;\n\n    // XXX implement _reduceNodeList?\n    this._forEachNode(element.getElementsByTagName('a'), function (linkNode) {\n      linkLength += this._getInnerText(linkNode).length;\n    });\n\n    return linkLength / textLength;\n  },\n\n  /**\n   * Find a cleaned up version of the current URL, to use for comparing links for possible next-pageyness.\n   *\n   * @author Dan Lacy\n   * @return string the base url\n  * */\n  _findBaseUrl() {\n    const uri = this._uri;\n    const noUrlParams = uri.path.split('?')[0];\n    const urlSlashes = noUrlParams.split('/').reverse();\n    const cleanedSegments = [];\n    let possibleType = '';\n\n    for (let i = 0, slashLen = urlSlashes.length; i < slashLen; i += 1) {\n      let segment = urlSlashes[i];\n\n      // Split off and save anything that looks like a file type.\n      if (segment.indexOf('.') !== -1) {\n        possibleType = segment.split('.')[1];\n\n        // If the type isn't alpha-only, it's probably not actually a file extension.\n        if (!possibleType.match(/[^a-zA-Z]/)) { segment = segment.split('.')[0]; }\n      }\n\n      // EW-CMS specific segment replacement. Ugly.\n      // Example: http://www.ew.com/ew/article/0,,20313460_20369436,00.html\n      if (segment.indexOf(',00') !== -1) { segment = segment.replace(',00', ''); }\n\n      // If our first or second segment has anything looking like a page number, remove it.\n      if (segment.match(/((_|-)?p[a-z]*|(_|-))[0-9]{1,2}$/i) && ((i === 1) || (i === 0))) { segment = segment.replace(/((_|-)?p[a-z]*|(_|-))[0-9]{1,2}$/i, ''); }\n\n      let del = false;\n\n      // If this is purely a number, and it's the first or second segment,\n      // it's probably a page number. Remove it.\n      if (i < 2 && segment.match(/^\\d{1,2}$/)) { del = true; }\n\n      // If this is the first segment and it's just \"index\", remove it.\n      if (i === 0 && segment.toLowerCase() === 'index') { del = true; }\n\n      // If our first or second segment is smaller than 3 characters,\n      // and the first segment was purely alphas, remove it.\n      if (i < 2 && segment.length < 3 && !urlSlashes[0].match(/[a-z]/i)) { del = true; }\n\n      // If it's not marked for deletion, push it to cleanedSegments.\n      if (!del) { cleanedSegments.push(segment); }\n    }\n\n    // This is our final, cleaned, base article URL.\n    return uri.scheme + '://' + uri.host + cleanedSegments.reverse().join('/');\n  },\n\n  /**\n   * Look for any paging links that may occur within the document.\n   *\n   * @param body\n   * @return object (array)\n  * */\n  _findNextPageLink(elem) {\n    const uri = this._uri;\n    const possiblePages = {};\n    const allLinks = elem.getElementsByTagName('a');\n    const articleBaseUrl = this._findBaseUrl();\n\n    // Loop through all links, looking for hints that they may be next-page links.\n    // Things like having \"page\" in their textContent, className or id, or being a child\n    // of a node with a page-y className or id.\n    //\n    // Also possible: levenshtein distance? longest common subsequence?\n    //\n    // After we do that, assign each page a score, and\n    for (let i = 0, il = allLinks.length; i < il; i += 1) {\n      const link = allLinks[i];\n      const linkHref = allLinks[i].href.replace(/#.*$/, '').replace(/\\/$/, '');\n\n      // If we've already seen this page, ignore it.\n      if (linkHref === '' ||\n        linkHref === articleBaseUrl ||\n        linkHref === uri.spec ||\n        linkHref in this._parsedPages) {\n        continue;\n      }\n\n      // If it's on a different domain, skip it.\n      if (uri.host !== linkHref.split(/\\/+/g)[1]) { continue; }\n\n      const linkText = this._getInnerText(link);\n\n      // If the linkText looks like it's not the next page, skip it.\n      if (linkText.match(this.REGEXPS.extraneous) || linkText.length > 25) { continue; }\n\n      // If the leftovers of the URL after removing the base URL don't contain\n      // any digits, it's certainly not a next page link.\n      const linkHrefLeftover = linkHref.replace(articleBaseUrl, '');\n      if (!linkHrefLeftover.match(/\\d/)) { continue; }\n\n      if (!(linkHref in possiblePages)) {\n        possiblePages[linkHref] = { score: 0, linkText, href: linkHref };\n      } else {\n        possiblePages[linkHref].linkText += ' | ' + linkText;\n      }\n\n      const linkObj = possiblePages[linkHref];\n\n      // If the articleBaseUrl isn't part of this URL, penalize this link. It could\n      // still be the link, but the odds are lower.\n      // Example: http://www.actionscript.org/resources/articles/745/1/JavaScript-and-VBScript-Injection-in-ActionScript-3/Page1.html\n      if (linkHref.indexOf(articleBaseUrl) !== 0) { linkObj.score -= 25; }\n\n      const linkData = linkText + ' ' + link.className + ' ' + link.id;\n      if (linkData.match(this.REGEXPS.nextLink)) { linkObj.score += 50; }\n\n      if (linkData.match(/pag(e|ing|inat)/i)) { linkObj.score += 25; }\n\n      if (linkData.match(/(first|last)/i)) {\n        // -65 is enough to negate any bonuses gotten from a > or » in the text,\n        // If we already matched on \"next\", last is probably fine.\n        // If we didn't, then it's bad. Penalize.\n        if (!linkObj.linkText.match(this.REGEXPS.nextLink)) { linkObj.score -= 65; }\n      }\n\n      if (linkData.match(this.REGEXPS.negative) || linkData.match(this.REGEXPS.extraneous)) { linkObj.score -= 50; }\n\n      if (linkData.match(this.REGEXPS.prevLink)) { linkObj.score -= 200; }\n\n      // If a parentNode contains page or paging or paginat\n      let parentNode = link.parentNode;\n      let positiveNodeMatch = false;\n      let negativeNodeMatch = false;\n\n      while (parentNode) {\n        const parentNodeClassAndId = parentNode.className + ' ' + parentNode.id;\n\n        if (!positiveNodeMatch && parentNodeClassAndId && parentNodeClassAndId.match(/pag(e|ing|inat)/i)) {\n          positiveNodeMatch = true;\n          linkObj.score += 25;\n        }\n\n        if (!negativeNodeMatch && parentNodeClassAndId && parentNodeClassAndId.match(this.REGEXPS.negative)) {\n          // If this is just something like \"footer\", give it a negative.\n          // If it's something like \"body-and-footer\", leave it be.\n          if (!parentNodeClassAndId.match(this.REGEXPS.positive)) {\n            linkObj.score -= 25;\n            negativeNodeMatch = true;\n          }\n        }\n\n        parentNode = parentNode.parentNode;\n      }\n\n      // If the URL looks like it has paging in it, add to the score.\n      // Things like /page/2/, /pagenum/2, ?p=3, ?page=11, ?pagination=34\n      if (linkHref.match(/p(a|g|ag)?(e|ing|ination)?(=|\\/)[0-9]{1,2}/i) || linkHref.match(/(page|paging)/i)) { linkObj.score += 25; }\n\n      // If the URL contains negative values, give a slight decrease.\n      if (linkHref.match(this.REGEXPS.extraneous)) { linkObj.score -= 15; }\n\n      /**\n       * Minor punishment to anything that doesn't match our current URL.\n       * NOTE: I'm finding this to cause more harm than good where something is exactly 50 points.\n       *     Dan, can you show me a counterexample where this is necessary?\n       * if (linkHref.indexOf(window.location.href) !== 0) {\n       *  linkObj.score -= 1;\n       * }\n      * */\n\n      // If the link text can be parsed as a number, give it a minor bonus, with a slight\n      // bias towards lower numbered pages. This is so that pages that might not have 'next'\n      // in their text can still get scored, and sorted properly by score.\n      const linkTextAsNumber = parseInt(linkText, 10);\n      if (linkTextAsNumber) {\n        // Punish 1 since we're either already there, or it's probably\n        // before what we want anyways.\n        if (linkTextAsNumber === 1) {\n          linkObj.score -= 10;\n        } else {\n          linkObj.score += Math.max(0, 10 - linkTextAsNumber);\n        }\n      }\n    }\n\n    // Loop thrugh all of our possible pages from above and find our top\n    // candidate for the next page URL. Require at least a score of 50, which\n    // is a relatively high confidence that this page is the next link.\n    let topPage = null;\n    for (const page in possiblePages) {\n      if (possiblePages.hasOwnProperty(page)) {\n        if (possiblePages[page].score >= 50 &&\n          (!topPage || topPage.score < possiblePages[page].score)) { topPage = possiblePages[page]; }\n      }\n    }\n\n    if (topPage) {\n      const nextHref = topPage.href.replace(/\\/$/, '');\n\n      this.log('NEXT PAGE IS ' + nextHref);\n      this._parsedPages[nextHref] = true;\n      return nextHref;\n    }\n    return null;\n  },\n\n  _successfulRequest(request) {\n    return (request.status >= 200 && request.status < 300) ||\n        request.status === 304 ||\n         (request.status === 0 && request.responseText);\n  },\n\n  _ajax(url, options) {\n    const request = new XMLHttpRequest();\n\n    function respondToReadyState(readyState) {\n      if (request.readyState === 4) {\n        if (this._successfulRequest(request)) {\n          if (options.success) { options.success(request); }\n        } else if (options.error) { options.error(request); }\n      }\n    }\n\n    if (typeof options === 'undefined') { options = {}; }\n\n    request.onreadystatechange = respondToReadyState;\n\n    request.open('get', url, true);\n    request.setRequestHeader('Accept', 'text/html');\n\n    try {\n      request.send(options.postBody);\n    } catch (e) {\n      if (options.error) { options.error(); }\n    }\n\n    return request;\n  },\n\n  _appendNextPage(nextPageLink) {\n    const doc = this._doc;\n    this._curPageNum += 1;\n\n    const articlePage = doc.createElement('DIV');\n    articlePage.id = 'readability-page-' + this._curPageNum;\n    articlePage.className = 'page';\n    articlePage.innerHTML = '<p class=\"page-separator\" title=\"Page ' + this._curPageNum + '\">&sect;</p>';\n\n    doc.getElementById('readability-content').appendChild(articlePage);\n\n    if (this._curPageNum > this._maxPages) {\n      const nextPageMarkup = \"<div style='text-align: center'><a href='\" + nextPageLink + \"'>View Next Page</a></div>\";\n      articlePage.innerHTML += nextPageMarkup;\n      return;\n    }\n\n    // Now that we've built the article page DOM element, get the page content\n    // asynchronously and load the cleaned content into the div we created for it.\n    (function (pageUrl, thisPage) {\n      this._ajax(pageUrl, {\n        success(r) {\n          // First, check to see if we have a matching ETag in headers - if we do, this is a duplicate page.\n          const eTag = r.getResponseHeader('ETag');\n          if (eTag) {\n            if (eTag in this._pageETags) {\n              this.log('Exact duplicate page found via ETag. Aborting.');\n              articlePage.style.display = 'none';\n              return;\n            }\n            this._pageETags[eTag] = 1;\n          }\n\n          // TODO: this ends up doubling up page numbers on NYTimes articles. Need to generically parse those away.\n          const page = doc.createElement('DIV');\n\n          // Do some preprocessing to our HTML to make it ready for appending.\n          // - Remove any script tags. Swap and reswap newlines with a unicode\n          //   character because multiline regex doesn't work in javascript.\n          // - Turn any noscript tags into divs so that we can parse them. This\n          //   allows us to find any next page links hidden via javascript.\n          // - Turn all double br's into p's - was handled by prepDocument in the original view.\n          //   Maybe in the future abstract out prepDocument to work for both the original document\n          //   and AJAX-added pages.\n          let responseHtml = r.responseText.replace(/\\n/g, '\\uffff').replace(/<script.*?>.*?<\\/script>/gi, '');\n          responseHtml = responseHtml.replace(/\\n/g, '\\uffff').replace(/<script.*?>.*?<\\/script>/gi, '');\n          responseHtml = responseHtml.replace(/\\uffff/g, '\\n').replace(/<(\\/?)noscript/gi, '<$1div');\n          responseHtml = responseHtml.replace(this.REGEXPS.replaceFonts, '<$1span>');\n\n          page.innerHTML = responseHtml;\n          this._replaceBrs(page);\n\n          // Reset all flags for the next page, as they will search through it and\n          // disable as necessary at the end of grabArticle.\n          this._flags = 0x1 | 0x2 | 0x4;\n\n          const nextPageLink = this._findNextPageLink(page);\n\n          // NOTE: if we end up supporting _appendNextPage(), we'll need to\n          // change this call to be async\n          const content = this._grabArticle(page);\n\n          if (!content) {\n            this.log('No content found in page to append. Aborting.');\n            return;\n          }\n\n          // Anti-duplicate mechanism. Essentially, get the first paragraph of our new page.\n          // Compare it against all of the the previous document's we've gotten. If the previous\n          // document contains exactly the innerHTML of this first paragraph, it's probably a duplicate.\n          const firstP = content.getElementsByTagName('P').length ? content.getElementsByTagName('P')[0] : null;\n          if (firstP && firstP.innerHTML.length > 100) {\n            for (let i = 1; i <= this._curPageNum; i += 1) {\n              const rPage = doc.getElementById('readability-page-' + i);\n              if (rPage && rPage.innerHTML.indexOf(firstP.innerHTML) !== -1) {\n                this.log('Duplicate of page ' + i + ' - skipping.');\n                articlePage.style.display = 'none';\n                this._parsedPages[pageUrl] = true;\n                return;\n              }\n            }\n          }\n\n          this._removeScripts(content);\n\n          thisPage.innerHTML += content.innerHTML;\n\n          // After the page has rendered, post process the content. This delay is necessary because,\n          // in webkit at least, offsetWidth is not set in time to determine image width. We have to\n          // wait a little bit for reflow to finish before we can fix floating images.\n          setTimeout(() => {\n            this._postProcessContent(thisPage);\n          }, 500);\n\n\n          if (nextPageLink) { this._appendNextPage(nextPageLink); }\n        }\n      });\n    }).bind(this)(nextPageLink, articlePage);\n  },\n\n  /**\n   * Get an elements class/id weight. Uses regular expressions to tell if this\n   * element looks good or bad.\n   *\n   * @param Element\n   * @return number (Integer)\n  * */\n  _getClassWeight(e) {\n    if (!this._flagIsActive(this.FLAG_WEIGHT_CLASSES)) { return 0; }\n\n    let weight = 0;\n\n    // Look for a special classname\n    if (typeof (e.className) === 'string' && e.className !== '') {\n      if (this.REGEXPS.negative.test(e.className)) { weight -= 25; }\n\n      if (this.REGEXPS.positive.test(e.className)) { weight += 25; }\n    }\n\n    // Look for a special ID\n    if (typeof (e.id) === 'string' && e.id !== '') {\n      if (this.REGEXPS.negative.test(e.id)) { weight -= 25; }\n\n      if (this.REGEXPS.positive.test(e.id)) { weight += 25; }\n    }\n\n    return weight;\n  },\n\n  /**\n   * Clean a node of all elements of type \"tag\".\n   * (Unless it's a youtube/vimeo video. People love movies.)\n   *\n   * @param Element\n   * @param string tag to clean\n   * @return void\n   * */\n  _clean(e, tag) {\n    const isEmbed = ['object', 'embed', 'iframe'].indexOf(tag) !== -1;\n\n    this._forEachNode(e.getElementsByTagName(tag), function (element) {\n      // Allow youtube and vimeo videos through as people usually want to see those.\n      if (isEmbed) {\n        const attributeValues = [].map.call(element.attributes, (attr) => attr.value).join('|');\n\n        // First, check the elements attributes to see if any of them contain youtube or vimeo\n        if (this.REGEXPS.videos.test(attributeValues)) { return; }\n\n        // Then check the elements inside this element for the same.\n        if (this.REGEXPS.videos.test(element.innerHTML)) { return; }\n      }\n\n      element.parentNode.removeChild(element);\n    });\n  },\n\n  /**\n   * Check if a given node has one of its ancestor tag name matching the\n   * provided one.\n   * @param  HTMLElement node\n   * @param  String      tagName\n   * @param  Number      maxDepth\n   * @return Boolean\n   */\n  _hasAncestorTag(node, tagName, maxDepth) {\n    maxDepth = maxDepth || 3;\n    tagName = tagName.toUpperCase();\n    let depth = 0;\n    while (node.parentNode) {\n      if (depth > maxDepth) { return false; }\n      if (node.parentNode.tagName === tagName) { return true; }\n      node = node.parentNode;\n      depth++;\n    }\n    return false;\n  },\n\n  /**\n   * Clean an element of all tags of type \"tag\" if they look fishy.\n   * \"Fishy\" is an algorithm based on content length, classnames, link density, number of images & embeds, etc.\n   *\n   * @return void\n   * */\n  _cleanConditionally(e, tag) {\n    if (!this._flagIsActive(this.FLAG_CLEAN_CONDITIONALLY)) { return; }\n\n    const tagsList = e.getElementsByTagName(tag);\n    const curTagsLength = tagsList.length;\n    const isList = tag === 'ul' || tag === 'ol';\n\n    // Gather counts for other typical elements embedded within.\n    // Traverse backwards so we can remove nodes at the same time\n    // without effecting the traversal.\n    //\n    // TODO: Consider taking into account original contentScore here.\n    for (let i = curTagsLength - 1; i >= 0; i -= 1) {\n      const weight = this._getClassWeight(tagsList[i]);\n      const contentScore = 0;\n\n      this.log('Cleaning Conditionally', tagsList[i]);\n\n      if (weight + contentScore < 0) {\n        tagsList[i].parentNode.removeChild(tagsList[i]);\n      } else if (this._getCharCount(tagsList[i], ',') < 10) {\n        // If there are not very many commas, and the number of\n        // non-paragraph elements is more than paragraphs or other\n        // ominous signs, remove the element.\n        const p = tagsList[i].getElementsByTagName('p').length;\n        const img = tagsList[i].getElementsByTagName('img').length;\n        const li = tagsList[i].getElementsByTagName('li').length - 100;\n        const input = tagsList[i].getElementsByTagName('input').length;\n\n        let embedCount = 0;\n        const embeds = tagsList[i].getElementsByTagName('embed');\n        for (let ei = 0, il = embeds.length; ei < il; ei += 1) {\n          if (!this.REGEXPS.videos.test(embeds[ei].src)) { embedCount += 1; }\n        }\n\n        const linkDensity = this._getLinkDensity(tagsList[i]);\n        const contentLength = this._getInnerText(tagsList[i]).length;\n        let toRemove = false;\n        if (img > p && !this._hasAncestorTag(tagsList[i], 'figure')) {\n          toRemove = true;\n        } else if (!isList && li > p) {\n          toRemove = true;\n        } else if (input > Math.floor(p / 3)) {\n          toRemove = true;\n        } else if (!isList && contentLength < 25 && (img === 0 || img > 2)) {\n          toRemove = true;\n        } else if (!isList && weight < 25 && linkDensity > 0.2) {\n          toRemove = true;\n        } else if (weight >= 25 && linkDensity > 0.5) {\n          toRemove = true;\n        } else if ((embedCount === 1 && contentLength < 75) || embedCount > 1) {\n          toRemove = true;\n        }\n\n        if (toRemove) {\n          tagsList[i].parentNode.removeChild(tagsList[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Clean out spurious headers from an Element. Checks things like classnames and link density.\n   *\n   * @param Element\n   * @return void\n  * */\n  _cleanHeaders(e) {\n    for (let headerIndex = 1; headerIndex < 3; headerIndex += 1) {\n      const headers = e.getElementsByTagName('h' + headerIndex);\n      for (let i = headers.length - 1; i >= 0; i -= 1) {\n        if (this._getClassWeight(headers[i]) < 0) { headers[i].parentNode.removeChild(headers[i]); }\n      }\n    }\n  },\n\n  _flagIsActive(flag) {\n    return (this._flags & flag) > 0;\n  },\n\n  _addFlag(flag) {\n    this._flags = this._flags | flag;\n  },\n\n  _removeFlag(flag) {\n    this._flags = this._flags & ~flag;\n  },\n\n  /**\n   * Decides whether or not the document is reader-able without parsing the whole thing.\n   *\n   * @return boolean Whether or not we suspect parse() will suceeed at returning an article object.\n   */\n  isProbablyReaderable(helperIsVisible) {\n    const nodes = this._getAllNodesWithTag(this._doc, ['p', 'pre']);\n\n    // FIXME we should have a fallback for helperIsVisible, but this is\n    // problematic because of jsdom's elem.style handling - see\n    // https://github.com/mozilla/readability/pull/186 for context.\n\n    let score = 0;\n    // This is a little cheeky, we use the accumulator 'score' to decide what to return from\n    // this callback:\n    return this._someNode(nodes, function (node) {\n      if (helperIsVisible && !helperIsVisible(node)) { return false; }\n      const matchString = node.className + ' ' + node.id;\n\n      if (this.REGEXPS.unlikelyCandidates.test(matchString) &&\n          !this.REGEXPS.okMaybeItsACandidate.test(matchString)) {\n        return false;\n      }\n\n      if (node.matches && node.matches('li p')) {\n        return false;\n      }\n\n      const textContentLength = node.textContent.trim().length;\n      if (textContentLength < 140) {\n        return false;\n      }\n\n      score += Math.sqrt(textContentLength - 140);\n\n      if (score > 20) {\n        return true;\n      }\n      return false;\n    });\n  },\n\n  /**\n   * Runs readability.\n   *\n   * Workflow:\n   *  1. Prep the document by removing script tags, css, etc.\n   *  2. Build readability's DOM tree.\n   *  3. Grab the article content from the current dom tree.\n   *  4. Replace the current DOM tree with the new one.\n   *  5. Read peacefully.\n   *\n   * @return void\n   * */\n  parse() {\n    // Avoid parsing too large documents, as per configuration option\n    if (this._maxElemsToParse > 0) {\n      const numTags = this._doc.getElementsByTagName('*').length;\n      if (numTags > this._maxElemsToParse) {\n        throw new Error('Aborting parsing document; ' + numTags + ' elements found');\n      }\n    }\n\n    if (typeof this._doc.documentElement.firstElementChild === 'undefined') {\n      this._getNextNode = this._getNextNodeNoElementProperties;\n    }\n    // Remove script tags from the document.\n    this._removeScripts(this._doc);\n\n    // FIXME: Disabled multi-page article support for now as it\n    // needs more work on infrastructure.\n\n    // Make sure this document is added to the list of parsed pages first,\n    // so we don't double up on the first page.\n    // this._parsedPages[uri.spec.replace(/\\/$/, '')] = true;\n\n    // Pull out any possible next page link first.\n    // var nextPageLink = this._findNextPageLink(doc.body);\n\n    this._prepDocument();\n\n    const metadata = this._getArticleMetadata();\n    const articleTitle = metadata.title || this._getArticleTitle();\n\n    const articleContent = this._grabArticle();\n    if (!articleContent) { return null; }\n\n    this.log('Grabbed: ' + articleContent.innerHTML);\n\n    this._postProcessContent(articleContent);\n\n    // if (nextPageLink) {\n    //   // Append any additional pages after a small timeout so that people\n    //   // can start reading without having to wait for this to finish processing.\n    //   setTimeout((function() {\n    //     this._appendNextPage(nextPageLink);\n    //   }).bind(this), 500);\n    // }\n\n    // If we haven't found an excerpt in the article's metadata, use the article's\n    // first paragraph as the excerpt. This is used for displaying a preview of\n    // the article's content.\n\n    const paragraphs = articleContent.getElementsByTagName('p');\n    let p1;\n    let p2;\n    if (paragraphs.length > 0) {\n      p1 = paragraphs[0];\n      p2 = paragraphs[1];\n    }\n    if (!metadata.excerpt) {\n      if (paragraphs.length > 0) {\n        metadata.excerpt = paragraphs[0].textContent.trim();\n      }\n    }\n\n    return { uri: this._uri,\n      title: articleTitle,\n      article: articleContent,\n      p1,\n      p2,\n      byline: metadata.byline || this._articleByline,\n      dir: this._articleDir,\n      content: articleContent.innerHTML,\n      textContent: articleContent.textContent,\n      length: articleContent.textContent.length,\n      excerpt: metadata.excerpt };\n  }\n};\n\nmodule.exports = Readability;\n"],"file":"Readability.js"}