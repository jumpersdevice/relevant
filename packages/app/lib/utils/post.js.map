{"version":3,"sources":["../../src/utils/post.js"],"names":["URL_REGEX","RegExp","getTitle","post","link","maxLength","title","fromBody","limit","lines","split","slice","join","length","substr","lastIndexOf","trim","getFavIcon","domain","getPostUrl","community","parentPost","postId","_id","commentId","computeShares","stakedTokens","data","balance","postShares","shares","nexp","EXPONENT","Math","max","SLOPE","getPostType","type","url"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\nimport { SLOPE, EXPONENT } from '@r3l/common';\n\nexport const URL_REGEX = new RegExp(\n  // eslint-disable-next-line\n  /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%_\\+~#=]{2,256}\\.[a-z]{2,10}\\b([-a-zA-Z0-9@:%_\\+~#?&//=]*)/g\n);\n\nexport function getTitle({ post, link, maxLength }) {\n  let title = link?.title || post?.title;\n  const fromBody = !title || title === '';\n  title = title || get(post, 'body');\n\n  const limit = maxLength || 160;\n  if (fromBody) {\n    const lines = title?.split(/\\n/);\n    title = lines?.slice(0, 1).join('\\n');\n    if (!title) return 'Untitled';\n    if (title?.length <= limit) return title;\n    return title?.substr(0, title.lastIndexOf(' ', limit)) + '...';\n  }\n\n  if (title && title.length > limit) {\n    title = title.substr(0, title.lastIndexOf(' ', limit)) + '...';\n  }\n  title = title && title.trim();\n  return title || 'Untitled';\n}\n\nexport function getFavIcon(domain) {\n  return `https://api.faviconkit.com/${domain}/144`;\n  // return `https://s2.googleusercontent.com/s2/favicons?domain=${domain}`;\n}\n\nexport const getPostUrl = (community, post) => {\n  if (!post) return null;\n  const { parentPost } = post;\n  const postId = parentPost ? parentPost._id || parentPost : post._id || post;\n  const commentId = parentPost ? '/' + (post._id || post) : '';\n  return `/${community}/post/${postId}${commentId}`;\n};\n\nexport const computeShares = ({ post, stakedTokens }) => {\n  const { balance, shares: postShares } = post.data;\n  const nexp = EXPONENT + 1;\n\n  const shares =\n    (((Math.max(balance, 0) + stakedTokens) / SLOPE) * nexp) ** (1 / nexp) -\n    (postShares || 0);\n  return shares;\n};\n\nexport const getPostType = ({ post }) => {\n  const type = !post.parentPost && post.url ? 'link' : post.type;\n  return type;\n};\n"],"file":"post.js"}