{"version":3,"sources":["../../src/utils/nav.js"],"names":["transtionConfig","timing","Animated","spring","useNativeDriver","speed","bounciness","overshootClamping","getScreenSize","width","breakpoints","mediumScreenWidth","smallScreenWidth","screenSize","i","length","withProps","component","Comp","navProps","navigation","screenProps","_navigator","setTopLevelNavigator","navigatorRef","getNavigator","dispatchNavigatorAction","action","console","warn","dispatch","getCurrentRouteAndTab","route","state","nav","tab","tabChildrenCount","routes","index","routeName"],"mappings":"ggBAAA,oDACA,gDACA,0C,8EAEO,QAASA,CAAAA,eAAT,EAA2B,CAChC,MAAO,CACLC,MAAM,CAAEC,yBAASC,MADZ,CAELC,eAAe,CAAE,IAFZ,CAGLC,KAAK,CAAE,EAHF,CAILC,UAAU,CAAE,CAJP,CAKLC,iBAAiB,CAAE,IALd,CAAP,CAOD,CAEM,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,CACpC,GAAMC,CAAAA,WAAW,CAAG,CAACC,0BAAD,CAAoBC,yBAApB,CAApB,CACA,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,WAAW,CAACK,MAAhC,CAAwCD,CAAC,EAAzC,CAA6C,CAC3CD,UAAU,CAAGC,CAAb,CACA,GAAIL,KAAK,CAAGC,WAAW,CAACI,CAAD,CAAvB,CAA4B,MAAOD,CAAAA,UAAP,CAC7B,CACD,MAAOA,CAAAA,UAAP,CACD,CARM,C,oCAUA,GAAMG,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,SAAS,CAAI,CACpC,GAAMC,CAAAA,IAAI,CAAGD,SAAb,CACA,MAAO,UAAAE,QAAQ,QAAI,8BAAC,IAAD,wBAAM,UAAU,CAAEA,QAAQ,CAACC,UAA3B,EAA2CD,QAAQ,CAACE,WAApD,mEAAJ,EAAf,CACD,CAHM,C,4BAKP,GAAIC,CAAAA,UAAJ,CAEO,QAASC,CAAAA,oBAAT,CAA8BC,YAA9B,CAA4C,CACjDF,UAAU,CAAGE,YAAb,CACD,CAEM,QAASC,CAAAA,YAAT,EAAwB,CAC7B,MAAOH,CAAAA,UAAP,CACD,CAEM,QAASI,CAAAA,uBAAT,CAAiCC,MAAjC,CAAyC,CAC9C,GAAI,CAACL,UAAL,CAAiB,MAAOM,CAAAA,OAAO,CAACC,IAAR,CAAa,8BAAb,CAAP,CACjB,MAAOP,CAAAA,UAAU,CAACQ,QAAX,CAAoBH,MAApB,CAAP,CACD,CAEM,QAASI,CAAAA,qBAAT,EAAiC,CACtC,GAAI,CAACT,UAAL,CAAiB,MAAO,EAAP,CACjB,GAAIU,CAAAA,KAAK,CAAGV,UAAU,CAACW,KAAX,CAAiBC,GAA7B,CACA,GAAIC,CAAAA,GAAJ,CACA,GAAIC,CAAAA,gBAAgB,CAAG,CAAvB,CACA,MAAOJ,KAAK,CAACK,MAAb,CAAqB,CACnBL,KAAK,CAAGA,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACM,KAAnB,CAAR,CACA,GAAIH,GAAJ,CAASC,gBAAgB,GACzB,GAAIJ,KAAK,CAACO,SAAN,GAAoB,MAAxB,CAAgC,CAC9BJ,GAAG,CAAGH,KAAK,CAACK,MAAN,CAAaL,KAAK,CAACM,KAAnB,CAAN,CACD,CACF,CACD,MAAO,CAAEN,KAAK,CAALA,KAAF,CAASG,GAAG,CAAHA,GAAT,CAAcC,gBAAgB,CAAhBA,gBAAd,CAAP,CACD","sourcesContent":["import React from 'react';\nimport { Animated } from 'react-native';\nimport { mediumScreenWidth, smallScreenWidth } from 'app/styles/screens';\n\nexport function transtionConfig() {\n  return {\n    timing: Animated.spring,\n    useNativeDriver: true,\n    speed: 20,\n    bounciness: 0,\n    overshootClamping: true\n  };\n}\n\nexport const getScreenSize = width => {\n  const breakpoints = [mediumScreenWidth, smallScreenWidth];\n  let screenSize = 0;\n  for (let i = 0; i < breakpoints.length; i++) {\n    screenSize = i;\n    if (width > breakpoints[i]) return screenSize;\n  }\n  return screenSize;\n};\n\nexport const withProps = component => {\n  const Comp = component;\n  return navProps => <Comp navigation={navProps.navigation} {...navProps.screenProps} />;\n};\n\nlet _navigator;\n\nexport function setTopLevelNavigator(navigatorRef) {\n  _navigator = navigatorRef;\n}\n\nexport function getNavigator() {\n  return _navigator;\n}\n\nexport function dispatchNavigatorAction(action) {\n  if (!_navigator) return console.warn('TopLevelNavigator not ready!'); // eslint-disable-line\n  return _navigator.dispatch(action);\n}\n\nexport function getCurrentRouteAndTab() {\n  if (!_navigator) return {};\n  let route = _navigator.state.nav;\n  let tab;\n  let tabChildrenCount = 0;\n  while (route.routes) {\n    route = route.routes[route.index];\n    if (tab) tabChildrenCount++;\n    if (route.routeName === 'main') {\n      tab = route.routes[route.index];\n    }\n  }\n  return { route, tab, tabChildrenCount };\n}\n"],"file":"nav.js"}