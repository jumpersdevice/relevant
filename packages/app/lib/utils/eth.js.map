{"version":3,"sources":["../../src/utils/eth.js"],"names":["signMessage","provider","address","signer","getSigner","now","Date","exp","Math","floor","setMinutes","getMinutes","msg","JSON","stringify","signature","truncateAddress","slice","length","parseBN","value","get","getBN","hex","formatBN","decimals","numString","Number","toString","trailingZeroes","getTrailingZeros","result","withoutZeros","parseFloat","toFixed","generateSalt","crypto","randomBytes","formatBalanceRead","balString","formatBalanceWrite","appendZeroes","amount","repeat","removeDecimal","split","join"],"mappings":"suBAAA,sD,QAEsBA,CAAAA,W,kJAAf,iBAA2BC,QAA3B,CAAqCC,OAArC,oJACCC,MADD,CACUF,QAAQ,CAACG,SAAT,EADV,CAGCC,GAHD,CAGO,GAAIC,CAAAA,IAAJ,EAHP,CAICC,GAJD,CAIOC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,UAAJ,CAAeL,GAAG,CAACM,UAAJ,GAAmB,CAAlC,EAAuC,IAAlD,CAJP,CAKCC,GALD,CAKO,CACVV,OAAO,CAAPA,OADU,CAEVK,GAAG,CAAHA,GAFU,CALP,uBASmBJ,CAAAA,MAAM,CAACH,WAAP,CAAmBa,IAAI,CAACC,SAAL,CAAeF,GAAf,CAAnB,CATnB,QASCG,SATD,+CAUE,CAAEH,GAAG,CAAHA,GAAF,CAAOG,SAAS,CAATA,SAAP,CAVF,wD,8CAaA,QAASC,CAAAA,eAAT,CAAyBd,OAAzB,CAAkC,CACvC,GAAI,CAACA,OAAL,CAAc,MAAO,KAAP,CACd,MAAOA,CAAAA,OAAO,CAACe,KAAR,CAAc,CAAd,CAAiB,CAAjB,EAAsB,KAAtB,CAA8Bf,OAAO,CAACe,KAAR,CAAcf,OAAO,CAACgB,MAAR,CAAiB,CAA/B,CAAkChB,OAAO,CAACgB,MAA1C,CAArC,CACD,CAEM,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CAC7B,MAAOA,CAAAA,KAAK,EAAIA,KAAK,CAACC,GAAf,CAAqBC,KAAK,CAACF,KAAD,CAA1B,CAAoCA,KAA3C,CACD,CAEM,QAASE,CAAAA,KAAT,CAAeF,KAAf,CAAsB,CAC3B,GAAMG,CAAAA,GAAG,CAAGH,KAAK,CAACC,GAAN,CAAU,MAAV,CAAZ,CACA,GAAIE,GAAG,GAAK,MAAZ,CAAoB,CAClB,MAAO,EAAP,CACD,CACD,MAAOC,CAAAA,QAAQ,CAACD,GAAD,CAAM,EAAN,CAAf,CACD,CAEM,QAASC,CAAAA,QAAT,CAAkBD,GAAlB,CAAsC,IAAfE,CAAAA,QAAe,2DAAJ,EAAI,CAC3C,GAAMC,CAAAA,SAAS,CAAGC,MAAM,CAACJ,GAAD,CAAN,CAAYK,QAAZ,EAAlB,CAEA,GAAIF,SAAS,CAACA,SAAS,CAACR,MAAV,CAAmB,CAApB,CAAT,GAAoC,GAAxC,CAA6C,CAC3C,GAAMW,CAAAA,cAAc,CAAGC,gBAAgB,CAACJ,SAAD,CAAYD,QAAZ,CAAvC,CACA,GAAMM,CAAAA,MAAM,CAAGJ,MAAM,CAACK,YAAY,CAACN,SAAD,CAAZ,CAA0BG,cAA3B,CAArB,CAEA,MAAOF,CAAAA,MAAM,CAACM,UAAP,CAAkBF,MAAlB,EAA0BG,OAA1B,CAAkC,CAAlC,CAAP,CACD,CACD,GAAIR,SAAS,CAACR,MAAV,CAAmB,EAAvB,CAA2B,CACzB,MAAOS,CAAAA,MAAM,CAACD,SAAS,CAACT,KAAV,CAAgB,CAAhB,CAAmB,CAAC,EAApB,CAAD,CAAb,CACD,CACD,GAAIS,SAAS,CAACR,MAAV,GAAqB,EAAzB,CAA6B,CAC3B,MAAOS,CAAAA,MAAM,aAAMD,SAAN,EAAb,CACD,CACD,MAAOC,CAAAA,MAAM,CAACD,SAAD,CAAb,CACD,CAEM,QAASS,CAAAA,YAAT,EAAwB,CAC7B,MAAOC,iBAAOC,WAAP,CAAmB,EAAnB,EAAuBT,QAAvB,CAAgC,KAAhC,CAAP,CACD,CAEM,QAASU,CAAAA,iBAAT,CAA2BC,SAA3B,CAAsC,CAC3C,gBAAUA,SAAS,CAACtB,KAAV,CAAgB,CAAhB,CAAmB,CAAC,EAApB,CAAV,aAAqCsB,SAAS,CAACtB,KAAV,CAAgB,CAAC,EAAjB,CAArC,EACD,CAEM,QAASuB,CAAAA,kBAAT,CAA4BD,SAA5B,CAAsD,IAAfd,CAAAA,QAAe,2DAAJ,EAAI,CAC3D,MAAO,CAACc,SAAS,UAAG,EAAH,CAASd,QAAT,CAAV,EAA6BG,QAA7B,EAAP,CACD,CAEM,QAASa,CAAAA,YAAT,CAAsBf,SAAtB,CAAiCgB,MAAjC,CAAyC,CAC9C,gBAAUhB,SAAV,SAAsB,IAAIiB,MAAJ,CAAWD,MAAX,CAAtB,EACD,CAEM,QAASE,CAAAA,aAAT,CAAuBL,SAAvB,CAAkC,CACvC,MAAOA,CAAAA,SAAS,CAACM,KAAV,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B,EAA1B,CAAP,CACD,CAEM,QAASd,CAAAA,YAAT,CAAsBN,SAAtB,CAAiC,CACtC,MAAOA,CAAAA,SAAS,CAACT,KAAV,CAAgB,CAAhB,CAAmB,CAAC,CAApB,EAAuBW,QAAvB,EAAP,CACD,CAEM,QAASE,CAAAA,gBAAT,CAA0BJ,SAA1B,CAAqCD,QAArC,CAA+C,CACpD,MAAOE,CAAAA,MAAM,CAACA,MAAM,CAACD,SAAS,CAACT,KAAV,CAAgB,CAAC,CAAjB,CAAD,CAAN,CAA8BQ,QAA/B,CAAN,CAA+CG,QAA/C,EAAP,CACD","sourcesContent":["import crypto from 'crypto';\n\nexport async function signMessage(provider, address) {\n  const signer = provider.getSigner();\n\n  const now = new Date();\n  const exp = Math.floor(now.setMinutes(now.getMinutes() + 5) / 1000);\n  const msg = {\n    address,\n    exp\n  };\n  const signature = await signer.signMessage(JSON.stringify(msg));\n  return { msg, signature };\n}\n\nexport function truncateAddress(address) {\n  if (!address) return null;\n  return address.slice(0, 6) + '...' + address.slice(address.length - 4, address.length);\n}\n\nexport function parseBN(value) {\n  return value && value.get ? getBN(value) : value;\n}\n\nexport function getBN(value) {\n  const hex = value.get('_hex');\n  if (hex === '0x00') {\n    return 0;\n  }\n  return formatBN(hex, 18);\n}\n\nexport function formatBN(hex, decimals = 18) {\n  const numString = Number(hex).toString();\n  // console.log('numString', numString);\n  if (numString[numString.length - 3] === '+') {\n    const trailingZeroes = getTrailingZeros(numString, decimals);\n    const result = Number(withoutZeros(numString) + trailingZeroes);\n\n    return Number.parseFloat(result).toFixed(0);\n  }\n  if (numString.length > 18) {\n    return Number(numString.slice(0, -18));\n  }\n  if (numString.length === 18) {\n    return Number(`0.${numString}`);\n  }\n  return Number(numString);\n}\n\nexport function generateSalt() {\n  return crypto.randomBytes(16).toString('hex');\n}\n\nexport function formatBalanceRead(balString) {\n  return `${balString.slice(0, -18)}.${balString.slice(-18)}`;\n}\n\nexport function formatBalanceWrite(balString, decimals = 18) {\n  return (balString * 10 ** decimals).toString();\n}\n\nexport function appendZeroes(numString, amount) {\n  return `${numString}${'0'.repeat(amount)}`;\n}\n\nexport function removeDecimal(balString) {\n  return balString.split('.').join('');\n}\n\nexport function withoutZeros(numString) {\n  return numString.slice(0, -2).toString();\n}\n\nexport function getTrailingZeros(numString, decimals) {\n  return Number(Number(numString.slice(-2)) - decimals).toString();\n}\n"],"file":"eth.js"}