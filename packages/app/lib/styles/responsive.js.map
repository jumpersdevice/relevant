{"version":3,"sources":["../../src/styles/responsive.js"],"names":["Dimensions","isNative","isServer","NATIVE_WIDTH","process","env","WEB","require","get","width","BROWSER","responsiveHandler","val","Array","isArray","length","WIDTH","getWidth","breakpoints","mediumScreenWidth","smallScreenWidth","i","window","innerWidth","err"],"mappings":"iIAEA,kCAEA,GAAIA,CAAAA,UAAJ,CACA,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,KAAf,CACA,GAAIC,CAAAA,YAAJ,CAEA,GAAIC,OAAO,CAACC,GAAR,CAAYC,GAAZ,GAAoB,MAAxB,CAAgC,CAC9BL,QAAQ,CAAG,IAAX,CACAD,UAAU,CAAGO,OAAO,oBAAP,CAAwBP,UAArC,CAF8B,oBAGZA,UAAU,CAACQ,GAAX,CAAe,QAAf,CAHY,CAGtBC,KAHsB,iBAGtBA,KAHsB,CAI9BN,YAAY,CAAGM,KAAf,CACD,CAED,GAAI,CAACL,OAAO,CAACC,GAAR,CAAYK,OAAjB,CAA0B,CACxBR,QAAQ,CAAG,IAAX,CACAF,UAAU,CAAGO,OAAO,CAAC,kBAAD,CAAP,CAA4BP,UAAzC,CACD,CAEM,GAAMW,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,GAAG,CAAI,CACtC,GAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAL,CAAyB,MAAOA,CAAAA,GAAP,CACzB,GAAIA,GAAG,CAACG,MAAJ,GAAe,CAAnB,CAAsB,MAAOH,CAAAA,GAAG,CAAC,CAAD,CAAV,CAEtB,GAAMI,CAAAA,KAAK,CAAGC,QAAQ,EAAtB,CACA,GAAI,CAACD,KAAL,CAAY,MAAOJ,CAAAA,GAAG,CAAC,CAAD,CAAV,CAEZ,GAAMM,CAAAA,WAAW,CAAG,CAACC,0BAAD,CAAoBC,yBAApB,CAAsC,CAAtC,CAApB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,WAAW,CAACH,MAAhC,CAAwCM,CAAC,EAAzC,CAA6C,CAC3C,GAAIL,KAAK,EAAIE,WAAW,CAACG,CAAD,CAAxB,CAA6B,CAC3B,GAAIT,GAAG,CAACG,MAAJ,CAAaM,CAAjB,CAAoB,MAAOT,CAAAA,GAAG,CAACS,CAAD,CAAV,CAEpB,MAAOT,CAAAA,GAAG,CAACA,GAAG,CAACG,MAAJ,CAAa,CAAd,CAAV,CACD,CACF,CACD,MAAO,KAAP,CACD,CAhBM,C,4CA8BA,QAASE,CAAAA,QAAT,EAAoB,CACzB,GAAI,CACF,GAAIhB,QAAJ,CAAc,MAAOE,CAAAA,YAAP,CACd,GAAID,QAAJ,CAAc,MAAOF,CAAAA,UAAU,CAACQ,GAAX,CAAe,QAAf,EAAyBC,KAAhC,CACd,MAAOa,CAAAA,MAAM,CAACC,UAAd,CACD,CAAC,MAAOC,GAAP,CAAY,CACZ,MAAO,KAAP,CACD,CACF","sourcesContent":["// This assumes we are working with 2 breakpoints/3 sizes\n// export default\nimport { mediumScreenWidth, smallScreenWidth } from './screens';\n\nlet Dimensions;\nlet isNative = false;\nlet isServer = false;\nlet NATIVE_WIDTH;\n\nif (process.env.WEB !== 'true') {\n  isNative = true;\n  Dimensions = require('react-native').Dimensions;\n  const { width } = Dimensions.get('window');\n  NATIVE_WIDTH = width;\n}\n\nif (!process.env.BROWSER) {\n  isServer = true;\n  Dimensions = require('react-native-web').Dimensions;\n}\n\nexport const responsiveHandler = val => {\n  if (!Array.isArray(val)) return val;\n  if (val.length === 1) return val[0];\n\n  const WIDTH = getWidth();\n  if (!WIDTH) return val[0];\n\n  const breakpoints = [mediumScreenWidth, smallScreenWidth, 0];\n  for (let i = 0; i < breakpoints.length; i++) {\n    if (WIDTH >= breakpoints[i]) {\n      if (val.length > i) return val[i];\n      // return smallest available screen\n      return val[val.length - 1];\n    }\n  }\n  return null;\n};\n\n// const widthCache = {\n//   time: 0,\n//   value: 0\n// };\n// export function getWidth() {\n//   const now = Date.now();\n//   if (now - widthCache.time < 3000) return widthCache.value;\n//   widthCache.value = width();\n//   widthCache.time = now;\n//   return widthCache.value;\n// }\n\nexport function getWidth() {\n  try {\n    if (isNative) return NATIVE_WIDTH;\n    if (isServer) return Dimensions.get('window').width;\n    return window.innerWidth;\n  } catch (err) {\n    return null;\n  }\n}\n"],"file":"responsive.js"}