{"version":3,"sources":["../../src/styles/sizing.js"],"names":["isNative","process","env","WEB","cache","sizing","unit","type","primitive","size","value","w","units","match","uArray","split","length","Number","result","map","u","join"],"mappings":"6LAAA,0DACA,wCAEA,GAAIA,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,OAAO,CAACC,GAAR,CAAYC,GAAZ,GAAoB,MAAxB,CAAgC,CAC9BH,QAAQ,CAAG,KAAX,CACD,CAED,GAAMI,CAAAA,KAAK,CAAG,EAAd,CAEA,GAAMC,CAAAA,MAAM,CAAG,sBACb,SAACC,IAAD,CAAOC,IAAP,CAAgB,CACd,GAAIA,IAAI,GAAK,cAAT,EAA2BP,QAA/B,CAAyC,MAAOM,CAAAA,IAAI,CAAG,CAAd,CAEzC,GAAI,CAACN,QAAL,CAAe,CACb,GAAIO,IAAJ,CAAU,gBAAUD,IAAV,SAAiBC,IAAjB,EACV,gBAAUD,IAAI,CAAG,CAAjB,QACD,CACD,GAAIC,IAAJ,CAAU,CACR,GAAID,IAAI,CAAG,CAAX,CAAc,MAAOA,CAAAA,IAAP,CACd,gBAAUA,IAAV,SAAiBC,IAAjB,EACD,CACD,GAAID,IAAI,CAAG,CAAX,CAAc,MAAOA,CAAAA,IAAI,CAAG,CAAd,CACd,gBAAUA,IAAI,CAAG,CAAjB,OACD,CAdY,CAeb,CAAEE,SAAS,CAAE,IAAb,CAfa,CAAf,CAkBO,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAAAC,KAAK,CAAI,CAC3B,GAAMC,CAAAA,CAAC,CAAG,0BAAV,CACA,GAAIP,KAAK,CAACO,CAAD,CAAL,EAAYP,KAAK,CAACO,CAAD,CAAL,CAASD,KAAT,CAAhB,CAAiC,MAAON,CAAAA,KAAK,CAACO,CAAD,CAAL,CAASD,KAAT,CAAP,CACjC,GAAME,CAAAA,KAAK,CAAG,kCAAkBF,KAAlB,CAAd,CAEA,GAAI,MAAOE,CAAAA,KAAP,GAAiB,QAArB,CAA+B,MAAOP,CAAAA,MAAM,CAACO,KAAD,CAAb,CAC/B,GAAI,CAACA,KAAD,EAAUA,KAAK,CAACC,KAAN,CAAY,2BAAZ,CAAd,CAAwD,MAAOD,CAAAA,KAAP,CACxD,GAAME,CAAAA,MAAM,CAAGF,KAAK,CAACG,KAAN,CAAY,GAAZ,CAAf,CACA,GAAID,MAAM,CAACE,MAAP,GAAkB,CAAtB,CAAyBX,MAAM,CAACY,MAAM,CAACL,KAAD,CAAP,CAAN,CACzB,GAAMM,CAAAA,MAAM,CAAGJ,MAAM,CAACK,GAAP,CAAW,SAAAC,CAAC,QAAIf,CAAAA,MAAM,CAACY,MAAM,CAACG,CAAD,CAAP,CAAV,EAAZ,EAAmCC,IAAnC,CAAwC,GAAxC,CAAf,CACA,GAAI,CAACjB,KAAK,CAACO,CAAD,CAAV,CAAeP,KAAK,CAACO,CAAD,CAAL,CAAW,EAAX,CACfP,KAAK,CAACO,CAAD,CAAL,CAASD,KAAT,EAAkBQ,MAAlB,CACA,MAAOA,CAAAA,MAAP,CACD,CAbM,C,+BAeQb,M","sourcesContent":["import memoize from 'memoizee';\nimport { responsiveHandler, getWidth } from './responsive';\n\nlet isNative = true;\nif (process.env.WEB === 'true') {\n  isNative = false;\n}\n\nconst cache = {};\n\nconst sizing = memoize(\n  (unit, type) => {\n    if (type === 'mobileNumber' && isNative) return unit * 8;\n\n    if (!isNative) {\n      if (type) return `${unit}${type}`;\n      return `${unit / 2}rem`;\n    }\n    if (type) {\n      if (unit < 0) return unit;\n      return `${unit}${type}`;\n    }\n    if (unit < 0) return unit * 8;\n    return `${unit * 8}px`;\n  },\n  { primitive: true }\n);\n\nexport const size = value => {\n  const w = getWidth();\n  if (cache[w] && cache[w][value]) return cache[w][value];\n  const units = responsiveHandler(value);\n\n  if (typeof units === 'number') return sizing(units);\n  if (!units || units.match(/px|rem|em|vh|vw|auto|%|pt/)) return units;\n  const uArray = units.split(' ');\n  if (uArray.length === 1) sizing(Number(units));\n  const result = uArray.map(u => sizing(Number(u))).join(' ');\n  if (!cache[w]) cache[w] = {};\n  cache[w][value] = result;\n  return result;\n};\n\nexport default sizing;\n"],"file":"sizing.js"}