{"version":3,"sources":["../../../src/api/emailList/list.controller.js"],"names":["exports","index","req","res","next","list","List","find","status","$ne","json","err","addWaitlist","email","body","Error","trim","waitlist","findOneAndUpdate","upsert","new","exec","invite","invites","InviteController","createInvites","update","_id","$in","map","i","multi","delete","id","params","findOne","remove","sendStatus"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;AACA;AAEAA,OAAO,CAACC,KAAR;AAAA,6CAAgB,WAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AACxC,QAAI;AACF,UAAMC,IAAI,SAASC,cAAKC,IAAL,CAAU;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP;AAAV,OAAV,CAAnB;AACAN,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBL,IAArB;AACD,KAHD,CAGE,OAAOM,GAAP,EAAY;AACZP,MAAAA,IAAI,CAACO,GAAD,CAAJ;AACD;AACF,GAPD;;AAAA;AAAA;AAAA;AAAA;;AASAX,OAAO,CAACY,WAAR;AAAA,8CAAsB,WAAOV,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AAC9C,QAAI;AACF,UAAI;AAAES,QAAAA;AAAF,UAAYX,GAAG,CAACY,IAApB;AACA,UAAI,CAACD,KAAL,EAAY,MAAM,IAAIE,KAAJ,CAAU,UAAV,CAAN;AACZF,MAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,EAAR;AACA,UAAMC,QAAQ,SAASX,cAAKY,gBAAL,CAAsB;AAAEL,QAAAA;AAAF,OAAtB,EAAiCX,GAAG,CAACY,IAArC,EAA2C;AAChEK,QAAAA,MAAM,EAAE,IADwD;AAEhEC,QAAAA,GAAG,EAAE;AAF2D,OAA3C,EAGpBC,IAHoB,EAAvB;AAIAlB,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBO,QAArB;AACD,KATD,CASE,OAAON,GAAP,EAAY;AACZP,MAAAA,IAAI,CAACO,GAAD,CAAJ;AACD;AACF,GAbD;;AAAA;AAAA;AAAA;AAAA;AAeA;;;;;;;;;;;AASAX,OAAO,CAACsB,MAAR;AAAA,8CAAiB,WAAMpB,GAAN,EAAa;AAC5B,QAAIqB,OAAO,GAAGrB,GAAG,CAACY,IAAlB;AACAS,IAAAA,OAAO,SAASC,gBAAgB,CAACC,aAAjB,CAA+BF,OAA/B,CAAhB;AACA,UAAMjB,cAAKoB,MAAL,CACJ;AAAEC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,GAAG,EAAEL,OAAO,CAACM,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACH,GAAnB;AAAP;AAAP,KADI,EAEJ;AAAEnB,MAAAA,MAAM,EAAE;AAAV,KAFI,EAGJ;AAAEuB,MAAAA,KAAK,EAAE;AAAT,KAHI,EAIJV,IAJI,EAAN;AAKA,WAAOE,OAAP;AACD,GATD;;AAAA;AAAA;AAAA;AAAA;;AAWAvB,OAAO,CAACgC,MAAR;AAAA,8CAAiB,WAAO9B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,EAA0B;AACzC,QAAI;AACF,UAAM;AAAE6B,QAAAA;AAAF,UAAS/B,GAAG,CAACgC,MAAnB;AACA,YAAM5B,cAAK6B,OAAL,CAAa;AAAER,QAAAA,GAAG,EAAEM;AAAP,OAAb,EAA0BG,MAA1B,EAAN;AACAjC,MAAAA,GAAG,CAACkC,UAAJ,CAAe,GAAf;AACD,KAJD,CAIE,OAAO1B,GAAP,EAAY;AACZP,MAAAA,IAAI,CAACO,GAAD,CAAJ;AACD;AACF,GARD;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import List from './list.model';\nimport * as InviteController from '../invites/invite.controller';\n\n// List.countDocuments({ status: { $exists: false } }).then(c => console.log('Waitlist', c));\n// List.find({}).then(u => u.map(c => console.log('List', c.toObject())));\n\nexports.index = async (req, res, next) => {\n  try {\n    const list = await List.find({ status: { $ne: 'invited' } });\n    res.status(200).json(list);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.addWaitlist = async (req, res, next) => {\n  try {\n    let { email } = req.body;\n    if (!email) throw new Error('no email');\n    email = email.trim();\n    const waitlist = await List.findOneAndUpdate({ email }, req.body, {\n      upsert: true,\n      new: true\n    }).exec();\n    res.status(200).json(waitlist);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/*\n  req.body should contains an array of invite objects\n  [{\n    invitedBy: handle,\n    invitedByString: inviter name,\n    name: invitee name\n    email: eamil\n  }]\n */\nexports.invite = async req => {\n  let invites = req.body;\n  invites = await InviteController.createInvites(invites);\n  await List.update(\n    { _id: { $in: invites.map(i => i._id) } },\n    { status: 'invited' },\n    { multi: true }\n  ).exec();\n  return invites;\n};\n\nexports.delete = async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    await List.findOne({ _id: id }).remove();\n    res.sendStatus(200);\n  } catch (err) {\n    next(err);\n  }\n};\n"],"file":"list.controller.js"}