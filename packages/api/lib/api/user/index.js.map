{"version":3,"sources":["../../../src/api/user/index.js"],"names":["express","require","controller","auth","router","Router","createAccountLimiter","windowMs","max","message","get","isAuthenticated","index","sendConfirmationCode","blocked","search","show","list","testData","currentUser","checkUser","post","create","cashOut","onboarding","put","webOnboard","updateUserTokenBalance","updateHandle","setTokenCookieDesktop","updateComunity","ethAddress","confirm","forgot","resetPassword","updateUserNotifications","changePassword","update","block","unblock","delete","destroy","module","exports"],"mappings":"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","sourcesContent":["import rateLimit from 'express-rate-limit';\n\nconst express = require('express');\nconst controller = require('./user.controller');\nconst auth = require('../../auth/auth.service');\n\nconst router = express.Router();\n\nconst createAccountLimiter = rateLimit({\n  windowMs: 60 * 60 * 1000, // 1 hour window\n  max: 5, // start blocking after 5 requests\n  message: 'Too many accounts created from this IP, please try again after an hour'\n});\n\n// router.get('/confirm/:user/:code', controller.confirm);\nrouter.get('/', auth.isAuthenticated(), controller.index);\nrouter.get('/sendConfirmation', auth.isAuthenticated(), controller.sendConfirmationCode);\nrouter.get('/search', auth.blocked(), controller.search);\nrouter.get('/me', auth.isAuthenticated(), controller.show);\nrouter.get('/blocked', auth.isAuthenticated(), controller.blocked);\nrouter.get('/user/:id', auth.blocked(), controller.show);\nrouter.get('/general/list', auth.blocked(), controller.list);\nrouter.get('/testData', controller.testData);\nrouter.get('/check/user', auth.currentUser(), controller.checkUser);\n\nrouter.post('/', createAccountLimiter, controller.create);\nrouter.post('/cashOut', auth.isAuthenticated(), controller.cashOut);\nrouter.post('/cashOut/:customAmount', auth.isAuthenticated(), controller.cashOut);\n\nrouter.get('/onboarding/:step', auth.isAuthenticated(), controller.onboarding);\nrouter.put('/webonboard/:step', auth.isAuthenticated(), controller.webOnboard);\nrouter.put(\n  '/updateUserTokenBalance',\n  auth.isAuthenticated(),\n  controller.updateUserTokenBalance\n);\nrouter.put(\n  '/updateHandle',\n  auth.isAuthenticated(),\n  controller.updateHandle,\n  auth.setTokenCookieDesktop\n);\nrouter.put('/updateCommunity', auth.isAuthenticated(), controller.updateComunity);\nrouter.put('/ethAddress', auth.isAuthenticated(), controller.ethAddress);\nrouter.put('/confirm', controller.confirm);\nrouter.put('/forgot', controller.forgot);\nrouter.put('/resetPassword', auth.currentUser(), controller.resetPassword);\nrouter.put('/notifications', auth.isAuthenticated(), controller.updateUserNotifications);\nrouter.put('/:id/password', auth.isAuthenticated(), controller.changePassword);\nrouter.put('/', auth.isAuthenticated(), controller.update);\nrouter.put('/block', auth.isAuthenticated(), controller.block);\nrouter.put('/unblock', auth.isAuthenticated(), controller.unblock);\n\nrouter.delete('/:id', auth.isAuthenticated(), controller.destroy);\n\nmodule.exports = router;\n"],"file":"index.js"}