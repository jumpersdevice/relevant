{"version":3,"sources":["../../../src/api/statistics/statistics.controller.js"],"names":["exports","index","req","res","time","query","Date","now","hour","getHours","hour2","Stats","find","exec","err","stats","json","user","next","communityId","communityMember","_id","start","end","date","$gte","$lt","status","change","id","params","Error","startTime","setHours","endTime","$lte","length","startDate","startHour","endHour","startObject","s","getTime","startAmount","hours","endAmount","response"],"mappings":";;;;;;AAAA;;AAEAA,OAAO,CAACC,KAAR,GAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC5B,MAAI;AAAEC,IAAAA;AAAF,MAAWF,GAAG,CAACG,KAAnB;AACAD,EAAAA,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAT,CAAP;AACA,MAAMG,GAAG,GAAG,IAAID,IAAJ,EAAZ;AACA,MAAME,IAAI,GAAGJ,IAAI,CAACK,QAAL,EAAb;AACA,MAAMC,KAAK,GAAGH,GAAG,CAACE,QAAJ,EAAd;;AAEAE,sBAAMC,IAAN,GAAaC,IAAb,CAAkB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChCZ,IAAAA,GAAG,CAACa,IAAJ,CAAS,GAAT,EAAc;AAAED,MAAAA,KAAF;AAASX,MAAAA,IAAT;AAAeG,MAAAA,GAAf;AAAoBC,MAAAA,IAApB;AAA0BE,MAAAA;AAA1B,KAAd;AACD,GAFD;AAGD,CAVD;;AAYAV,OAAO,CAACiB,IAAR;AAAA,6CAAe,WAAOf,GAAP,EAAYC,GAAZ,EAAiBe,IAAjB,EAA0B;AACvC,QAAI;AACF,UAAM;AAAEC,QAAAA;AAAF,UAAkBjB,GAAG,CAACkB,eAA5B;AACA,UAAMH,IAAI,GAAGf,GAAG,CAACe,IAAJ,CAASI,GAAtB;AACA,UAAMC,KAAK,GAAG,IAAIhB,IAAJ,CAASJ,GAAG,CAACG,KAAJ,CAAUiB,KAAnB,CAAd;AACA,UAAMC,GAAG,GAAG,IAAIjB,IAAJ,CAASJ,GAAG,CAACG,KAAJ,CAAUkB,GAAnB,CAAZ;AACA,UAAMR,KAAK,SAASJ,oBAAMC,IAAN,CAClB;AAAEK,QAAAA,IAAF;AAAQO,QAAAA,IAAI,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAR;AAAeI,UAAAA,GAAG,EAAEH;AAApB,SAAd;AAAyCJ,QAAAA;AAAzC,OADkB,EAElB,kDAFkB,CAApB;AAIAhB,MAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBX,IAAhB,CAAqBD,KAArB;AACD,KAVD,CAUE,OAAOD,GAAP,EAAY;AACZI,MAAAA,IAAI,CAACJ,GAAD,CAAJ;AACD;AACF,GAdD;;AAAA;AAAA;AAAA;AAAA;;AAgBAd,OAAO,CAAC4B,MAAR,GAAiB,CAAC1B,GAAD,EAAMC,GAAN,EAAWe,IAAX,KAAoB;AACnC,MAAI;AAAEW,IAAAA;AAAF,MAAS3B,GAAG,CAAC4B,MAAjB;AACA,MAAI,CAACD,EAAL,EAASA,EAAE,GAAG3B,GAAG,CAACe,IAAJ,CAASI,GAAd;AACT,MAAI,CAACQ,EAAL,EAAS,OAAOX,IAAI,CAAC,IAAIa,KAAJ,CAAU,YAAV,CAAD,CAAX;AACT,MAAMC,SAAS,GAAG,IAAI1B,IAAJ,CAASJ,GAAG,CAACG,KAAJ,CAAU2B,SAAnB,EAA8BC,QAA9B,CAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,CAAlB;AACA,MAAMC,OAAO,GAAG,IAAI5B,IAAJ,CAASJ,GAAG,CAACG,KAAJ,CAAU6B,OAAnB,EAA4BD,QAA5B,CAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,CAAhB;AACA,MAAM5B,KAAK,GAAG;AAAEY,IAAAA,IAAI,EAAEY,EAAR;AAAYG,IAAAA,SAAS,EAAE;AAAEP,MAAAA,IAAI,EAAEO,SAAR;AAAmBG,MAAAA,IAAI,EAAED;AAAzB;AAAvB,GAAd;AAEA,SAAOvB,oBAAMC,IAAN,CAAWP,KAAX,EAAkBQ,IAAlB,CAAuB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5C,QAAID,GAAG,IAAI,CAACC,KAAK,CAACqB,MAAlB,EAA0B,OAAOlB,IAAI,CAACJ,GAAD,CAAX;AAC1B,QAAMuB,SAAS,GAAG,IAAI/B,IAAJ,CAASJ,GAAG,CAACG,KAAJ,CAAU2B,SAAnB,CAAlB;AACA,QAAMM,SAAS,GAAGD,SAAS,CAAC5B,QAAV,EAAlB;AACA,QAAM8B,OAAO,GAAG,IAAIjC,IAAJ,CAASJ,GAAG,CAACG,KAAJ,CAAU6B,OAAnB,EAA4BzB,QAA5B,EAAhB;AACA,QAAM+B,WAAW,GAAGzB,KAAK,CAACH,IAAN,CAClB6B,CAAC,IACC;AACA;AACA;AACAA,IAAAA,CAAC,CAACT,SAAF,CAAYU,OAAZ,OAA0BV,SALV,CAApB;AAOA,QAAIW,WAAJ;AACA,QAAI,CAACH,WAAL,EAAkBG,WAAW,GAAG,CAAd,CAAlB,KACKA,WAAW,GAAGH,WAAW,CAACI,KAAZ,CAAkBN,SAAlB,KAAgC,CAA9C;AACL,QAAMO,SAAS,GAAG9B,KAAK,CAACA,KAAK,CAACqB,MAAN,GAAe,CAAhB,CAAL,CAAwBQ,KAAxB,CAA8BL,OAA9B,KAA0C,CAA5D;AACA,QAAIX,MAAJ;AACA,QAAIe,WAAJ,EAAiBf,MAAM,GAAI,CAACiB,SAAS,GAAGF,WAAb,IAA4B,GAA7B,GAAoCA,WAA7C,CAAjB,KACKf,MAAM,GAAG,CAAT;AACL,QAAMkB,QAAQ,GAAG;AACflB,MAAAA,MADe;AAEfe,MAAAA,WAFe;AAGfE,MAAAA;AAHe,KAAjB;AAKA,WAAO1C,GAAG,CAACa,IAAJ,CAAS,GAAT,EAAc8B,QAAd,CAAP;AACD,GAzBM,CAAP;AA0BD,CAlCD","sourcesContent":["import Stats from './statistics.model';\n\nexports.index = (req, res) => {\n  let { time } = req.query;\n  time = new Date(time);\n  const now = new Date();\n  const hour = time.getHours();\n  const hour2 = now.getHours();\n\n  Stats.find().exec((err, stats) => {\n    res.json(200, { stats, time, now, hour, hour2 });\n  });\n};\n\nexports.user = async (req, res, next) => {\n  try {\n    const { communityId } = req.communityMember;\n    const user = req.user._id;\n    const start = new Date(req.query.start);\n    const end = new Date(req.query.end);\n    const stats = await Stats.find(\n      { user, date: { $gte: start, $lt: end }, communityId },\n      'aggregateRelevance totalSamples date communityId'\n    );\n    res.status(200).json(stats);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.change = (req, res, next) => {\n  let { id } = req.params;\n  if (!id) id = req.user._id;\n  if (!id) return next(new Error('No user id'));\n  const startTime = new Date(req.query.startTime).setHours(0, 0, 0, 0);\n  const endTime = new Date(req.query.endTime).setHours(0, 0, 0, 0);\n  const query = { user: id, startTime: { $gte: startTime, $lte: endTime } };\n\n  return Stats.find(query).exec((err, stats) => {\n    if (err || !stats.length) return next(err);\n    const startDate = new Date(req.query.startTime);\n    const startHour = startDate.getHours();\n    const endHour = new Date(req.query.endTime).getHours();\n    const startObject = stats.find(\n      s =>\n        // console.log(s.startTime == new Date(startTime))\n        // console.log('STAT START ', s.startTime.getTime());\n        // console.log(startTime);\n        s.startTime.getTime() === startTime\n    );\n    let startAmount;\n    if (!startObject) startAmount = 0;\n    else startAmount = startObject.hours[startHour] || 0;\n    const endAmount = stats[stats.length - 1].hours[endHour] || 0;\n    let change;\n    if (startAmount) change = ((endAmount - startAmount) * 100) / startAmount;\n    else change = 0;\n    const response = {\n      change,\n      startAmount,\n      endAmount\n    };\n    return res.json(200, response);\n  });\n};\n"],"file":"statistics.controller.js"}