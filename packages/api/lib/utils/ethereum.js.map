{"version":3,"sources":["../../src/utils/ethereum.js"],"names":["decimals","instance","rpcUrl","provider","network","key","tokenAddress","web3","initialized","wallet","pendingTx","GAS_SPEED","process","env","on","err","console","log","Error","isInitialized","getWeb3","getInstance","init","_provider","_address","NODE_ENV","OWNER_KEY","ethers","getDefaultProvider","INFURA_NETWORK","RelevantToken","networks","NETWORK_NUMBER","address","TEST_KEY","TEST_RPC","providers","JsonRpcProvider","getNetwork","chainId","Wallet","Contract","abi","connect","getBalance","balance","balanceOf","val","div","toString","parseFloat","getParam","param","opt","value","noConvert","string","getGasPrice","gasSpeed","speed","gasPrice","price","JSON","parse","sendTx","method","args","cancelPendingTx","nonce","getTransactionCount","pending","optNonce","options","gasLimit","tx","result","wait","status","gasUsed","toBN","num","utils","parseUnits","mintRewardTokens","lastMint","roundsSincleLast","toNumber","allocateRewards","_amount","allocateAirdrops","getNonce","_account","nonceOf","sign","amount","hash","solidityKeccak256","sig","signMessage","arrayify"],"mappings":"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","sourcesContent":["import request from 'request-promise-any';\nimport { ethers } from 'ethers';\nimport { INFURA_NETWORK, NETWORK_NUMBER } from 'app/core/config';\nimport { sendAdminAlert } from 'server/utils/mail';\nimport RelevantToken from '@r3l/common/lib/contracts/RelevantToken.json';\n\nlet decimals;\nlet instance;\nlet rpcUrl;\nlet provider;\nlet network;\nlet key;\nlet tokenAddress;\nlet web3;\nlet initialized = false;\nlet wallet;\n\nconst pendingTx = {};\nconst GAS_SPEED = process.env.GAS_SPEED || 'average';\n\nprocess.on('beforeExit', async () => {\n  const err = `Un-executed Pending Transactions: ${pendingTx}`;\n  // eslint-disable-next-line\n  console.log(err);\n  await sendAdminAlert(new Error(err));\n});\n\nexport const isInitialized = () => initialized;\nexport const getWeb3 = () => web3;\n\n// SECURITY - this should never by exposed via any APIs!\nexport const getInstance = () => instance;\n\nexport async function init(_provider, _address) {\n  try {\n    // SECURITY - this env var should never by exposed via any APIs!\n    if (process.env.NODE_ENV === 'production') {\n      key = process.env.OWNER_KEY;\n      if (!key) return false;\n\n      provider = ethers.getDefaultProvider(INFURA_NETWORK);\n      tokenAddress = RelevantToken.networks[NETWORK_NUMBER]\n        ? RelevantToken.networks[NETWORK_NUMBER].address\n        : null;\n    } else {\n      key = process.env.TEST_KEY;\n      if (!key) return false;\n\n      rpcUrl = process.env.TEST_RPC;\n      provider = _provider || new ethers.providers.JsonRpcProvider(rpcUrl);\n      network = await provider.getNetwork();\n      tokenAddress = _address || RelevantToken.networks[network.chainId].address;\n    }\n\n    wallet = new ethers.Wallet(key, provider);\n    instance = new ethers.Contract(tokenAddress, RelevantToken.abi, provider);\n\n    // SECURITY - this should never by exposed via any APIs!\n    instance = instance.connect(wallet);\n\n    decimals = await instance.decimals();\n    initialized = true;\n\n    return true;\n  } catch (err) {\n    console.log(err); // eslint-disable-line\n    return false;\n  }\n}\n\nexport async function getBalance(address) {\n  if (!instance) return 0;\n  const balance = await instance.balanceOf(address);\n  const val = balance.div((10 ** decimals).toString());\n  return parseFloat(val.toString());\n}\n\nexport async function getParam(param, opt) {\n  if (!initialized) await init();\n\n  let value = await instance[param]();\n  if (!opt || !opt.noConvert) value = value.div((10 ** decimals).toString());\n  if (!opt || !opt.string) value = parseFloat(value.toString());\n  return value;\n}\n\nexport async function getGasPrice(gasSpeed) {\n  const speed = gasSpeed || GAS_SPEED;\n  const gasPrice = await request('https://ethgasstation.info/json/ethgasAPI.json');\n  const price = JSON.parse(gasPrice);\n  console.log(price); // eslint-disable-line\n  console.log('gas price', price[speed]); // eslint-disable-line\n  return price[speed];\n}\n\n// SECURITY - this function should never by exposed via any APIs!\nexport async function sendTx({ method, args, cancelPendingTx }) {\n  const nonce = await wallet.getTransactionCount();\n  const pending = await wallet.getTransactionCount('pending');\n  console.log('current nonce', nonce, 'pending nonce:', pending); // eslint-disable-line\n  const speed = pending > nonce && cancelPendingTx ? 'fast' : null;\n  const gasPrice = await getGasPrice(speed);\n  const optNonce = cancelPendingTx ? { nonce } : {};\n\n  const options = {\n    gasPrice: gasPrice * 1e8,\n    gasLimit: 6e6,\n    ...optNonce\n  };\n\n  const tx = await instance[method](...args, options);\n  pendingTx[method] = tx;\n  const result = await tx.wait();\n  delete pendingTx[method];\n  console.log('status:', result.status); // eslint-disable-line\n  console.log(`gas used by ${method}: ${result.gasUsed}`); // eslint-disable-line\n  return result;\n}\n\nexport function toBN(num) {\n  return ethers.utils.parseUnits((num / 10 ** decimals).toString(), decimals);\n}\n\nexport async function mintRewardTokens(cancelPendingTx) {\n  if (!instance) await init();\n  const lastMint = await instance.roundsSincleLast();\n  if (lastMint.toNumber() === 0) return null;\n  return sendTx({ method: 'releaseTokens', args: [], cancelPendingTx });\n}\n\nexport async function allocateRewards(_amount, cancelPendingTx) {\n  return sendTx({ method: 'allocateRewards', args: [toBN(_amount)], cancelPendingTx });\n}\n\nexport async function allocateAirdrops(_amount) {\n  return sendTx({ method: 'allocateAirdrops', args: [toBN(_amount)] });\n}\n\nexport async function getNonce(_account) {\n  const nonce = await instance.nonceOf(_account);\n  return nonce.toNumber();\n}\n\nexport async function sign(_account, _amount) {\n  const nonce = await getNonce(_account);\n  const amount = ethers.utils.parseUnits(_amount.toString(), decimals).toString();\n  const hash = ethers.utils.solidityKeccak256(\n    ['uint256', 'address', 'uint256'],\n    [amount, _account, nonce]\n  );\n  const sig = await wallet.signMessage(ethers.utils.arrayify(hash));\n  return { sig, amount };\n}\n"],"file":"ethereum.js"}