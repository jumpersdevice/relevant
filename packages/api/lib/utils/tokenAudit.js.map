{"version":3,"sources":["../../src/utils/tokenAudit.js"],"names":["queue","require","q","concurrency","RELEVANT_ENV","SYS_ADMIN_EMAIL","process","env","runAudit","auditUserEarnings","console","log","err","sendAdminAlert","user","diff","data","from","to","subject","html","handle","JSON","stringify","users","User","find","balance","$gt","audited","map","userEarnings","Promise","all","earnings","Earnings","_id","$or","status","totalRewards","reduce","a","e","earned","difference","Math","abs","userCashoutLog","cashOutAttempt","cashedOut","filter","cashOutAmt","logUser","airdropTokens","legacyTokens","legacyAirdrop","tokenBalance","referralTokens","auditUser","findOne","populate","totalEarnigns","adjust","postData","investments","Invest","post","investor","length","investment","postdata","PostData","communityId","equals","community","postInv","invShares","inv","shares","estimatedReward","payout","title","totalPostShares","estimatedPostPayout","createdAt","listAllBalances","sort","forEach","u"],"mappings":"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","sourcesContent":["/* eslint no-console: 0 */\n/* eslint no-unused-vars: 0 */\n\nimport User from 'server/api/user/user.model';\nimport Earnings from 'server/api/earnings/earnings.model';\nimport Invest from 'server/api/invest/invest.model';\nimport PostData from 'server/api/post/postData.model';\nimport { sendEmail } from 'server/utils/mail';\n\nconst queue = require('queue');\n\nconst q = queue({\n  concurrency: 1\n});\n\nconst { RELEVANT_ENV, SYS_ADMIN_EMAIL } = process.env;\n\nexport async function runAudit() {\n  try {\n    await auditUserEarnings();\n    console.log('finished audit');\n  } catch (err) {\n    console.log(err);\n  }\n}\n// runAudit();\n\nasync function sendAdminAlert(user, diff) {\n  if (RELEVANT_ENV !== 'production') return null;\n  const data = {\n    from: 'Relevant <info@relevant.community>',\n    to: 'slava@relevant.community',\n    subject: 'User balance discreptacy',\n    html: `\n      user: @${user.handle}\n      discreptacy: ${diff}\n      <br />\n      <br />\n      user object:\n      <br />\n      ${JSON.stringify(user)}\n      <br />\n      `\n  };\n  return sendEmail(data);\n}\n\nasync function auditUserEarnings() {\n  const users = await User.find({ balance: { $gt: 0 } });\n  const audited = users.map(userEarnings);\n  return Promise.all(audited);\n}\n\nasync function userEarnings(user) {\n  const earnings = await Earnings.find({\n    user: user._id,\n    $or: [{ status: 'paidout' }]\n  });\n\n  const totalRewards = earnings.reduce((a, e) => e.earned + a, 0);\n  const diff = difference(user, totalRewards);\n\n  if (Math.abs(diff) > 0.000001) {\n    console.log('error! earnings mismatch for', user._id);\n\n    const userCashoutLog = await Earnings.find({ user: user._id, cashOutAttempt: true });\n    const cashedOut = userCashoutLog\n      .filter(e => e.status === 'completed')\n      .reduce((a, e) => a + e.cashOutAmt, 0);\n    logUser(user, totalRewards);\n    console.log(user.handle, 'discrepancy', diff);\n    console.log(user.handle, 'cashed out is', user.cashedOut, 'should be', cashedOut);\n    sendAdminAlert(user, diff);\n  }\n}\n\nfunction difference(user, totalRewards) {\n  return (\n    user.balance +\n    user.cashedOut -\n    user.airdropTokens -\n    totalRewards -\n    user.legacyTokens -\n    user.legacyAirdrop\n  );\n}\n\nfunction logUser(user, totalRewards) {\n  console.log(\n    user.handle,\n    'balance:',\n    user.balance,\n    'tokenBalance:',\n    user.tokenBalance,\n    'newRewards:',\n    totalRewards,\n    'airdrop / referral',\n    user.airdropTokens,\n    '/',\n    user.referralTokens,\n    'legacyRewards:',\n    user.legacyTokens,\n    'legacyAirdrop:',\n    user.legacyAirdrop,\n    'cashedOut:',\n    user.cashedOut\n  );\n}\n\nasync function auditUser(handle) {\n  const user = await User.findOne({ handle });\n  const earnings = await Earnings.find({\n    user: user._id,\n    $or: [{ status: 'paidout' }, { status: 'expired' }]\n  }).populate('post');\n  const totalEarnigns = earnings.reduce((a, e) => e.earned + a, 0);\n\n  let diff = difference(user, totalEarnigns);\n\n  let adjust = 0;\n\n  const postData = await earnings.map(async e => {\n    const investments = await Invest.find({ post: e.post._id, investor: user._id });\n    if (investments.length > 1) {\n      console.log('multiple inv', investments);\n    }\n    const investment = investments[0];\n    const postdata = await PostData.findOne({\n      post: e.post,\n      communityId: investment.communityId\n    });\n\n    if (!postdata) {\n      console.log('missing post data for', e);\n      console.log(' ');\n      return;\n    }\n\n    if (e.communityId && !investment.communityId.equals(e.communityId)) {\n      console.log('invest/earning mismatch', e.community, investment.community);\n      if (!e.communityId) {\n        // e.communityId = investment.communityId;\n        // e.community = investment.community;\n      }\n    }\n\n    const postInv = await Invest.find({ post: e.post._id });\n    const invShares = postInv.reduce((a, inv) => inv.shares + a, 0);\n\n    const estimatedReward = !postdata.payout\n      ? 0\n      : (postdata.payout * e.shares * 1e-18) / invShares;\n\n    if (Math.abs(estimatedReward - e.earned) > 0.001) {\n      console.log(e.post._id, e.post.title);\n      console.log('shares', e.totalPostShares, postdata.shares, invShares);\n      console.log('est vs payout', e.estimatedPostPayout, postdata.payout * 1e-18);\n      console.log(estimatedReward, 'vs', e.earned);\n      console.log('invest', investment.community, investment.createdAt);\n      console.log('post', postdata.community, investment.createdAt);\n      console.log('earning', e.community, e.earned, e.status);\n\n      adjust += estimatedReward - e.earned;\n      user.balance -= e.earned;\n\n      diff = difference(user, totalEarnigns);\n      e.communityId = investment.communityId;\n      e.community = investment.community;\n      e.earned = estimatedReward;\n      e.status = 'paidout';\n      // await e.save();\n      console.log(' ');\n    }\n  });\n  await Promise.all(postData);\n  // user.balance -= diff;\n  // await user.save();\n  console.log(adjust, 'vs', diff);\n}\n\nasync function listAllBalances() {\n  const users = await User.find({ balance: { $gt: 0 } }).sort('-balance');\n  users.forEach(u => console.log(u.handle, ',', u.balance));\n}\n"],"file":"tokenAudit.js"}