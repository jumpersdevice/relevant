{"version":3,"sources":["../src/routes.js"],"names":["wwwRedirect","req","res","next","headers","host","slice","newHost","redirect","protocol","originalUrl","module","exports","app","set","use","require","get","userController","confirm","jsonResponse","status","json","err","console","error","message","resp","send"],"mappings":"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","sourcesContent":["import { sendAdminAlert } from 'server/utils/mail';\n// import rateLimit from 'express-rate-limit';\n// eslint-disable-next-line import/named\nimport userController from './api/user/user.controller';\n\nfunction wwwRedirect(req, res, next) {\n  if (req.headers.host.slice(0, 4) === 'www.') {\n    const newHost = req.headers.host.slice(4);\n    return res.redirect(301, req.protocol + '://' + newHost + req.originalUrl);\n  }\n  return next();\n}\n\n// const reloadLimit = rateLimit({\n//   windowMs: 1 * 60 * 1000, // 1 hour window\n//   max: 200000, // start blocking after 5 requests\n//   message: 'You refreshed too many times, please try again in 1 minute',\n// });\n\nmodule.exports = app => {\n  app.set('trust proxy', true);\n  app.use(wwwRedirect);\n\n  // API\n  app.use('/api/user', require('./api/user'));\n  app.use('/api/s3', require('./api/s3'));\n  app.use('/auth', require('./auth'));\n  app.use('/api/post', require('./api/post'));\n  app.use('/api/subscription', require('./api/subscription'));\n  app.use('/api/invest', require('./api/invest'));\n  app.use('/api/tag', require('./api/tag'));\n  app.use('/api/notification', require('./api/notification'));\n  app.use('/api/comment', require('./api/comment'));\n  app.use('/api/statistics', require('./api/statistics'));\n  app.use('/api/earnings', require('./api/earnings'));\n  app.use('/api/treasury', require('./api/treasury'));\n  app.use('/api/list', require('./api/emailList'));\n  app.use('/api/invites', require('./api/invites'));\n  app.use('/api/email', require('./api/email'));\n  app.use('/api/communityFeed', require('./api/communityFeed'));\n  app.use('/api/community', require('./api/community'));\n  app.get('/confirm/:user/:code', userController.confirm); // deprecate\n  app.get('/user/confirm/:user/:code', userController.confirm);\n  app.get('/user/:user/confirm/:code', userController.confirm);\n\n  // TODO - check if community exists here and redirect if not\n  // app.use('/home', (req, res) => res.redirect('/relevant/new'));\n\n  // Default response middleware\n  app.use((req, res, next) => {\n    if (res.jsonResponse) {\n      res.status(200).json(res.jsonResponse);\n    } else next();\n  });\n\n  // Error handler route\n  // (need next for this to work)\n  // eslint-disable-next-line\n  app.use(async (err, req, res, next) => {\n    console.error(err); // eslint-disable-line\n    await sendAdminAlert(err);\n    return res.status(500).json({ message: err.message });\n  });\n\n  app.get('/', async (req, resp) => resp.send('Nothing to see. Move along.'));\n};\n"],"file":"routes.js"}