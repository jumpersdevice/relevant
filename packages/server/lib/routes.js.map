{"version":3,"sources":["../src/routes.js"],"names":["wwwRedirect","req","res","next","headers","host","slice","newHost","redirect","protocol","originalUrl","reloadLimit","windowMs","max","message","module","exports","app","set","use","require","get","userController","confirm","jsonResponse","status","json","err","console","error","handleRender","BANNED_COMMUNITY_SLUGS","forEach","c"],"mappings":"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","sourcesContent":["import { BANNED_COMMUNITY_SLUGS } from 'server/config/globalConstants';\nimport { sendAdminAlert } from 'server/utils/mail';\nimport rateLimit from 'express-rate-limit';\nimport handleRender from './render';\n// eslint-disable-next-line import/named\nimport { currentUser } from './auth/auth.service';\nimport userController from './api/user/user.controller';\n\nfunction wwwRedirect(req, res, next) {\n  if (req.headers.host.slice(0, 4) === 'www.') {\n    const newHost = req.headers.host.slice(4);\n    return res.redirect(301, req.protocol + '://' + newHost + req.originalUrl);\n  }\n  return next();\n}\n\nconst reloadLimit = rateLimit({\n  windowMs: 1 * 60 * 1000, // 1 hour window\n  max: 200000, // start blocking after 5 requests\n  message: 'You refreshed too many times, please try again in 1 minute'\n});\n\nmodule.exports = app => {\n  app.set('trust proxy', true);\n  app.use(wwwRedirect);\n\n  // API\n  app.use('/api/user', require('./api/user'));\n  app.use('/api/s3', require('./api/s3'));\n  app.use('/auth', require('./auth'));\n  app.use('/api/post', require('./api/post'));\n  app.use('/api/subscription', require('./api/subscription'));\n  app.use('/api/invest', require('./api/invest'));\n  app.use('/api/tag', require('./api/tag'));\n  app.use('/api/notification', require('./api/notification'));\n  app.use('/api/comment', require('./api/comment'));\n  app.use('/api/statistics', require('./api/statistics'));\n  app.use('/api/earnings', require('./api/earnings'));\n  app.use('/api/treasury', require('./api/treasury'));\n  app.use('/api/list', require('./api/emailList'));\n  app.use('/api/invites', require('./api/invites'));\n  app.use('/api/email', require('./api/email'));\n  app.use('/api/communityFeed', require('./api/communityFeed'));\n  app.use('/api/community', require('./api/community'));\n  app.get('/confirm/:user/:code', userController.confirm); // deprecate\n  app.get('/user/confirm/:user/:code', userController.confirm);\n  app.get('/user/:user/confirm/:code', userController.confirm);\n\n  // TODO - check if community exists here and redirect if not\n  // app.use('/home', (req, res) => res.redirect('/relevant/new'));\n\n  // Default response middleware\n  app.use((req, res, next) => {\n    if (res.jsonResponse) {\n      res.status(200).json(res.jsonResponse);\n    } else next();\n  });\n\n  // Error handler route\n  // (need next for this to work)\n  // eslint-disable-next-line\n  app.use(async (err, req, res, next) => {\n    console.error(err); // eslint-disable-line\n    await sendAdminAlert(err);\n    return res.status(500).json({ message: err.message });\n  });\n\n  app.get('/', reloadLimit, currentUser(), handleRender);\n\n  BANNED_COMMUNITY_SLUGS.forEach(c => {\n    app.get(`/${c}/*`, currentUser(), handleRender);\n    app.get(`/${c}`, currentUser(), handleRender);\n  });\n\n  app.get('/:community', reloadLimit, currentUser(), handleRender);\n  app.get('/:community/post/:postId', reloadLimit, currentUser(), handleRender);\n  app.get(\n    '/:community/post/:postId/:commentId',\n    reloadLimit,\n    currentUser(),\n    handleRender\n  );\n  app.get('/:community/:feed', reloadLimit, currentUser(), handleRender);\n  app.get('/:community/:feed/*', reloadLimit, currentUser(), handleRender);\n  app.get('/*', reloadLimit, currentUser(), handleRender);\n};\n"],"file":"routes.js"}