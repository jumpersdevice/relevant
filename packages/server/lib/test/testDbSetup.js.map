{"version":3,"sources":["../../src/test/testDbSetup.js"],"names":["mongoose","require","Promise","global","mongooseOpts","autoReconnect","reconnectTries","Number","MAX_VALUE","reconnectInterval","useCreateIndex","useNewUrlParser","useFindAndModify","useUnifiedTopology","beforeAll","process","env","TEST_SUITE","console","warn","connection","readyState","connect","MONGO_URI","clearDB","host","Error","clear","Object","values","collections","map","collection","deleteMany","all","afterAll","disconnect"],"mappings":";;AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEAD,QAAQ,CAACE,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AAEA,MAAME,YAAY,GAAG;AACnB;AACAC,EAAAA,aAAa,EAAE,IAFI;AAGnBC,EAAAA,cAAc,EAAEC,MAAM,CAACC,SAHJ;AAInBC,EAAAA,iBAAiB,EAAE,IAJA;AAKnBC,EAAAA,cAAc,EAAE,IALG;AAMnBC,EAAAA,eAAe,EAAE,IANE;AAOnBC,EAAAA,gBAAgB,EAAE,KAPC;AAQnBC,EAAAA,kBAAkB,EAAE;AARD,CAArB;AAWAC,SAAS,CAAC,YAAY;AACpB,MAAI,CAACC,OAAO,CAACC,GAAR,CAAYC,UAAjB,EAA6B;AAC3B;AACAC,IAAAA,OAAO,CAACC,IAAR,CACE,+FADF;AAGD;;AAED,MAAInB,QAAQ,CAACoB,UAAT,CAAoBC,UAApB,KAAmC,CAAvC,EAA0C;AACxC,UAAMrB,QAAQ,CAACsB,OAAT,CAAkB,GAAEnB,MAAM,CAACoB,SAAU,GAAER,OAAO,CAACC,GAAR,CAAYC,UAAW,EAA9D,EAAiEb,YAAjE,CAAN;AACD;;AACD,QAAMoB,OAAO,EAAb;AACA,SAAO,8BAAP;;AAEA,iBAAeA,OAAf,GAAyB;AACvB,QAAIxB,QAAQ,CAACoB,UAAT,CAAoBK,IAApB,KAA6B,WAAjC,EAA8C;AAC5C,YAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc7B,QAAQ,CAACoB,UAAT,CAAoBU,WAAlC,EAA+CC,GAA/C,CAAmD,MAAMC,UAAN,IAC/DA,UAAU,CAACC,UAAX,EADY,CAAd;AAGA,UAAM/B,OAAO,CAACgC,GAAR,CAAYP,KAAZ,CAAN;AACD;AACF,CAvBQ,CAAT;AAyBAQ,QAAQ,CAAC,YAAYnC,QAAQ,CAACoC,UAAT,EAAb,CAAR","sourcesContent":["import { setupTestData } from './seedData';\n\nconst mongoose = require('mongoose');\n\nmongoose.Promise = global.Promise;\n\nconst mongooseOpts = {\n  // options for mongoose 4.11.3 and above\n  autoReconnect: true,\n  reconnectTries: Number.MAX_VALUE,\n  reconnectInterval: 1000,\n  useCreateIndex: true,\n  useNewUrlParser: true,\n  useFindAndModify: false,\n  useUnifiedTopology: true\n};\n\nbeforeAll(async () => {\n  if (!process.env.TEST_SUITE) {\n    // eslint-disable-next-line\n    console.warn(\n      'MISSING TEST_SUITE NAME - you need to set a process.env.TEST_SUITE variable in your test file'\n    );\n  }\n\n  if (mongoose.connection.readyState === 0) {\n    await mongoose.connect(`${global.MONGO_URI}${process.env.TEST_SUITE}`, mongooseOpts);\n  }\n  await clearDB();\n  return setupTestData();\n\n  async function clearDB() {\n    if (mongoose.connection.host !== '127.0.0.1') {\n      throw new Error('this is not a test db!');\n    }\n    const clear = Object.values(mongoose.connection.collections).map(async collection =>\n      collection.deleteMany()\n    );\n    await Promise.all(clear);\n  }\n});\n\nafterAll(async () => mongoose.disconnect());\n"],"file":"testDbSetup.js"}