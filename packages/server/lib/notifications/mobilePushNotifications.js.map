{"version":3,"sources":["../../src/notifications/mobilePushNotifications.js"],"names":["options","cert","process","env","APN_CERT","key","APN_KEY","production","NODE_ENV","KEY","ANDROID_KEY","settings","gcm","id","apn","PushNotifications","require","push","initNotificationService","Provider","err","on","service","console","log","notification","device","token","toString","errCode","error","deviceToken","User","findOneAndUpdate","_id","payload","toUser","$pull","deviceTokens","exec","handleMobileNotifications","user","alert","userObj","toObject","notificationSettings","findOne","mobile","all","length","post","badge","Notification","countDocuments","forUser","read","registrationIds","forEach","postId","parentPost","notePayload","title","community","data","comment","body","expiry","Math","floor","Date","now","custom","sound","topic","contentAvailable","results","send","updatedTokens","result","message","filter","regId","markModified","save","module","exports","apnConnection"],"mappings":"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","sourcesContent":["import apn from 'apn';\nimport Notification from 'server/api/notification/notification.model';\nimport User from 'server/api/user/user.model';\n\n/* eslint no-console: 0 */\n\nconst options = {\n  cert: process.env.APN_CERT || 'server/dev-cert.pem',\n  key: process.env.APN_KEY || 'server/dev-key.pem',\n  production: process.env.NODE_ENV === 'production'\n};\n\nconst KEY = process.env.ANDROID_KEY;\n\nconst settings = {\n  gcm: {\n    id: KEY\n  },\n  apn: {\n    cert: process.env.APN_CERT || 'server/dev-cert.pem',\n    key: process.env.APN_KEY || 'server/dev-key.pem',\n    production: process.env.NODE_ENV === 'production'\n  }\n};\n\nconst PushNotifications = require('node-pushnotifications');\n\nconst push = new PushNotifications(settings);\n\nfunction initNotificationService() {\n  try {\n    return new apn.Provider(options);\n  } catch (err) {\n    // console.log(err)\n    return { on: () => null };\n  }\n}\nconst service = initNotificationService();\n\nservice.on('connected', () => {\n  console.log('Connected');\n});\n\nservice.on('transmitted', (notification, device) => {\n  console.log('Notification transmitted to:' + device.token.toString('hex'));\n});\n\nservice.on('transmissionError', (errCode, notification, device) => {\n  console.error(\n    'Notification caused error: ' + errCode + ' for device ',\n    device,\n    notification\n  );\n  if (errCode === 8) {\n    const deviceToken = device.toString('utf8');\n    console.log('device id', deviceToken);\n    User.findOneAndUpdate(\n      { _id: notification.payload.toUser },\n      { $pull: { deviceTokens: deviceToken } }\n    ).exec();\n    console.log(\n      'A error code of 8 indicates that the device token is invalid. This could be for a number of reasons - are you using the correct environment? i.e. Production vs. Sandbox'\n    );\n  }\n});\n\nservice.on('timeout', () => {\n  console.log('Connection Timeout');\n});\n\nservice.on('disconnected', () => {\n  console.log('Disconnected from APNS');\n});\n\nservice.on('socketError', console.error);\n\nasync function handleMobileNotifications(user, alert, payload) {\n  try {\n    if (!user) return;\n\n    const userObj = user.toObject();\n    if (!userObj.notificationSettings || !userObj.deviceTokens) {\n      user = await User.findOne({ _id: user._id });\n    }\n\n    if (\n      !user.notificationSettings.mobile.all ||\n      !user.deviceTokens ||\n      !user.deviceTokens.length\n    ) {\n      return;\n    }\n\n    const { post } = payload;\n    const badge = await Notification.countDocuments({\n      forUser: user._id,\n      read: false\n    });\n    // badge += await Feed.count({ userId: user._id, read: false });\n\n    const registrationIds = [];\n    user.deviceTokens.forEach(deviceToken => {\n      registrationIds.push(deviceToken);\n      console.log('pushing to device tokens ', deviceToken);\n    });\n\n    const postId = post.parentPost ? post.parentPost._id || post.parentPost : post._id;\n\n    const notePayload = payload.post\n      ? {\n          postId,\n          title: post.title,\n          community: post.data ? post.data.community : post.community,\n          comment: post.parentPost ? post._id : null\n        }\n      : {};\n\n    const data = {\n      body: alert,\n      expiry: Math.floor(Date.now() / 1000) + 3600,\n      custom: { ...notePayload, toUser: user._id },\n      // this has the effect of playing the sound if we have an alert\n      // and silence when there is no alert\n      // 0 causes the default sound to be played\n      sound: alert ? 0 : 1,\n      badge,\n      topic: 'org.reactjs.native.Relevant',\n      contentAvailable: 1\n    };\n\n    const results = await push.send(registrationIds, data);\n\n    if (!results) {\n      console.log('notification error');\n    }\n    let updatedTokens = user.deviceTokens;\n    results.forEach(result => {\n      result.message.forEach(message => {\n        if (message.error) {\n          updatedTokens = updatedTokens.filter(token => token !== message.regId);\n          console.log('push notification error ', message.error);\n          console.log('removing device token', message.regId);\n        }\n      });\n    });\n    if (updatedTokens.length !== user.deviceTokens.length) {\n      user.markModified('deviceTokens');\n      user.deviceTokens = updatedTokens;\n      await user.save();\n    }\n  } catch (err) {\n    console.log('push notifications error', err);\n  }\n}\n\nmodule.exports = {\n  apnConnection: service,\n  handleMobileNotifications\n};\n"],"file":"mobilePushNotifications.js"}