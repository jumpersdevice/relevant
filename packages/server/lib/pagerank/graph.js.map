{"version":3,"sources":["../../src/pagerank/graph.js"],"names":["IS_TEST","process","env","NODE_ENV","DEFAULT_WEIGHT_FROM_ADMIN","Graph","constructor","votes","admins","community","usersWithDefault","forEach","processVote","processNegatives","addDefaultWeights","pruneNoInput","nodes","userNodes","postNodes","vote","user","investor","author","amount","_id","equals","post","timeLimitPost","Date","now","getTime","REP_CUTOFF_POSTS","createdAt","a","t","userWeight","Math","abs","RELEVANCE_DECAY","postWeight","RELEVANCE_DECAY_POSTS","downvote","userNode","initUserNode","handleAuthorNode","handlePostNode","DWNode","type","inputs","degree","start","danglingConsumer","Object","values","node","defaultWeight","admin","negConsumer","prevNeg","prevPos","posNegRatio","negDegree","adminIds","map","keys","length","includes","oId","oNode","cancelOutOpposites","authorNode","toObject","postNode","initPostNode","postDegree","relevance","console","log","max","pagerankRawNeg","pagerankRaw","handle","negativeNode","data","title","rank","run"],"mappings":"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","sourcesContent":["import {\n  RELEVANCE_DECAY,\n  // REP_CUTOFF,\n  RELEVANCE_DECAY_POSTS,\n  REP_CUTOFF_POSTS\n} from 'server/config/globalConstants';\n\nconst IS_TEST = process.env.NODE_ENV === 'test';\nconst DEFAULT_WEIGHT_FROM_ADMIN = 0.15;\n\nexport default class Graph {\n  userNodes = {};\n\n  postNodes = {};\n\n  constructor({ votes, admins, community, usersWithDefault }) {\n    this.community = community;\n    this.admins = admins;\n    usersWithDefault && usersWithDefault.forEach(user => this.initUserNode(user));\n    admins.forEach(user => this.initUserNode(user));\n    this.now = new Date();\n    return this.run(votes);\n  }\n\n  run = votes => {\n    votes.forEach(this.processVote);\n    // this.cancelledVotes();\n    // this.userNodes.danglingConsumer = {\n    //   type: 'hypothetical',\n    //   _id: 'danglingConsumer',\n    //   inputs: { danglingConsumer: 1 },\n    //   degree: 1,\n    //   start: this.community.danglingConsumer\n    // };\n\n    this.processNegatives();\n    this.addDefaultWeights();\n    this.pruneNoInput();\n    return { nodes: this.userNodes, postNodes: this.postNodes };\n  };\n\n  processVote = vote => {\n    const user = vote.investor;\n    if (!user) return null;\n\n    const { author, amount } = vote;\n    // don't process own votes\n    if (author && user._id.equals(author._id)) return null;\n\n    let { post } = vote;\n\n    // filter out older posts\n    if (!IS_TEST) {\n      const timeLimitPost = new Date(this.now.getTime() - REP_CUTOFF_POSTS);\n      if (new Date(vote.createdAt) < timeLimitPost) post = null;\n    }\n\n    const a = amount;\n    if (!a) return null;\n\n    // time discount (RELEVANCE_DECAY month half-life)\n    const t = this.now.getTime() - vote.createdAt.getTime();\n    const userWeight = Math.abs(a) * (1 / 2) ** (t / RELEVANCE_DECAY);\n    const postWeight = Math.abs(a) * (1 / 2) ** (t / RELEVANCE_DECAY_POSTS);\n\n    const downvote = a < 0;\n\n    const userNode = this.initUserNode(user);\n    author && this.handleAuthorNode({ author, user, downvote, userWeight, userNode });\n    post && this.handlePostNode({ post, userNode, downvote, postWeight });\n\n    return null;\n  };\n\n  addDefaultWeights = () => {\n    const DWNode = {\n      type: 'hypothetical',\n      _id: 'defaultWeight',\n      inputs: {},\n      degree: 0,\n      start: this.community.danglingConsumer\n    };\n\n    Object.values(this.userNodes).forEach(node => {\n      if (node.defaultWeight) {\n        DWNode.degree += node.defaultWeight || 0;\n        node.inputs[DWNode._id] = node.defaultWeight;\n      }\n    });\n\n    if (DWNode.degree === 0) return;\n\n    this.admins.forEach(admin => {\n      const a = this.userNodes[admin._id];\n      const defaultWeight = a.degree ? a.degree * DEFAULT_WEIGHT_FROM_ADMIN : 1;\n      a.degree += defaultWeight;\n      DWNode.inputs[a._id] = defaultWeight;\n    });\n\n    this.userNodes.defaultWeight = DWNode;\n  };\n\n  processNegatives = () => {\n    this.userNodes.negConsumer = {\n      type: 'hypothetical',\n      _id: 'negConsumer',\n      inputs: {},\n      degree: 0,\n      start: this.community.negConsumer\n    };\n    Object.values(this.userNodes).forEach(node => {\n      if (!node.prevNeg || !node.prevPos || !node.degree) return;\n      // add to the degree if node has negative rank\n      const posNegRatio = node.prevNeg / node.prevPos;\n      const negDegree = node.degree * posNegRatio;\n\n      node.degree += negDegree;\n      this.userNodes.negConsumer.inputs = {\n        ...this.userNodes.negConsumer.inputs,\n        [node._id]: negDegree\n      };\n    });\n  };\n\n  pruneNoInput = () => {\n    const adminIds = this.admins.map(a => a._id);\n    Object.values(this.userNodes).forEach(node => {\n      if (Object.keys(node.inputs).length === 0 && !adminIds.includes(node._id)) {\n        delete this.userNodes[node._id];\n      }\n    });\n  };\n\n  // cancelledVotes = () => {\n  //   Object.values(this.userNodes)\n  //     .filter(node => node.negativeNode)\n  //     .forEach(node => {\n  //       const positiveNode = this.userNodes[node._id.toString().replace('__neg', '')];\n  //       if (!positiveNode) return;\n  //       const nInputs = Object.keys(node.inputs);\n  //       const common = Object.keys(positiveNode.inputs).filter(k => nInputs.includes(k));\n  //       if (common.length) {\n  //         common.forEach(k => {\n  //           // console.log('neg:', node.inputs[k], 'pos:', positiveNode.inputs[k]);\n  //         });\n  //       }\n  //     });\n  // };\n\n  cancelOutOpposites = ({ author, userNode, userWeight, downvote }) => {\n    const oId = !downvote ? author._id + '__neg' : author._id;\n    const oNode = this.userNodes[oId] && this.userNodes[oId].inputs[userNode._id];\n\n    if (!oNode) return userWeight;\n\n    if (oNode > userWeight) {\n      this.userNodes[oId].inputs[userNode._id] -= userWeight;\n      userNode.degree -= userWeight;\n      return null;\n    }\n    if (oNode < userWeight) {\n      userWeight -= oNode;\n      userNode.degree -= oNode;\n      delete this.userNodes[oId].inputs[userNode._id];\n      return userWeight;\n    }\n    if (oNode === userWeight) {\n      delete this.userNodes[oId].inputs[userNode._id];\n      userNode.degree -= oNode;\n      return null;\n    }\n    return userWeight;\n  };\n\n  handleAuthorNode = ({ author, downvote, userWeight, userNode }) => {\n    const _id = downvote ? author._id + '__neg' : author._id;\n\n    // check if an opposite vote exists and adjust userWeight\n    userWeight = this.cancelOutOpposites({ author, userNode, userWeight, downvote });\n    if (!userWeight) return;\n\n    const authorNode = this.initUserNode({ ...author.toObject(), _id }, downvote);\n\n    authorNode.inputs[userNode._id] = authorNode.inputs[userNode._id]\n      ? authorNode.inputs[userNode._id] + userWeight\n      : userWeight;\n\n    userNode.degree += userWeight;\n  };\n\n  handlePostNode = ({ post, userNode, downvote, postWeight }) => {\n    const _id = downvote ? post._id + '__neg' : post._id;\n    const postNode = this.initPostNode({ ...post.toObject(), _id }, downvote);\n    postNode.inputs[userNode._id] = postNode.inputs[userNode._id]\n      ? postNode.inputs[userNode._id] + postWeight\n      : postWeight;\n\n    // userNode.degree += postWeight;\n    userNode.postDegree += postWeight;\n  };\n\n  initUserNode = (user, downvote) => {\n    if (!user) return null;\n    if (this.userNodes[user._id]) return this.userNodes[user._id];\n    if (!user.relevance) console.log('error: user missing reputaion', user); // eslint-disable-line\n    const start = user.relevance\n      ? Math.max(downvote ? user.relevance.pagerankRawNeg : user.relevance.pagerankRaw, 0)\n      : 0;\n    this.userNodes[user._id] = {\n      start,\n      handle: user.handle,\n      _id: user._id,\n      inputs: {},\n      degree: 0,\n      postDegree: 0,\n      negativeNode: !!downvote,\n      type: 'user',\n      defaultWeight: user.relevance ? user.relevance.defaultWeight : 0,\n      prevPos: user.relevance ? user.relevance.pagerankRaw : 0,\n      prevNeg: user.relevance ? user.relevance.pagerankRawNeg : 0\n    };\n    return this.userNodes[user._id];\n  };\n\n  initPostNode = (post, downvote) => {\n    if (!post) return null;\n    const { _id, data, title } = post;\n    if (this.postNodes[_id]) return this.postNodes[_id];\n\n    const start = data\n      ? Math.max(downvote ? data.pagerankRawNeg : data.pagerankRaw, 0)\n      : 0;\n    this.postNodes[_id] = {\n      start,\n      title,\n      _id,\n      inputs: {},\n      negativeNode: !!downvote,\n      type: 'post',\n      rank: 0\n    };\n    return this.postNodes[_id];\n  };\n}\n"],"file":"graph.js"}