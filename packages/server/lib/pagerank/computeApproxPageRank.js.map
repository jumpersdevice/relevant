{"version":3,"sources":["../../src/pagerank/computeApproxPageRank.js"],"names":["computeApproxPageRank","author","post","user","communityId","vote","undoInvest","com","Community","findOne","_id","member","CommunityMember","amount","N","numberOfElements","maxUserRank","maxPostRank","relevance","pagerankRaw","userR","authorId","postVotes","userVotes","Invest","countDocuments","ownPost","data","pagerank","pagerankRawNeg","save","negPosRatio","userDegree","degree","mergedDegree","postDegree","a","Math","abs","uInc","pInc","uDownvoteInc","rA","max","min","log","pRank","pRankNeg","normRank","normRankNeg","updateRank","Promise","all","err","console"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEe,eAAeA,qBAAf,CAAqC;AAClDC,EAAAA,MADkD;AAElDC,EAAAA,IAFkD;AAGlDC,EAAAA,IAHkD;AAIlDC,EAAAA,WAJkD;AAKlDC,EAAAA,IALkD;AAMlDC,EAAAA;AANkD,CAArC,EAOZ;AACD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMC,mBAAUC,OAAV,CAChB;AAAEC,MAAAA,GAAG,EAAEN;AAAP,KADgB,EAEhB,0CAFgB,CAAlB;AAIA,UAAMO,MAAM,GAAG,MAAMC,yBAAgBH,OAAhB,CAAwB;AAAEL,MAAAA,WAAF;AAAeD,MAAAA,IAAI,EAAEA,IAAI,CAACO;AAA1B,KAAxB,CAArB;AAEA,QAAIG,MAAJ;AACA,QAAIR,IAAJ,EAAUQ,MAAM,GAAGR,IAAI,CAACQ,MAAd;AACV,UAAMC,CAAC,GAAGP,GAAG,CAACQ,gBAAd;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA+BV,GAArC,CAVE,CAYF;;AACA,QAAI,CAACJ,IAAI,CAACe,SAAN,IAAmBf,IAAI,CAACe,SAAL,CAAeC,WAAf,IAA8B,CAArD,EAAwD,OAAO;AAAElB,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAP;AAExD,UAAMkB,KAAK,GAAGjB,IAAI,CAACe,SAAL,GAAiBf,IAAI,CAACe,SAAL,CAAeC,WAAhC,GAA8C,CAA5D;AACA,UAAME,QAAQ,GAAGpB,MAAM,GAAGA,MAAM,CAACS,GAAV,GAAgB,IAAvC;;AAEA,QAAIT,MAAM,IAAI,CAACA,MAAM,CAACiB,SAAtB,EAAiC;AAC/BjB,MAAAA,MAAM,CAACiB,SAAP,GAAmB,MAAMN,yBAAgBH,OAAhB,CAAwB;AAC/CN,QAAAA,IAAI,EAAEF,MAAM,CAACS,GADkC;AAE/CN,QAAAA;AAF+C,OAAxB,CAAzB;AAID,KAvBC,CAyBF;;;AACA,QAAIkB,SAAS,GAAG,IAAhB;AACA,QAAIC,SAAS,GAAG,IAAhB;;AACA,QAAIjB,UAAJ,EAAgB;AACdgB,MAAAA,SAAS,GAAG,MAAME,gBAAOC,cAAP,CAAsB;AAAEvB,QAAAA,IAAI,EAAEA,IAAI,CAACQ,GAAb;AAAkBgB,QAAAA,OAAO,EAAE;AAA3B,OAAtB,CAAlB;;AACA,UAAI,CAACJ,SAAD,IAAcpB,IAAlB,EAAwB;AACtBA,QAAAA,IAAI,CAACyB,IAAL,CAAUC,QAAV,GAAqB,CAArB;AACA1B,QAAAA,IAAI,CAACyB,IAAL,CAAUR,WAAV,GAAwB,CAAxB;AACAjB,QAAAA,IAAI,CAACyB,IAAL,CAAUE,cAAV,GAA2B,CAA3B;AACA,cAAM3B,IAAI,CAACyB,IAAL,CAAUG,IAAV,EAAN;AACD;;AACDP,MAAAA,SAAS,GAAG,MAAMC,gBAAOC,cAAP,CAAsB;AAAExB,QAAAA,MAAM,EAAEoB,QAAV;AAAoBK,QAAAA,OAAO,EAAE;AAA7B,OAAtB,CAAlB;;AACA,UAAI,CAACH,SAAD,IAActB,MAAlB,EAA0B;AACxBA,QAAAA,MAAM,CAACiB,SAAP,CAAiBU,QAAjB,GAA4B,CAA5B;AACA3B,QAAAA,MAAM,CAACiB,SAAP,CAAiBC,WAAjB,GAA+B,CAA/B;AACA,cAAMlB,MAAM,CAACiB,SAAP,CAAiBY,IAAjB,EAAN;AACD;;AACD,UAAI,CAACR,SAAD,IAAc,CAACC,SAAnB,EAA8B;AAC5B,eAAO;AAAEtB,UAAAA,MAAF;AAAUC,UAAAA;AAAV,SAAP;AACD;AACF;;AAED,UAAM6B,WAAW,GAAGpB,MAAM,CAACQ,WAAP,GAChBR,MAAM,CAACkB,cAAP,GAAwBlB,MAAM,CAACQ,WADf,GAEhB,CAFJ;AAIA,UAAMa,UAAU,GAAGrB,MAAM,CAACsB,MAAP,IAAiB,IAAIF,WAArB,IAAoC,CAAvD;AACA,UAAMG,YAAY,GAAGvB,MAAM,CAACsB,MAAP,GAAgBtB,MAAM,CAACwB,UAA5C;AACA,UAAMA,UAAU,GAAGD,YAAY,IAAI,IAAIH,WAAR,CAAZ,GAAmC,CAAtD;AAEA,UAAMK,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASzB,MAAT,CAAV;AACA,UAAM0B,IAAI,GAAIH,CAAC,GAAGJ,UAAL,GAAmBZ,KAAhC;AACA,UAAMoB,IAAI,GAAIJ,CAAC,GAAGD,UAAL,GAAmBf,KAAhC;AACA,UAAMqB,YAAY,GAAGF,IAAI,GAAG,CAA5B;;AAEA,QAAI1B,MAAM,IAAI,CAAd,EAAiB;AACf,UAAIP,UAAJ,EAAgB;AACd,YAAIL,MAAM,IAAIsB,SAAd,EAAyBtB,MAAM,CAACiB,SAAP,CAAiBC,WAAjB,IAAgCoB,IAAhC;AACzB,YAAIrC,IAAI,IAAIoB,SAAZ,EAAuBpB,IAAI,CAACyB,IAAL,CAAUR,WAAV,IAAyBqB,IAAzB;AACxB,OAHD,MAGO;AACL,YAAIvC,MAAJ,EAAYA,MAAM,CAACiB,SAAP,CAAiBC,WAAjB,IAAgCoB,IAAhC;AACZ,YAAIrC,IAAJ,EAAUA,IAAI,CAACyB,IAAL,CAAUR,WAAV,IAAyBqB,IAAzB;AACX;AACF,KARD,MAQO,IAAI3B,MAAM,GAAG,CAAb,EAAgB;AACrB,UAAIP,UAAJ,EAAgB;AACd,YAAIL,MAAM,IAAIsB,SAAd,EAAyB;AACvBtB,UAAAA,MAAM,CAACiB,SAAP,CAAiBC,WAAjB,IAAgCsB,YAAhC;AACD;;AACD,YAAIvC,IAAI,IAAIoB,SAAZ,EAAuBpB,IAAI,CAACyB,IAAL,CAAUE,cAAV,IAA4BW,IAA5B;AACxB,OALD,MAKO;AACL,YAAIvC,MAAJ,EAAYA,MAAM,CAACiB,SAAP,CAAiBC,WAAjB,IAAgCsB,YAAhC;AACZ,YAAIvC,IAAJ,EAAUA,IAAI,CAACyB,IAAL,CAAUE,cAAV,IAA4BW,IAA5B;AACX;AACF;;AAED,QAAIvC,MAAJ,EAAY;AACV,YAAMyC,EAAE,GAAGzC,MAAM,GAAGoC,IAAI,CAACM,GAAL,CAAS1C,MAAM,CAACiB,SAAP,CAAiBC,WAA1B,EAAuC,CAAvC,CAAH,GAA+C,CAAhE;AACAlB,MAAAA,MAAM,CAACiB,SAAP,CAAiBU,QAAjB,GAA4BS,IAAI,CAACO,GAAL,CAC1B,EAD0B,EAEzB,MAAMP,IAAI,CAACQ,GAAL,CAAS/B,CAAC,GAAG4B,EAAJ,GAAS,CAAlB,CAAP,GAA+BL,IAAI,CAACQ,GAAL,CAAS/B,CAAC,GAAGE,WAAJ,GAAkB,CAA3B,CAFL,CAA5B;AAID;;AAED,QAAId,IAAJ,EAAU;AACR,YAAM4C,KAAK,GAAGT,IAAI,CAACM,GAAL,CAASzC,IAAI,CAACyB,IAAL,CAAUR,WAAnB,EAAgC,CAAhC,CAAd;AACA,YAAM4B,QAAQ,GAAGV,IAAI,CAACM,GAAL,CAASzC,IAAI,CAACyB,IAAL,CAAUE,cAAV,IAA4B,CAArC,EAAwC,CAAxC,CAAjB;AAEA,YAAMmB,QAAQ,GAAGX,IAAI,CAACO,GAAL,CACf,GADe,EAEd,MAAMP,IAAI,CAACQ,GAAL,CAAS/B,CAAC,GAAGgC,KAAJ,GAAY,CAArB,CAAP,GAAkCT,IAAI,CAACQ,GAAL,CAAS/B,CAAC,GAAGG,WAAJ,GAAkB,CAA3B,CAFnB,CAAjB;AAIA,YAAMgC,WAAW,GAAGZ,IAAI,CAACO,GAAL,CAClB,GADkB,EAEjB,MAAMP,IAAI,CAACQ,GAAL,CAAS/B,CAAC,GAAGiC,QAAJ,GAAe,CAAxB,CAAP,GAAqCV,IAAI,CAACQ,GAAL,CAAS/B,CAAC,GAAGG,WAAJ,GAAkB,CAA3B,CAFnB,CAApB;AAKAf,MAAAA,IAAI,CAACyB,IAAL,CAAUC,QAAV,GAAqBoB,QAAQ,GAAGC,WAAhC;AACA,YAAM/C,IAAI,CAACgD,UAAL,CAAgB;AAAE9C,QAAAA;AAAF,OAAhB,CAAN;AACD;;AAED,UAAM+C,OAAO,CAACC,GAAR,CAAY,CAChBlD,IAAI,GAAGA,IAAI,CAACyB,IAAL,CAAUG,IAAV,EAAH,GAAsB,IADV,EAEhB7B,MAAM,GAAGA,MAAM,CAACiB,SAAP,CAAiBY,IAAjB,EAAH,GAA6B,IAFnB,CAAZ,CAAN;AAKA,WAAO;AAAE7B,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAP;AACD,GA/GD,CA+GE,OAAOmD,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACT,GAAR,CAAY,yBAAZ,EAAuCQ,GAAvC,EADY,CACiC;;AAC7C,WAAO,IAAP;AACD;AACF","sourcesContent":["import Invest from 'server/api/invest/invest.model';\nimport CommunityMember from 'server/api/community/community.member.model';\nimport Community from 'server/api/community/community.model';\n\nexport default async function computeApproxPageRank({\n  author,\n  post,\n  user,\n  communityId,\n  vote,\n  undoInvest\n}) {\n  try {\n    const com = await Community.findOne(\n      { _id: communityId },\n      'maxUserRank maxPostRank numberOfElements'\n    );\n    const member = await CommunityMember.findOne({ communityId, user: user._id });\n\n    let amount;\n    if (vote) amount = vote.amount;\n    const N = com.numberOfElements;\n    const { maxUserRank, maxPostRank } = com;\n\n    // if user relevance object doesn't exist, there is nothing to update\n    if (!user.relevance || user.relevance.pagerankRaw <= 0) return { author, post };\n\n    const userR = user.relevance ? user.relevance.pagerankRaw : 0;\n    const authorId = author ? author._id : null;\n\n    if (author && !author.relevance) {\n      author.relevance = await CommunityMember.findOne({\n        user: author._id,\n        communityId\n      });\n    }\n\n    // Need a way to 0 out post votes and user votes\n    let postVotes = true;\n    let userVotes = true;\n    if (undoInvest) {\n      postVotes = await Invest.countDocuments({ post: post._id, ownPost: false });\n      if (!postVotes && post) {\n        post.data.pagerank = 0;\n        post.data.pagerankRaw = 0;\n        post.data.pagerankRawNeg = 0;\n        await post.data.save();\n      }\n      userVotes = await Invest.countDocuments({ author: authorId, ownPost: false });\n      if (!userVotes && author) {\n        author.relevance.pagerank = 0;\n        author.relevance.pagerankRaw = 0;\n        await author.relevance.save();\n      }\n      if (!postVotes && !userVotes) {\n        return { author, post };\n      }\n    }\n\n    const negPosRatio = member.pagerankRaw\n      ? member.pagerankRawNeg / member.pagerankRaw\n      : 0;\n\n    const userDegree = member.degree * (1 + negPosRatio) + 1;\n    const mergedDegree = member.degree + member.postDegree;\n    const postDegree = mergedDegree * (1 + negPosRatio) + 1;\n\n    const a = Math.abs(amount);\n    const uInc = (a / userDegree) * userR;\n    const pInc = (a / postDegree) * userR;\n    const uDownvoteInc = uInc / 3;\n\n    if (amount >= 0) {\n      if (undoInvest) {\n        if (author && userVotes) author.relevance.pagerankRaw -= uInc;\n        if (post && postVotes) post.data.pagerankRaw -= pInc;\n      } else {\n        if (author) author.relevance.pagerankRaw += uInc;\n        if (post) post.data.pagerankRaw += pInc;\n      }\n    } else if (amount < 0) {\n      if (undoInvest) {\n        if (author && userVotes) {\n          author.relevance.pagerankRaw += uDownvoteInc;\n        }\n        if (post && postVotes) post.data.pagerankRawNeg -= pInc;\n      } else {\n        if (author) author.relevance.pagerankRaw -= uDownvoteInc;\n        if (post) post.data.pagerankRawNeg += pInc;\n      }\n    }\n\n    if (author) {\n      const rA = author ? Math.max(author.relevance.pagerankRaw, 0) : 0;\n      author.relevance.pagerank = Math.min(\n        99,\n        (100 * Math.log(N * rA + 1)) / Math.log(N * maxUserRank + 1)\n      );\n    }\n\n    if (post) {\n      const pRank = Math.max(post.data.pagerankRaw, 0);\n      const pRankNeg = Math.max(post.data.pagerankRawNeg || 0, 0);\n\n      const normRank = Math.min(\n        100,\n        (100 * Math.log(N * pRank + 1)) / Math.log(N * maxPostRank + 1)\n      );\n      const normRankNeg = Math.min(\n        100,\n        (100 * Math.log(N * pRankNeg + 1)) / Math.log(N * maxPostRank + 1)\n      );\n\n      post.data.pagerank = normRank - normRankNeg;\n      await post.updateRank({ communityId });\n    }\n\n    await Promise.all([\n      post ? post.data.save() : null,\n      author ? author.relevance.save() : null\n    ]);\n\n    return { author, post };\n  } catch (err) {\n    console.log('page rank approx error ', err); // eslint-disable-line\n    return null;\n  }\n}\n"],"file":"computeApproxPageRank.js"}