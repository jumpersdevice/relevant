{"version":3,"sources":["../../src/pagerank/pagerank.js"],"names":["pagerank","nodes","params","alpha","personalization","max_iter","tol","weight","negative","beta","M","debug","now","Date","g","N","dictionary","danglingNodes","degreeStore","p","setupTrustSeed","danglingWeights","danglingConsumer","initDanglingWeights","dangling","x","initialRank","console","log","getTime","iter","err","runLoop","elapsed","formatOutput","warn","iter_max","Object","keys","length","Array","fill","degree","reduce","prev","key","forEach","j","inputs","danglingVector","sum","i","node","undefined","start","loopParams","xlast","danglesum","upvotes","next","el","Math","abs","heapUsed","process","memoryUsage","mb","round","result","rank"],"mappings":"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","sourcesContent":["// The PageTrust algorithm\n/* eslint no-console: 0 */\nimport initMatrix from './initMatrix';\n\nexport default function pagerank(nodes, params) {\n  if (!params) params = {};\n  if (!params.alpha) params.alpha = 0.95;\n  if (!params.personalization) params.personalization = null;\n  if (!params.max_iter) params.max_iter = 500;\n  if (!params.tol) params.tol = 1.0e-6;\n  if (!params.weight) params.weight = 'weight';\n  if (!params.negative) params.negative = 'negative';\n  if (!params.beta) params.beta = 2;\n  if (!params.M) params.M = 1;\n  if (!params.debug) params.debug = false;\n\n  const now = new Date();\n  const { g, N, dictionary, danglingNodes, degreeStore, personalization } = initMatrix(\n    nodes,\n    params\n  );\n  const p = setupTrustSeed({ personalization, N, dictionary, g });\n  const danglingWeights = dictionary.danglingConsumer\n    ? []\n    : initDanglingWeights(params.dangling, p, N);\n  let x = initialRank({ params, dictionary, nodes, N });\n\n  params.debug &&\n    console.log('matrix setup time ', (new Date().getTime() - now) / 1000 + 's');\n\n  let iter;\n  let err;\n\n  for (iter = 0; iter < params.max_iter; iter++) {\n    // this enables garbage collector to free up memory between iterations\n    ({ x, err } = runLoop(\n      {\n        x,\n        p,\n        g,\n        N,\n        danglingNodes,\n        danglingWeights\n      },\n      params\n    ));\n\n    if (err < N * params.tol && iter > 1) {\n      params.debug && console.log('iterations ', iter);\n      params.debug && console.log(err);\n      const elapsed = new Date().getTime() - now.getTime();\n      params.debug && console.log('elapsed time: ', elapsed / 1000, 's');\n      return formatOutput(x, dictionary, nodes, params, degreeStore);\n    }\n  }\n\n  console.warn(\n    'pagerank: power iteration failed to converge in ' + params.iter_max + ' iterations.'\n  );\n  return formatOutput(x, dictionary, nodes, params, degreeStore);\n}\n\nfunction setupTrustSeed({ N, dictionary, g, personalization }) {\n  // if we don't have a personalization vector, initial trust gets spread over all nodes\n  if (!personalization || !Object.keys(personalization).length)\n    return new Array(N).fill(1.0 / N);\n\n  const p = new Array(N).fill(0);\n  const keys = Object.keys(personalization);\n  const degree = keys.reduce((prev, key) => prev + personalization[key], 0);\n  keys.forEach(key => {\n    p[dictionary[key]] = personalization[key] / degree;\n    for (let j = 0; j < N; j++) {\n      if (!g[dictionary[key]]) g[dictionary[key]] = { inputs: {} };\n      if (!g[dictionary[key]].inputs[j]) g[dictionary[key]].inputs[j] = 0;\n    }\n  });\n  return p;\n}\n\nfunction initDanglingWeights(danglingVector, p) {\n  // TODO use a node to direct dangling nodes\n  return danglingVector || p;\n  // return new Array(N).fill(1.0 / N);\n}\n\nfunction initialRank({ nodes, params, dictionary, N }) {\n  const x = new Array(N).fill(0);\n\n  let sum = 0;\n  Object.keys(nodes).forEach(key => {\n    const i = dictionary[key];\n    const node = nodes[key];\n    if (i === undefined || !node) return;\n    x[i] = node.start || 0;\n    sum += x[i];\n  });\n  params.debug && console.log('start sum ', sum);\n  return x;\n}\n\nfunction runLoop(loopParams, params) {\n  let { x } = loopParams;\n  const { p, g, N, danglingNodes, danglingWeights } = loopParams;\n\n  const xlast = [...x];\n  x = new Array(N).fill(0);\n\n  let danglesum = 0;\n  danglingNodes.forEach(node => (danglesum += xlast[node]));\n  danglesum *= params.alpha;\n\n  // Iterate through nodes;\n  for (let i = 0; i < N; i++) {\n    const upvotes = g[i] ? Object.keys(g[i].inputs) || [] : [];\n    for (let key = 0; key < upvotes.length; key++) {\n      const j = upvotes[key];\n      x[i] += params.alpha * g[i].inputs[j] * xlast[j];\n    }\n\n    // random jump to the seed vector\n    x[i] += (1.0 - params.alpha) * p[i];\n\n    // add the weights from dangling nodes to make sure sum is 1\n    x[i] += danglesum * (danglingWeights[i] || 0);\n  }\n\n  // normalize\n  const sum = x.reduce((prev, next) => prev + next, 0);\n  let err = 0.0;\n  x.forEach((el, i) => {\n    el /= sum || 1;\n    err += Math.abs(el - xlast[i]);\n    return el;\n  });\n\n  if (params.debug) {\n    console.log('sum', sum);\n    const { heapUsed } = process.memoryUsage();\n    const mb = Math.round((100 * heapUsed) / 1048576) / 100;\n    console.log('Iter - program is using', mb, 'MB of Heap.');\n  }\n\n  return { x, err };\n}\n\nfunction formatOutput(x, dictionary, nodes, params, degreeStore) {\n  const result = {};\n  Object.keys(nodes).forEach(\n    (node, i) => (result[node] = { rank: x[i], degree: degreeStore[node] })\n  );\n  return result;\n}\n"],"file":"pagerank.js"}