{"version":3,"sources":["../../../src/auth/reddit/passport.js"],"names":["passport","require","RedditStrategy","Strategy","config","User","Invite","use","clientID","reddit","clientSecret","callbackURL","passReqToCallback","req","accessToken","refreshToken","profile","done","redditAuth","query","queryString","parse","state","invitecode","user","handleAuth","err","Error","isConnectAccount","alreadyInUse","isConnectedToDifferentUser","findOne","redditId","_json","id","isNewUser","handle","name","extraRewards","Math","round","log10","comment_karma","addNewRedditUser","addRedditProfile","addReward","type","processInvite","console","log","save","_id","$ne","handleExists","random","toString","substr","role","provider","redditUser","image","icon_img","length","updateMeta"],"mappings":"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","sourcesContent":["import queryString from 'query-string';\nimport { handleAdminInvite } from 'server/api/invites/invite.controller';\n\nconst passport = require('passport');\nconst RedditStrategy = require('passport-reddit').Strategy;\nconst config = require('../../config/config');\nconst User = require('../../api/user/user.model');\nconst Invite = require('../../api/invites/invite.model');\n\n// User.find({ 'reddit.id': { $exists: true } })\n// .remove()\n// .exec();\n\n// User.findOne({ 'reddit.id': { $exists: true } }, '+reddit')\n// .then(async user => {\n//   user.redditId = null;\n//   user.reddit = null;\n//   await user.save();\n// });\n\npassport.use(\n  new RedditStrategy(\n    {\n      clientID: config.reddit.clientID,\n      clientSecret: config.reddit.clientSecret,\n      callbackURL: config.reddit.callbackURL,\n      passReqToCallback: true\n    },\n    async (req, accessToken, refreshToken, profile, done) => {\n      try {\n        const redditAuth = { accessToken, refreshToken };\n        req.query = queryString.parse(req.query.state);\n        const { invitecode } = req.query;\n        const user = await handleAuth({ req, redditAuth, profile, invitecode });\n        return done(null, user);\n      } catch (err) {\n        return done(err);\n      }\n    }\n  )\n);\n\nexport async function handleAuth({ req, redditAuth, profile, invitecode }) {\n  if (!profile) throw new Error('missing reddit profile');\n\n  let { user } = req;\n\n  const isConnectAccount = user || false;\n  const alreadyInUse =\n    isConnectAccount && (await isConnectedToDifferentUser({ user, profile }));\n\n  if (alreadyInUse) {\n    throw new Error('A user with this reddit account already exists');\n  }\n\n  if (!isConnectAccount) user = await User.findOne({ redditId: profile._json.id });\n\n  const isNewUser = !user || false;\n\n  const handle = profile._json.name;\n  if (isNewUser) {\n    const extraRewards = Math.round(Math.log10(profile._json.comment_karma || 1) * 10);\n    user = await addNewRedditUser({ handle });\n    user = await addRedditProfile({ profile, user, redditAuth });\n    user = await user.addReward({ type: 'reddit', extraRewards });\n    if (invitecode && invitecode !== 'undefined') {\n      user = await Invite.processInvite({ invitecode, user });\n    }\n  } else if (!user.redditId) {\n    user = await addRedditProfile({ profile, user, redditAuth });\n    user = await user.addReward({ type: 'reddit' });\n  }\n\n  if (!isNewUser && invitecode && invitecode !== 'undefined') {\n    try {\n      user = await handleAdminInvite({ invitecode, user });\n    } catch (err) {\n      console.log(err); // eslint-disable-line\n    }\n  }\n\n  return user.save();\n}\n\nasync function isConnectedToDifferentUser({ user, profile }) {\n  return User.findOne({ redditId: profile._json.id, _id: { $ne: user._id } });\n}\n\nexport async function addNewRedditUser({ handle }) {\n  const handleExists = await User.findOne({ handle });\n  if (handleExists) {\n    handle += Math.random()\n      .toString(36)\n      .substr(2, 3);\n  }\n\n  const user = new User({\n    role: 'temp',\n    handle,\n    provider: 'reddit'\n  });\n  return user.save();\n}\n\nexport async function addRedditProfile({ profile, redditAuth, user }) {\n  const redditUser = profile._json;\n  const image = redditUser.icon_img;\n\n  if (!user.image || !user.image.length) {\n    user.image = image;\n    // update existing posts\n    await user.updateMeta();\n  }\n  if (!user.name) user.name = redditUser.name;\n\n  user.reddit = redditUser;\n  user.redditId = redditUser.id;\n\n  user.redditAuth = redditAuth;\n  return user.save();\n}\n"],"file":"passport.js"}