{"version":3,"sources":["../../../src/auth/local/index.js"],"names":["express","require","passport","auth","twitter","router","Router","post","req","res","next","authenticate","err","user","info","error","status","json","message","body","profile","getProfile","addTwitterProfile","twitterAuth","toObject","twitterAuthToken","hashedPassword","salt","token","signToken","_id","role","universalCookies","set","module","exports"],"mappings":";;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,IAAI,GAAGF,OAAO,mBAApB;;AACA,MAAMG,OAAO,GAAGH,OAAO,uBAAvB;;AAEA,MAAMI,MAAM,GAAGL,OAAO,CAACM,MAAR,EAAf;AAEAD,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACnCR,EAAAA,QAAQ,CAACS,YAAT,CAAsB,OAAtB,EAA+B,OAAOC,GAAP,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;AACxD,QAAI;AACF,YAAMC,KAAK,GAAGH,GAAG,IAAIE,IAArB;AACA,UAAIC,KAAJ,EAAW,OAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,KAArB,CAAP;;AACX,UAAI,CAACF,IAAL,EAAW;AACT,eAAOJ,GAAG,CACPO,MADI,CACG,GADH,EAEJC,IAFI,CAEC;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAFD,CAAP;AAGD;;AAED,UAAIV,GAAG,CAACW,IAAJ,CAASf,OAAb,EAAsB;AACpB,cAAMgB,OAAO,GAAG,MAAMhB,OAAO,CAACiB,UAAR,CAAmBb,GAAG,CAACW,IAAJ,CAASf,OAA5B,CAAtB;AACA,cAAMA,OAAO,CAACkB,iBAAR,CAA0B;AAC9BT,UAAAA,IAD8B;AAE9BO,UAAAA,OAF8B;AAG9BG,UAAAA,WAAW,EAAEf,GAAG,CAACW,IAAJ,CAASf;AAHQ,SAA1B,CAAN;AAKD;;AAEDS,MAAAA,IAAI,GAAGA,IAAI,CAACW,QAAL,EAAP;AACA,aAAOX,IAAI,CAACY,gBAAZ;AACA,aAAOZ,IAAI,CAACa,cAAZ;AACA,aAAOb,IAAI,CAACc,IAAZ;AACA,aAAOd,IAAI,CAACT,OAAZ;AAEA,YAAMwB,KAAK,GAAGzB,IAAI,CAAC0B,SAAL,CAAehB,IAAI,CAACiB,GAApB,EAAyBjB,IAAI,CAACkB,IAA9B,CAAd;AACAvB,MAAAA,GAAG,CAACwB,gBAAJ,CAAqBC,GAArB,CAAyB,OAAzB,EAAkCL,KAAlC;AAEA,aAAOnB,GAAG,CAACQ,IAAJ,CAAS;AAAEW,QAAAA;AAAF,OAAT,CAAP;AACD,KA5BD,CA4BE,OAAOb,KAAP,EAAc;AACd,aAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB,CAAP;AACD;AACF,GAhCD,EAgCGV,GAhCH,EAgCQC,GAhCR,EAgCaC,IAhCb;AAiCD,CAlCD;AAoCAwB,MAAM,CAACC,OAAP,GAAiB9B,MAAjB","sourcesContent":["const express = require('express');\nconst passport = require('passport');\nconst auth = require('../auth.service');\nconst twitter = require('../twitter/passport');\n\nconst router = express.Router();\n\nrouter.post('/', (req, res, next) => {\n  passport.authenticate('local', async (err, user, info) => {\n    try {\n      const error = err || info;\n      if (error) return res.status(401).json(error);\n      if (!user) {\n        return res\n          .status(404)\n          .json({ message: 'Something went wrong, please try again.' });\n      }\n\n      if (req.body.twitter) {\n        const profile = await twitter.getProfile(req.body.twitter);\n        await twitter.addTwitterProfile({\n          user,\n          profile,\n          twitterAuth: req.body.twitter\n        });\n      }\n\n      user = user.toObject();\n      delete user.twitterAuthToken;\n      delete user.hashedPassword;\n      delete user.salt;\n      delete user.twitter;\n\n      const token = auth.signToken(user._id, user.role);\n      req.universalCookies.set('token', token);\n\n      return res.json({ token });\n    } catch (error) {\n      return res.status(404).json({ message: 'Something went wrong, please try again.' });\n    }\n  })(req, res, next);\n});\n\nmodule.exports = router;\n"],"file":"index.js"}