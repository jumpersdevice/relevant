{"version":3,"sources":["../../../src/api/token/token.model.js"],"names":["mongoose","require","Schema","AuthTokenSchema","user","type","Types","ObjectId","ref","index","revokeBefore","Number","timestamps","statics","revoke","_id","now","Date","Math","floor","getTime","revokeToken","save","checkRevoked","iat","findOne","$gte","module","exports","model"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AAEA,MAAMG,eAAe,GAAG,IAAID,MAAJ,CACtB;AACEE,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAEH,MAAM,CAACI,KAAP,CAAaC,QAArB;AAA+BC,IAAAA,GAAG,EAAE,MAApC;AAA4CC,IAAAA,KAAK,EAAE;AAAnD,GADR;AAEEC,EAAAA,YAAY,EAAEC;AAFhB,CADsB,EAKtB;AACEC,EAAAA,UAAU,EAAE;AADd,CALsB,CAAxB;;AAUAT,eAAe,CAACU,OAAhB,CAAwBC,MAAxB,GAAiC,eAAeA,MAAf,CAAsBC,GAAtB,EAA2B;AAC1D,QAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAMP,YAAY,GAAGQ,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACI,OAAJ,KAAgB,IAA3B,CAArB;AACA,QAAMC,WAAW,GAAG,IAAI,IAAJ,CAAS;AAAEjB,IAAAA,IAAI,EAAEW,GAAR;AAAaL,IAAAA;AAAb,GAAT,CAApB;AACA,SAAOW,WAAW,CAACC,IAAZ,EAAP;AACD,CALD;;AAOAnB,eAAe,CAACU,OAAhB,CAAwBU,YAAxB,GAAuC,eAAeA,YAAf,CAA4B;AAAER,EAAAA,GAAF;AAAOS,EAAAA;AAAP,CAA5B,EAA0C;AAC/E,SAAO,KAAKC,OAAL,CAAa;AAAErB,IAAAA,IAAI,EAAEW,GAAR;AAAaL,IAAAA,YAAY,EAAE;AAAEgB,MAAAA,IAAI,EAAEF;AAAR;AAA3B,GAAb,CAAP;AACD,CAFD;;AAIAG,MAAM,CAACC,OAAP,GAAiB5B,QAAQ,CAAC6B,KAAT,CAAe,WAAf,EAA4B1B,eAA5B,CAAjB","sourcesContent":["const mongoose = require('mongoose');\n\nconst { Schema } = mongoose;\n\nconst AuthTokenSchema = new Schema(\n  {\n    user: { type: Schema.Types.ObjectId, ref: 'User', index: true },\n    revokeBefore: Number\n  },\n  {\n    timestamps: true\n  }\n);\n\nAuthTokenSchema.statics.revoke = async function revoke(_id) {\n  const now = new Date();\n  const revokeBefore = Math.floor(now.getTime() / 1000);\n  const revokeToken = new this({ user: _id, revokeBefore });\n  return revokeToken.save();\n};\n\nAuthTokenSchema.statics.checkRevoked = async function checkRevoked({ _id, iat }) {\n  return this.findOne({ user: _id, revokeBefore: { $gte: iat } });\n};\n\nmodule.exports = mongoose.model('AuthToken', AuthTokenSchema);\n"],"file":"token.model.js"}