{"version":3,"sources":["../../../src/api/post/link.model.js"],"names":["mongoose","require","Schema","MetaPostSchema","title","String","description","image","url","type","index","shortText","longText","articleDate","Date","articleAuthor","copyright","links","text","href","publisher","domain","keywords","tags","ref","categories","flagged","Boolean","default","flaggedBy","select","flaggedTime","timestamps","rank","latestPost","module","exports","model"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB,C,CAEA;;AACA,MAAMG,cAAc,GAAG,IAAID,MAAJ,CACrB;AACEE,EAAAA,KAAK,EAAEC,MADT;AAEEC,EAAAA,WAAW,EAAED,MAFf;AAGEE,EAAAA,KAAK,EAAEF,MAHT;AAIEG,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAEJ,MAAR;AAAgBK,IAAAA,KAAK,EAAE;AAAvB,GAJP;AAMEC,EAAAA,SAAS,EAAE;AAAEF,IAAAA,IAAI,EAAEJ;AAAR,GANb;AAOEO,EAAAA,QAAQ,EAAE;AAAEH,IAAAA,IAAI,EAAEJ;AAAR,GAPZ;AAQEQ,EAAAA,WAAW,EAAEC,IARf;AASEC,EAAAA,aAAa,EAAE,CAACV,MAAD,CATjB;AAUEW,EAAAA,SAAS,EAAEX,MAVb;AAWEY,EAAAA,KAAK,EAAE,CACL;AACEC,IAAAA,IAAI,EAAEb,MADR;AAEEc,IAAAA,IAAI,EAAEd;AAFR,GADK,CAXT;AAiBEe,EAAAA,SAAS,EAAEf,MAjBb;AAkBEgB,EAAAA,MAAM,EAAEhB,MAlBV;AAmBEiB,EAAAA,QAAQ,EAAE,CAACjB,MAAD,CAnBZ;AAqBEkB,EAAAA,IAAI,EAAE,CAAC;AAAEd,IAAAA,IAAI,EAAEJ,MAAR;AAAgBmB,IAAAA,GAAG,EAAE;AAArB,GAAD,CArBR;AAsBE;AACAC,EAAAA,UAAU,EAAE,CAAC;AAAEhB,IAAAA,IAAI,EAAEJ,MAAR;AAAgBmB,IAAAA,GAAG,EAAE;AAArB,GAAD,CAvBd;AAyBEE,EAAAA,OAAO,EAAE;AAAEjB,IAAAA,IAAI,EAAEkB,OAAR;AAAiBC,IAAAA,OAAO,EAAE;AAA1B,GAzBX;AA0BEC,EAAAA,SAAS,EAAE,CAAC;AAAEpB,IAAAA,IAAI,EAAEJ,MAAR;AAAgBmB,IAAAA,GAAG,EAAE,MAArB;AAA6BM,IAAAA,MAAM,EAAE;AAArC,GAAD,CA1Bb;AA2BEC,EAAAA,WAAW,EAAEjB;AA3Bf,CADqB,EA8BrB;AACEkB,EAAAA,UAAU,EAAE;AADd,CA9BqB,CAAvB;AAmCA7B,cAAc,CAACO,KAAf,CAAqB;AAAEF,EAAAA,GAAG,EAAE;AAAP,CAArB;AACAL,cAAc,CAACO,KAAf,CAAqB;AAAEuB,EAAAA,IAAI,EAAE;AAAR,CAArB;AACA9B,cAAc,CAACO,KAAf,CAAqB;AAAEwB,EAAAA,UAAU,EAAE;AAAd,CAArB;AACA/B,cAAc,CAACO,KAAf,CAAqB;AAAEwB,EAAAA,UAAU,EAAE,CAAd;AAAiBX,EAAAA,IAAI,EAAE;AAAvB,CAArB;AACApB,cAAc,CAACO,KAAf,CAAqB;AAAEuB,EAAAA,IAAI,EAAE,CAAR;AAAWV,EAAAA,IAAI,EAAE;AAAjB,CAArB;AAEAY,MAAM,CAACC,OAAP,GAAiBpC,QAAQ,CAACqC,KAAT,CAAe,UAAf,EAA2BlC,cAA3B,CAAjB","sourcesContent":["const mongoose = require('mongoose');\n\nconst { Schema } = mongoose;\n\n// TODO check for unused fields\nconst MetaPostSchema = new Schema(\n  {\n    title: String,\n    description: String,\n    image: String,\n    url: { type: String, index: true },\n\n    shortText: { type: String },\n    longText: { type: String },\n    articleDate: Date,\n    articleAuthor: [String],\n    copyright: String,\n    links: [\n      {\n        text: String,\n        href: String\n      }\n    ],\n    publisher: String,\n    domain: String,\n    keywords: [String],\n\n    tags: [{ type: String, ref: 'Tag' }],\n    // DEPRECATED?\n    categories: [{ type: String, ref: 'Tag' }],\n\n    flagged: { type: Boolean, default: false },\n    flaggedBy: [{ type: String, ref: 'User', select: false }],\n    flaggedTime: Date\n  },\n  {\n    timestamps: true\n  }\n);\n\nMetaPostSchema.index({ url: 1 });\nMetaPostSchema.index({ rank: 1 });\nMetaPostSchema.index({ latestPost: 1 });\nMetaPostSchema.index({ latestPost: 1, tags: 1 });\nMetaPostSchema.index({ rank: 1, tags: 1 });\n\nmodule.exports = mongoose.model('MetaPost', MetaPostSchema);\n"],"file":"link.model.js"}