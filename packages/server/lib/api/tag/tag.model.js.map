{"version":3,"sources":["../../../src/api/tag/tag.model.js"],"names":["mongoose","require","Schema","TagSchema","_id","type","String","trim","parents","ref","categoryName","category","Boolean","index","default","count","Number","active","emoji","children","main","communityId","timestamps","rank","createdAt","module","exports","model"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaF,QAAnB;AAEA,MAAMG,SAAS,GAAG,IAAID,MAAJ,CAChB;AACEE,EAAAA,GAAG,EAAE;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GADP;AAEEC,EAAAA,OAAO,EAAE,CAAC;AAAEH,IAAAA,IAAI,EAAEC,MAAR;AAAgBG,IAAAA,GAAG,EAAE;AAArB,GAAD,CAFX;AAGEC,EAAAA,YAAY,EAAE;AAAEL,IAAAA,IAAI,EAAEC;AAAR,GAHhB;AAIEK,EAAAA,QAAQ,EAAE;AAAEN,IAAAA,IAAI,EAAEO,OAAR;AAAiBC,IAAAA,KAAK,EAAE,IAAxB;AAA8BC,IAAAA,OAAO,EAAE;AAAvC,GAJZ;AAKEC,EAAAA,KAAK,EAAE;AAAEV,IAAAA,IAAI,EAAEW,MAAR;AAAgBF,IAAAA,OAAO,EAAE;AAAzB,GALT;AAMEG,EAAAA,MAAM,EAAE;AAAEZ,IAAAA,IAAI,EAAEO,OAAR;AAAiBE,IAAAA,OAAO,EAAE,IAA1B;AAAgCD,IAAAA,KAAK,EAAE;AAAvC,GANV;AAOEK,EAAAA,KAAK,EAAEZ,MAPT;AAQEa,EAAAA,QAAQ,EAAE,CAAC;AAAEd,IAAAA,IAAI,EAAEC,MAAR;AAAgBG,IAAAA,GAAG,EAAE;AAArB,GAAD,CARZ;AASEW,EAAAA,IAAI,EAAE,CAAC;AAAEf,IAAAA,IAAI,EAAEC,MAAR;AAAgBG,IAAAA,GAAG,EAAE;AAArB,GAAD,CATR;AAUEY,EAAAA,WAAW,EAAE;AAAEhB,IAAAA,IAAI,EAAEC,MAAR;AAAgBG,IAAAA,GAAG,EAAE;AAArB;AAVf,CADgB,EAahB;AACEa,EAAAA,UAAU,EAAE;AADd,CAbgB,CAAlB;AAkBAnB,SAAS,CAACU,KAAV,CAAgB;AAAEU,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,SAAS,EAAE;AAAtB,CAAhB;AAEAC,MAAM,CAACC,OAAP,GAAiB1B,QAAQ,CAAC2B,KAAT,CAAe,KAAf,EAAsBxB,SAAtB,CAAjB","sourcesContent":["const mongoose = require('mongoose');\n\nconst { Schema } = mongoose;\n\nconst TagSchema = new Schema(\n  {\n    _id: { type: String, trim: true },\n    parents: [{ type: String, ref: 'Tag' }],\n    categoryName: { type: String },\n    category: { type: Boolean, index: true, default: false },\n    count: { type: Number, default: 0 },\n    active: { type: Boolean, default: true, index: true },\n    emoji: String,\n    children: [{ type: String, ref: 'Tag' }],\n    main: [{ type: String, ref: 'Tag' }],\n    communityId: { type: String, ref: 'Community' }\n  },\n  {\n    timestamps: true\n  }\n);\n\nTagSchema.index({ rank: 1, createdAt: 1 });\n\nmodule.exports = mongoose.model('Tag', TagSchema);\n"],"file":"tag.model.js"}