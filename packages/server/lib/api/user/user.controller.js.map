{"version":3,"sources":["../../../src/api/user/user.controller.js"],"names":["sigUtil","require","sendConfirmation","user","newUser","text","confirmUrl","process","env","API_SERVER","handle","confirmCode","data","from","to","email","subject","html","sendResetEmail","queryString","resetUrl","resetPasswordToken","exports","forgot","req","res","next","urlParts","url","parse","search","string","body","test","query","$regex","$options","User","findOne","errorText","Error","rand","crypto","randomBytes","token","toString","resetPasswordExpires","Date","now","save","status","json","username","err","confirm","middleware","params","code","confirmed","addReward","type","sendConfirmationCode","webOnboard","step","path","findOneAndUpdate","$set","projection","new","then","catch","onboarding","resetPassword","password","success","changePassword","userId","_id","oldPass","String","oldPassword","newPass","newPassword","findById","authenticate","sendStatus","blocked","blockedBy","limit","name","RegExp","$and","$or","$nin","find","sort","parseInt","users","index","rank","checkUser","omitSelf","formatted","omit","$ne","userExists","testData","skip","community","pagerank","$gt","rel","CommunityMember","populate","select","list","map","r","toObject","u","relevance","create","invitecode","BANNED_USER_HANDLES","includes","usingWeb3","ethLogin","additionalFields","getEthFields","userObj","phone","image","provider","role","Invite","processInvite","initialCoins","hashedPassword","salt","signature","msg","profile","ethAddress","show","id","me","memberships","match","getSubscriptions","topTags","addr","tokenBalance","ethUtils","getBalance","updateClient","destroy","equals","deleteOne","updateComunity","succcess","updateHandle","used","usedEmail","updateMany","embeddedUser","multi","update","authUser","JSON","stringify","reqUser","updateImage","updateName","bio","deviceTokens","Post","block","userPromise","$addToSet","blockPromise","sub1","Subscription","deleteMany","following","follower","exec","sub2","feed1","Feed","feed2","results","Promise","all","unblock","$pull","updateUserTokenBalance","length","userBalance","updateUserNotifications","notificationSettings","subscription","newSettings","digest","findIndex","desktopSubscriptions","s","endpoint","keys","auth","p256dh","sig","acc","recovered","recoverTypedSignatureLegacy","toLowerCase","exists","cashOut","customAmount","address","nonce","getNonce","earning","userCashoutLog","Earnings","cashOutAttempt","cashedOut","reduce","a","e","cashOutAmt","maxClaim","CASHOUT_MAX","canClaim","Math","min","balance","airdropTokens","amount","Number","allocatedRewards","getParam","console","log","bnAmount","sign","earningId","authCallback","redirect"],"mappings":"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","sourcesContent":["import crypto from 'crypto-promise';\nimport uuid from 'uuid/v4';\n// import sigUtil from 'eth-sig-util';\nimport merge from 'lodash/merge';\nimport url from 'url';\n// eslint-disable-next-line import/named\nimport { signToken } from 'server/auth/auth.service';\nimport Invite from 'server/api/invites/invite.model';\nimport { sendEmail, addUserToEmailList, removeFromEmailList } from 'server/utils/mail';\nimport { BANNED_USER_HANDLES, CASHOUT_MAX } from 'server/config/globalConstants';\n// import { idUtils } from '3box';\nimport { verifyEthSignature } from 'server/auth/web3/passport';\nimport Earnings from 'server/api/earnings/earnings.model';\nimport User from './user.model';\nimport Post from '../post/post.model';\nimport CommunityMember from '../community/community.member.model';\nimport Subscription from '../subscription/subscription.model';\nimport Feed from '../feed/feed.model';\nimport * as ethUtils from '../../utils/ethereum';\nimport { logCashOut } from '../../utils/cashOut';\n\nconst sigUtil = require('eth-sig-util');\n\nasync function sendConfirmation(user, newUser) {\n  let text = '';\n  if (newUser) text = ', welcome to Relevant';\n  const confirmUrl = `${process.env.API_SERVER}/user/confirm/${user.handle}/${user.confirmCode}`;\n  const data = {\n    from: 'Relevant <info@relevant.community>',\n    to: user.email,\n    subject: 'Relevant Email Confirmation',\n    html: `\n        Hi @${user.handle}${text}!\n      <br />\n      <br />\n        Please click on the link below to confirm your email address:\n      <br />\n      <br />\n      <a href=\"${confirmUrl}\" target=\"_blank\">Confirm Email</a>\n      <br />\n      <br />\n      `\n  };\n  await sendEmail(data);\n\n  return { email: user.email };\n}\n\nasync function sendResetEmail(user, queryString) {\n  const resetUrl = `${process.env.API_SERVER}/user/resetPassword/${user.resetPasswordToken}${queryString}`;\n  const data = {\n    from: 'Relevant <info@relevant.community>',\n    to: user.email,\n    subject: 'Reset Relevant Password',\n    html: `\n      Hi, @${user.handle}\n      <br/><br/>\n      You are receiving this because you have requested the reset of the password for your account.<br />\n      Please click on the following link, or paste this into your browser to complete the process:<br/><br/>\n      ${resetUrl}<br/><br/>\n      If you did not request a password reset, please ignore this email and your password will remain unchanged.`\n  };\n  return sendEmail(data);\n}\n\nexports.forgot = async (req, res, next) => {\n  let email;\n  try {\n    const urlParts = url.parse(req.url, true);\n    const queryString = urlParts.search || '';\n    const string = req.body.user;\n\n    email = /^.+@.+\\..+$/.test(string);\n    const query = email\n      ? { email: { $regex: `^${string}$`, $options: 'i' } }\n      : { handle: { $regex: `^${string}$`, $options: 'i' } };\n    let user = await User.findOne(\n      query,\n      'resetPasswordToken resetPasswordExpires email handle'\n    );\n    if (!user) {\n      const errorText = email\n        ? 'No user with this email exists'\n        : \"Couldn't find user with this username\";\n      throw new Error(errorText);\n    }\n    const rand = await crypto.randomBytes(32);\n    const token = rand.toString('hex');\n    user.resetPasswordToken = token;\n    user.resetPasswordExpires = Date.now() + 3600000;\n    user = await user.save();\n    await sendResetEmail(user, queryString);\n    return res.status(200).json({ email: user.email, username: user.handle });\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.confirm = async (req, res, next) => {\n  try {\n    let user;\n    let middleware = false;\n    if (!req.params) req.params = {};\n    if (req.params.user) middleware = true;\n    const confirmCode = req.params.code || req.body.code;\n    const handle = req.params.user || req.body.user;\n    if (!handle || !confirmCode) throw new Error('Missing user id or confirmation token');\n    user = await User.findOne({ handle, confirmCode });\n    if (!user) throw new Error('Wrong confirmation code');\n    if (user.confirmed) throw new Error('Email is already confirmed.');\n    user.confirmed = true;\n    user = await user.addReward({ type: 'email' });\n    user = await user.save();\n    await addUserToEmailList(user);\n    req.confirmed = true;\n    return middleware ? next() : res.status(200).json(user);\n  } catch (err) {\n    return next();\n  }\n};\n\nexports.sendConfirmationCode = async (req, res, next) => {\n  try {\n    let user = await User.findOne(\n      { handle: req.user.handle },\n      'email confirmCode name handle'\n    );\n    user.confirmCode = uuid();\n    user = await user.save();\n    const status = await sendConfirmation(user);\n    return res.status(200).json(status);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.webOnboard = (req, res, next) => {\n  const { handle } = req.user;\n  const { step } = req.params;\n  const path = `webOnboard.${step}`;\n  User.findOneAndUpdate(\n    { handle },\n    { $set: { [path]: true } },\n    { projection: 'webOnboard', new: true }\n  )\n    .then(newUser => {\n      res.status(200).json(newUser);\n    })\n    .catch(next);\n};\n\nexports.onboarding = (req, res, next) => {\n  const { handle } = req.user;\n  const { step } = req.params;\n  User.findOneAndUpdate(\n    { handle },\n    { onboarding: step },\n    { projection: 'onboarding', new: true }\n  )\n    .then(newUser => {\n      res.status(200).json(newUser);\n    })\n    .catch(next);\n};\n\n/**\n * Reset password\n */\nexports.resetPassword = async (req, res, next) => {\n  try {\n    const { token, password } = req.body;\n    let { user } = req;\n    if (!token && !user) throw new Error('token missing');\n    if (!user) {\n      user = await User.findOne({ resetPasswordToken: token });\n      if (user && user.resetPasswordExpires > Date.now()) {\n        throw new Error('Password reset time has expired');\n      }\n    }\n    if (!user) throw new Error('No user found');\n    if (!user.onboarding) user.onboarding = 0;\n\n    user.password = password;\n    user = await user.save();\n    res.status(200).json({ success: true });\n  } catch (err) {\n    next(err);\n  }\n};\n\n/**\n * Change a users password\n */\nexports.changePassword = async (req, res, next) => {\n  try {\n    const userId = req.user._id;\n    const oldPass = String(req.body.oldPassword);\n    const newPass = String(req.body.newPassword);\n    const user = User.findById(userId);\n    if (user.authenticate(oldPass)) {\n      user.password = newPass;\n      await user.save();\n      return res.sendStatus(200);\n    }\n    throw new Error('incorrect password');\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.search = (req, res, next) => {\n  let blocked = [];\n  const { user } = req;\n  if (user) {\n    blocked = [...user.blocked, ...user.blockedBy];\n  }\n\n  const { search, limit } = req.query;\n  const name = new RegExp(search, 'i');\n  const query = {\n    $and: [{ $or: [{ name }, { handle: name }] }, { handle: { $nin: blocked } }]\n  };\n  User.find(query, 'handle name image')\n    .sort({ handle: 1 })\n    .limit(parseInt(limit, 10))\n    .then(users => {\n      res.json(200, users);\n    })\n    .catch(next);\n};\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexports.index = (req, res, next) => {\n  const { search } = req.query;\n  let query = {};\n  if (search) {\n    const name = new RegExp(req.query.name, 'i');\n    query = { name };\n  }\n\n  User.find(query, '-salt -hashedPassword')\n    .sort({ rank: -1 })\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(next);\n};\n\nexports.checkUser = async (req, res, next) => {\n  try {\n    const { name, email, omitSelf } = req.query;\n    const { user } = req;\n    let query = {};\n    let type;\n\n    if (name === 'everyone') {\n      return res.status(200).json({ type });\n    }\n    let formatted;\n    let omit;\n    if (user && omitSelf) {\n      omit = user.handle;\n    }\n\n    if (name) {\n      type = 'user';\n      formatted = '^' + name + '$';\n      query = {\n        ...query,\n        $and: [\n          { handle: { $regex: formatted, $options: 'i' } },\n          { handle: { $ne: omit } }\n        ]\n      };\n    } else if (email) {\n      formatted = '^' + email + '$';\n      type = 'email';\n      query = {\n        $and: [{ email: { $regex: formatted, $options: 'i' } }, { handle: { $ne: omit } }]\n      };\n    }\n\n    const userExists = await User.findOne(query, '_id handle');\n    if (userExists) return res.status(200).json(userExists);\n    return res.status(200).json(null);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.testData = async (req, res, next) => {\n  try {\n    const limit = parseInt(req.query.limit, 10) || 5;\n    const skip = parseInt(req.query.skip, 10) || 0;\n    const community = req.query.community || 'relevant';\n    const query = { community, pagerank: { $gt: 0 } };\n\n    const rel = await CommunityMember.find(\n      query,\n      'pagerank level community communityId pagerankRaw'\n    )\n      .limit(limit)\n      .skip(skip)\n      // .sort(sort)\n      .populate({\n        path: 'user',\n        select: 'handle name votePower image bio'\n      });\n\n    return res.status(200).json(rel);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.list = async (req, res, next) => {\n  try {\n    const { user } = req;\n    const limit = parseInt(req.query.limit, 10) || 5;\n    const skip = parseInt(req.query.skip, 10) || 0;\n\n    let blocked = [];\n    if (user) {\n      blocked = [...user.blocked, ...user.blockedBy];\n    }\n    const community = req.query.community || 'relevant';\n\n    const sort = { pagerank: -1 };\n    const query = { community, user: { $nin: blocked } };\n\n    const rel = await CommunityMember.find(query)\n      .limit(limit)\n      .skip(skip)\n      .sort(sort)\n      .populate({\n        path: 'user',\n        select: 'handle name image bio'\n      });\n\n    const users = rel.map(r => {\n      r = r.toObject();\n      if (!r.user) return null;\n      let u = { ...r.user }; // eslint-disable-line\n      u.relevance = {};\n      delete r.user;\n      u.relevance = r;\n      return u;\n    });\n\n    return res.status(200).json(users);\n  } catch (err) {\n    return next(err);\n  }\n};\n\n/**\n * Creates a new user\n */\nexports.create = async (req, res, next) => {\n  try {\n    const confirmCode = uuid();\n    let { user } = req.body;\n    const { invitecode } = req.body;\n\n    if (BANNED_USER_HANDLES.includes(user.name)) {\n      throw new Error('this username is taken');\n    }\n    if (!user.email) throw new Error('missing email');\n\n    const usingWeb3 = !!user.ethLogin;\n    const additionalFields = usingWeb3 ? await getEthFields(user) : {};\n\n    if (additionalFields.user) {\n      const token = signToken(additionalFields.user._id, 'user');\n      return res.status(200).json({ token, user: additionalFields.user });\n    }\n\n    const userObj = {\n      handle: user.name,\n      name: user.name,\n      phone: user.phone,\n      email: user.email,\n      password: user.password,\n      image: user.image,\n      provider: usingWeb3 ? 'web3' : 'local',\n      role: 'user',\n      relevance: 0,\n      confirmCode,\n      ...additionalFields\n    };\n\n    if (usingWeb3) delete userObj.password;\n\n    user = new User(userObj);\n    user = await user.save();\n\n    if (invitecode) user = await Invite.processInvite({ invitecode, user });\n    user = await user.initialCoins();\n\n    const token = signToken(user._id, 'user');\n    if (!user.confirmed) sendConfirmation(user, true);\n\n    user = await user.save();\n    user = user.toObject();\n    delete user.hashedPassword;\n    delete user.salt;\n    delete user.password;\n    return res.status(200).json({ token, user });\n  } catch (err) {\n    return next(err);\n  }\n};\n\nasync function getEthFields({ signature, msg, ...profile }) {\n  const ethLogin = verifyEthSignature({ signature, msg });\n  const user = await User.findOne({ ethLogin });\n  if (user) {\n    user.email = profile.email;\n    user.image = profile.image;\n    user.name = profile.name;\n    await user.save();\n    return { user };\n  }\n  return { ethLogin, ethAddress: [ethLogin] };\n}\n\n// async function processBoxFields(user) {\n//   const { signature, boxAddress, DID } = user;\n//   if (!signature || !boxAddress || !DID) throw new Error('Missing 3box parametrs');\n//   const claim = await idUtils.verifyClaim(signature, { auth: true });\n//   const { payload } = claim;\n//   const { exp, DID: claimDID, address } = payload;\n//   const claimExp = new Date(exp * 1000);\n//   if (claimExp < new Date()) throw new Error('Expired 3box signature');\n//   if (DID !== claimDID) throw new Error('Invalid 3box DID in signature');\n//   if (boxAddress !== address) throw new Error('Invalid Ethereum address in signature');\n//   const userExists = await User.findOne({ boxDID: DID });\n//   if (userExists) {\n//     userExists.email = user.email;\n//     userExists.image = user.image;\n//     userExists.name = user.name;\n//     await userExists.save();\n//     return { user: userExists };\n//   }\n//   return { boxDID: DID, boxAddress, confirmed: !!user.email };\n// }\n\n/**\n * Get a single user\n */\nexports.show = async function show(req, res, next) {\n  try {\n    let { user } = req;\n    let handle = req.params.id;\n\n    let me = null;\n    let memberships;\n    if (!handle && user) {\n      handle = user.handle;\n    }\n    if (user && user._id) {\n      memberships = await CommunityMember.find({ user: user._id });\n    }\n    me = user && user.handle === handle;\n    const community = req.query.community || 'relevant';\n\n    // don't show blocked user;\n    let blocked = [];\n    if (user) {\n      blocked = [...(user.blocked || []), ...(user.blockedBy || [])];\n      if (blocked.find(u => u === handle)) {\n        return res.status(200).json({});\n      }\n    }\n\n    const select = me ? '+email' : null;\n    user = await User.findOne({ handle }, select).populate({\n      path: 'relevance',\n      match: { community },\n      select: 'pagerank relevanceRecord community'\n    });\n\n    if (!user) throw new Error('no such user ', handle);\n    user = await user.getSubscriptions();\n\n    // topic relevance\n    const relevance = await CommunityMember.find({ user: user._id })\n      .sort('-relevance')\n      .limit(5);\n    const userObj = user.toObject();\n    userObj.topTags = relevance || [];\n\n    res.status(200).json({ ...userObj, memberships });\n\n    // update token balance based on ETH account\n    if (me) {\n      const addr = user.ethAddress[0];\n      const tokenBalance = addr ? await ethUtils.getBalance(user.ethAddress[0]) : 0;\n      if (user.tokenBalance !== tokenBalance) {\n        user.tokenBalance = tokenBalance;\n        user = await user.save();\n        await user.updateClient();\n      }\n    }\n    return null;\n  } catch (err) {\n    return next(err);\n  }\n};\n\n/**\n * Deletes a user\n * restriction: 'admin' or user\n */\nexports.destroy = async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    if (!req.user || !req.user.role === 'admin' || !req.user._id.equals(id)) {\n      throw new Error('no right to delete');\n    }\n    const user = await User.findOne({ _id: id });\n    await removeFromEmailList(user);\n    await User.deleteOne({ handle: req.params.id });\n    return res.sendStatus(204);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.updateComunity = async (req, res, next) => {\n  try {\n    const { user } = req;\n    if (!user) throw new Error('missing user');\n    const { community } = req.body;\n    user.community = community;\n    await user.save();\n    return res.status(200).json({ succcess: true });\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.updateHandle = async (req, res, next) => {\n  try {\n    let { user } = req;\n\n    if (user.role !== 'temp') throw new Error('Cannot change user handle');\n\n    const { handle, email } = req.body.user;\n    if (!handle) throw new Error('missing handle');\n\n    // make sure its not used\n    if (handle !== user.handle) {\n      const used = await User.findOne({ handle });\n      if (used) throw new Error('This handle is already taken');\n    }\n\n    if (email && email !== user.email) {\n      const usedEmail = await User.findOne({ _id: { $ne: user._id }, email });\n      if (usedEmail) throw new Error('This email is already in use');\n      user.email = email;\n\n      user.confirmCode = uuid();\n      user = await user.save();\n      await sendConfirmation(user, true);\n    }\n    user.handle = handle;\n    user.role = 'user';\n\n    await addUserToEmailList(user);\n\n    const newUser = {\n      name: user.name,\n      image: user.image,\n      handle: user.handle,\n      _id: user._id\n    };\n\n    await CommunityMember.updateMany(\n      { user: user._id },\n      { embeddedUser: newUser },\n      { multi: true }\n    );\n\n    user = await user.save();\n\n    return res.status(200).json(user);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.update = async (req, res, next) => {\n  try {\n    const { role } = req.user;\n    const authUser = JSON.stringify(req.user._id);\n    const reqUser = JSON.stringify(req.body._id);\n    let updateImage = false;\n    let updateName = false;\n    let user;\n\n    if (authUser !== reqUser && role !== 'admin') {\n      throw new Error('Not authorized to edit this user');\n    }\n    user = await User.findOne({ _id: req.body._id }, '-salt -hashedPassword -relevance');\n    if (!user) throw new Error('user not found');\n\n    if (user.name !== req.body.name) {\n      updateName = true;\n      user.name = req.body.name;\n    }\n    if (user.image !== req.body.image) {\n      updateImage = true;\n      user.image = req.body.image;\n    }\n\n    user.bio = typeof req.body.bio === 'string' ? req.body.bio : user.bio;\n    user.deviceTokens = req.body.deviceTokens;\n\n    if (role === 'admin') {\n      user.role = req.body.role;\n    }\n\n    user = await user.save();\n    user.updateClient();\n\n    if (updateName || updateImage) {\n      const newUser = {\n        name: user.name,\n        image: user.image,\n        handle: user.handle,\n        _id: user._id\n      };\n\n      // Do this on a separate thread?\n      await Post.updateMany(\n        { user: user._id },\n        { embeddedUser: newUser },\n        { multi: true }\n      );\n\n      await CommunityMember.updateMany(\n        { user: user._id },\n        { embeddedUser: newUser },\n        { multi: true }\n      );\n    }\n    return res.status(200).json(user);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.block = async (req, res, next) => {\n  try {\n    let { user } = req;\n    const { block } = req.body;\n\n    if (user._id === block) throw new Error(\"You can't block yourself!\");\n\n    const userPromise = User.findOneAndUpdate(\n      { _id: user._id },\n      { $addToSet: { blocked: block } },\n      { new: true }\n    );\n    const blockPromise = User.findOneAndUpdate(\n      { _id: block },\n      { $addToSet: { blockedBy: user._id } },\n      { new: true }\n    );\n\n    // clear any existing subscriptions\n    const sub1 = Subscription.deleteMany({ following: user._id, follower: block }).exec();\n    const sub2 = Subscription.deleteMany({ following: block, follower: user._id }).exec();\n    const feed1 = Feed.deleteMany({ userId: user._id, from: block }).exec();\n    const feed2 = Feed.deleteMany({ userId: block, from: user._id }).exec();\n\n    const results = await Promise.all([\n      userPromise,\n      blockPromise,\n      sub1,\n      sub2,\n      feed1,\n      feed2\n    ]);\n    user = results[0];\n    return res.status(200).json(user);\n  } catch (err) {\n    return next(err);\n  }\n};\n\nexports.unblock = async (req, res, next) => {\n  try {\n    let { user } = req;\n    let { block } = req.body;\n    user = await User.findOneAndUpdate(\n      { handle: user.handle },\n      { $pull: { blocked: block } },\n      { new: true }\n    );\n    block = await User.findOneAndUpdate(\n      { _id: block },\n      { $pull: { blockedBy: user._id } }\n    );\n    res.status(200).json(user);\n  } catch (err) {\n    next(res, err);\n  }\n};\n\nexports.blocked = async (req, res, next) => {\n  try {\n    let { user } = req;\n    user = await User.findOne({ _id: user._id }).populate('blocked');\n    res.status(200).json(user);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.updateUserTokenBalance = async (req, res, next) => {\n  try {\n    const { user } = req;\n    if (!user.ethAddress || !user.ethAddress.length) {\n      throw new Error('missing connected Ethereum address');\n    }\n    const userBalance = await ethUtils.getBalance(user.ethAddress[0]);\n    user.tokenBalance = userBalance;\n    await user.save();\n    res.status(200).json(user);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.updateUserNotifications = async (req, res, next) => {\n  try {\n    const { user, body } = req;\n    const { notificationSettings, subscription, deviceTokens } = body;\n    const newSettings = merge(user.notificationSettings.toObject(), notificationSettings);\n\n    if (user.notificationSettings.email.digest !== newSettings.email.digest) {\n      if (!newSettings.email.digest) addUserToEmailList(user, 'nodigest');\n      else removeFromEmailList(user, 'nodigest');\n    }\n    user.notificationSettings = newSettings;\n\n    if (subscription) {\n      const findIndex = user.desktopSubscriptions.findIndex(\n        s =>\n          s.endpoint === subscription.endpoint &&\n          s.keys &&\n          s.keys.auth === subscription.keys.auth &&\n          s.keys.p256dh === subscription.keys.p256dh\n      );\n      if (findIndex === -1) {\n        user.desktopSubscriptions = [...user.desktopSubscriptions, subscription];\n      }\n    }\n    if (deviceTokens) {\n      user.deviceTokens = deviceTokens;\n    }\n    await user.save();\n    res.status(200).json(user);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.ethAddress = async (req, res, next) => {\n  try {\n    let { user } = req;\n    const { msg, sig, acc } = req.body;\n    const recovered = sigUtil.recoverTypedSignatureLegacy({\n      data: msg,\n      sig\n    });\n    if (recovered !== acc.toLowerCase()) throw new Error('address does not match');\n\n    const exists = await User.findOne({ ethAddress: acc }, 'handle');\n    if (exists) throw new Error('This address is already in use by @' + exists.handle);\n\n    user = await User.findOne({ handle: user.handle }, 'ethAddress');\n    user.ethAddress = [acc];\n    if (!user.ethLogin) {\n      user.ethLogin = acc;\n    }\n\n    const userBalance = await ethUtils.getBalance(user.ethAddress[0]);\n    user.tokenBalance = userBalance;\n    await user.save();\n    res.status(200).json(user);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.cashOut = async (req, res, next) => {\n  try {\n    let { user } = req;\n    const {\n      body: { customAmount }\n    } = req;\n    if (!user) throw new Error('Missing user when trying to claim tokens.');\n    if (!customAmount) throw new Error('Missing token claim amount.');\n\n    if (!user.ethAddress[0]) throw new Error('No Ethereum address connected');\n    const address = user.ethAddress[0];\n\n    // if the nonce is the same as last time, resend last signature\n    const nonce = await ethUtils.getNonce(address);\n\n    // Prioritize last withdrawal attempt\n    if (user.cashOut && user.cashOut.nonce === nonce.toString()) {\n      return res.status(200).json({ user, earning: null });\n    }\n\n    const userCashoutLog = await Earnings.find({\n      user: user._id,\n      cashOutAttempt: true\n    });\n    const cashedOut = userCashoutLog.reduce((a, e) => a + e.cashOutAmt, 0);\n\n    if (user.cashedOut !== cashedOut) {\n      throw new Error(\n        'There is a mismatch in previous cashout amounts',\n        user.cashedOut,\n        cashedOut\n      );\n    }\n\n    const maxClaim = CASHOUT_MAX - cashedOut;\n\n    const canClaim = Math.min(maxClaim, user.balance - (user.airdropTokens || 0));\n    const amount = Number(customAmount);\n\n    if (amount > maxClaim)\n      throw new Error(`You can not claim more than ${maxClaim} coins at this time.`);\n\n    if (amount > canClaim) throw new Error('You can not claim this many coins.');\n    if (amount <= 0) throw new Error('You do not have enough coins to claim.');\n\n    // if (amount < 100) throw new Error('Balance is too small to withdraw');\n    const allocatedRewards = await ethUtils.getParam('allocatedRewards');\n\n    if (allocatedRewards < amount) {\n      throw new Error(\n        'There are not enough funds allocated in the contract at the moment'\n      );\n    }\n\n    const earning = await logCashOut(user, amount);\n\n    user.balance -= amount;\n    console.log('prev cashout', cashedOut, 'cashout', amount); // eslint-disable-line\n    user.cashedOut += amount;\n    user = await user.save();\n    console.log('new cashout', user.cashedOut); // eslint-disable-line\n\n    const { sig, amount: bnAmount } = await ethUtils.sign(address, amount);\n    user.nonce = nonce;\n    user.cashOut = { sig, amount: bnAmount, nonce, earningId: earning._id };\n    user = await user.save();\n    return res.status(200).json({ user, earning });\n  } catch (err) {\n    return next(err);\n  }\n};\n\n/**\n * Authentication callback\n */\nexports.authCallback = (req, res) => {\n  res.redirect('/');\n};\n"],"file":"user.controller.js"}