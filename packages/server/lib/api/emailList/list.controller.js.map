{"version":3,"sources":["../../../src/api/emailList/list.controller.js"],"names":["exports","index","req","res","next","list","List","find","status","$ne","json","err","addWaitlist","email","body","Error","trim","waitlist","findOneAndUpdate","upsert","new","exec","invite","invites","InviteController","createInvites","update","_id","$in","map","i","multi","delete","id","params","findOne","remove","sendStatus"],"mappings":";;;;;;AAAA;;AACA;;AAEA;AACA;AAEAA,OAAO,CAACC,KAAR,GAAgB,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACxC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,cAAKC,IAAL,CAAU;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE;AAAP;AAAV,KAAV,CAAnB;AACAN,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBL,IAArB;AACD,GAHD,CAGE,OAAOM,GAAP,EAAY;AACZP,IAAAA,IAAI,CAACO,GAAD,CAAJ;AACD;AACF,CAPD;;AASAX,OAAO,CAACY,WAAR,GAAsB,OAAOV,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AAC9C,MAAI;AACF,QAAI;AAAES,MAAAA;AAAF,QAAYX,GAAG,CAACY,IAApB;AACA,QAAI,CAACD,KAAL,EAAY,MAAM,IAAIE,KAAJ,CAAU,UAAV,CAAN;AACZF,IAAAA,KAAK,GAAGA,KAAK,CAACG,IAAN,EAAR;AACA,UAAMC,QAAQ,GAAG,MAAMX,cAAKY,gBAAL,CAAsB;AAAEL,MAAAA;AAAF,KAAtB,EAAiCX,GAAG,CAACY,IAArC,EAA2C;AAChEK,MAAAA,MAAM,EAAE,IADwD;AAEhEC,MAAAA,GAAG,EAAE;AAF2D,KAA3C,EAGpBC,IAHoB,EAAvB;AAIAlB,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBE,IAAhB,CAAqBO,QAArB;AACD,GATD,CASE,OAAON,GAAP,EAAY;AACZP,IAAAA,IAAI,CAACO,GAAD,CAAJ;AACD;AACF,CAbD;AAeA;;;;;;;;;;;AASAX,OAAO,CAACsB,MAAR,GAAiB,MAAMpB,GAAN,IAAa;AAC5B,MAAIqB,OAAO,GAAGrB,GAAG,CAACY,IAAlB;AACAS,EAAAA,OAAO,GAAG,MAAMC,gBAAgB,CAACC,aAAjB,CAA+BF,OAA/B,CAAhB;AACA,QAAMjB,cAAKoB,MAAL,CACJ;AAAEC,IAAAA,GAAG,EAAE;AAAEC,MAAAA,GAAG,EAAEL,OAAO,CAACM,GAAR,CAAYC,CAAC,IAAIA,CAAC,CAACH,GAAnB;AAAP;AAAP,GADI,EAEJ;AAAEnB,IAAAA,MAAM,EAAE;AAAV,GAFI,EAGJ;AAAEuB,IAAAA,KAAK,EAAE;AAAT,GAHI,EAIJV,IAJI,EAAN;AAKA,SAAOE,OAAP;AACD,CATD;;AAWAvB,OAAO,CAACgC,MAAR,GAAiB,OAAO9B,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACzC,MAAI;AACF,UAAM;AAAE6B,MAAAA;AAAF,QAAS/B,GAAG,CAACgC,MAAnB;AACA,UAAM5B,cAAK6B,OAAL,CAAa;AAAER,MAAAA,GAAG,EAAEM;AAAP,KAAb,EAA0BG,MAA1B,EAAN;AACAjC,IAAAA,GAAG,CAACkC,UAAJ,CAAe,GAAf;AACD,GAJD,CAIE,OAAO1B,GAAP,EAAY;AACZP,IAAAA,IAAI,CAACO,GAAD,CAAJ;AACD;AACF,CARD","sourcesContent":["import List from './list.model';\nimport * as InviteController from '../invites/invite.controller';\n\n// List.countDocuments({ status: { $exists: false } }).then(c => console.log('Waitlist', c));\n// List.find({}).then(u => u.map(c => console.log('List', c.toObject())));\n\nexports.index = async (req, res, next) => {\n  try {\n    const list = await List.find({ status: { $ne: 'invited' } });\n    res.status(200).json(list);\n  } catch (err) {\n    next(err);\n  }\n};\n\nexports.addWaitlist = async (req, res, next) => {\n  try {\n    let { email } = req.body;\n    if (!email) throw new Error('no email');\n    email = email.trim();\n    const waitlist = await List.findOneAndUpdate({ email }, req.body, {\n      upsert: true,\n      new: true\n    }).exec();\n    res.status(200).json(waitlist);\n  } catch (err) {\n    next(err);\n  }\n};\n\n/*\n  req.body should contains an array of invite objects\n  [{\n    invitedBy: handle,\n    invitedByString: inviter name,\n    name: invitee name\n    email: eamil\n  }]\n */\nexports.invite = async req => {\n  let invites = req.body;\n  invites = await InviteController.createInvites(invites);\n  await List.update(\n    { _id: { $in: invites.map(i => i._id) } },\n    { status: 'invited' },\n    { multi: true }\n  ).exec();\n  return invites;\n};\n\nexports.delete = async (req, res, next) => {\n  try {\n    const { id } = req.params;\n    await List.findOne({ _id: id }).remove();\n    res.sendStatus(200);\n  } catch (err) {\n    next(err);\n  }\n};\n"],"file":"list.controller.js"}