{"version":3,"sources":["../../../src/api/communityFeed/communityFeed._test.js"],"names":[],"mappingssourcesContent":["// import { test, request } from 'server/config/ava.config';\n// import { setupData, cleanupData } from 'server/config/test_seed';\n\n// let r;\n// let token;\n// let authorToken;\n// let postId;\n// let savedPost;\n\n// function getPostObj() {\n//   const now = new Date();\n//   return {\n//     link:\n//       'https://www.washingtonpost.com/news/checkpoint/wp/2016/05/12/three-deaths-linked-to-recent-navy-seal-training-classes/?hpid=hp_hp-top-table-main_navyseals-118pm%3Ahomepage%2Fstory',\n//     body: 'Hotties',\n//     title: 'Test post title',\n//     description: 'Test post description',\n//     image:\n//       'https://static.boredpanda.com/blog/wp-content/uploads/2016/08/cute-kittens-30-57b30ad41bc90__605.jpg',\n//     tags: ['tag1', 'tag2'],\n//     category: { _id: 'testCat' },\n//     payoutTime: now\n//   };\n// }\n\n// function getUpvoteObj(id) {\n//   return {\n//     post: { _id: id },\n//     amount: 1\n//   };\n// }\n\n// test.before(async () => {\n//   const { app } = require('server/server.js');\n//   r = request(app);\n//   // just in case\n//   await cleanupData();\n//   await setupData(['crypto']);\n// });\n\n// test.after(async () => {\n//   await cleanupData();\n// });\n\n// test.serial('Community Create Post', async t => {\n//   t.plan(3);\n\n//   const res = await r\n//   .post('/auth/local?community=crypto')\n//   .send({ name: 'dummy1', password: 'test' });\n\n//   authorToken = res.body.token;\n\n//   const newPost = await r\n//   .post(`/api/post?access_token=${authorToken}&community=crypto`)\n//   .send(getPostObj());\n\n//   postId = newPost.body._id;\n//   savedPost = newPost.body;\n\n//   t.truthy(savedPost.postDate);\n\n//   t.is(newPost.status, 200, 'should get correct server response');\n//   t.is(savedPost.community, 'crypto', 'push should have correct community');\n// });\n\n// test.serial('Upvote 1', async t => {\n//   t.plan(2);\n\n//   const login = await r\n//   .post('/auth/local?community=crypto')\n//   .send({ name: 'test', password: 'test' });\n\n//   token = login.body.token;\n\n//   t.is(login.status, 200, 'should get correct server response');\n\n//   const upvote = await r\n//   .post(`/api/invest?access_token=${token}&community=crypto`)\n//   .send(getUpvoteObj(postId));\n\n//   t.is(upvote.status, 200, 'should get correct server response');\n// });\n\n// test.serial('Upvote 2', async t => {\n//   t.plan(2);\n\n//   const login = await r\n//   .post('/auth/local?community=crypto')\n//   .send({ name: 'slava', password: 'slava' });\n\n//   token = login.body.token;\n//   t.is(login.status, 200);\n\n//   const upvote = await r\n//   .post(`/api/invest?access_token=${token}&community=crypto`)\n//   .send(getUpvoteObj(postId));\n\n//   t.is(upvote.status, 200, 'should get correct server response');\n// });\n\n// test.serial('Community Get Feed', async t => {\n//   t.plan(6);\n\n//   const res = await r.get('/api/communityFeed?community=crypto');\n\n//   t.is(res.status, 200, 'should not return error');\n//   t.truthy(res.body.length, 'there should be a feed');\n\n//   const post = res.body[0].commentary[0];\n\n//   t.is(post._id, postId, 'new post should be first one in the feed');\n//   t.true(res.body[0].rank > 0, 'rank should be bigger than 0 after upvote');\n//   t.truthy(post.embeddedUser.relevance.relevance, 'should populate user relevance');\n\n//   // user is populated\n//   t.is(post.embeddedUser.handle, 'dummy1');\n// });\n\n// test.serial('Should get author relevance correctly', async t => {\n//   t.plan(3);\n\n//   const res = await r.get('/api/user/user/dummy1?community=crypto');\n\n//   t.is(res.status, 200, 'should get correct server response');\n//   t.truthy(res.body);\n//   t.is(res.body.relevance, 2, 'user relevance should be 2');\n// });\n\n// test.serial('Should get voter relevance correctly', async t => {\n//   t.plan(3);\n\n//   const res = await r.get('/api/user/user/dummy2?community=crypto');\n\n//   t.is(res.status, 200, 'should get correct server response');\n//   t.truthy(res.body);\n//   t.is(res.body.relevance, 1, 'voter relevance should be 1');\n// });\n\n// test.serial('Delete post', async t => {\n//   t.plan(1);\n\n//   const res = await r.delete(\n//     `/api/post/${postId}?access_token=${authorToken}&community=crypto`\n//   );\n\n//   t.is(res.status, 200, 'should get correct server response');\n// });\n\n// test.serial('Make sure post is removed from feed', async t => {\n//   t.plan(2);\n\n//   const res = await r.get('/api/communityFeed?community=crypto');\n//   t.is(res.status, 200, 'should get correct server response');\n//   if (res.body.length > 0) {\n//     // console.log('post parent', res.body[0]);\n//     t.not(res.body[0].commentary[0]._id, postId);\n//   } else {\n//     t.falsy(res.body.length);\n//   }\n// });\n"],"file":"communityFeed._test.js"}