{"version":3,"sources":["../../../src/api/notification/notification.controller.js"],"names":["Notification","require","exports","create","req","res","next","dbNotificationObj","post","body","forUser","byUser","amount","type","personal","read","tag","newNotification","save","then","newNotifObj","_id","socketEvent","emit","send","catch","show","query","userId","user","skip","parseInt","limit","$or","group","find","sort","populate","path","match","community","notifications","status","json","unread","countDocuments","showGeneral","avoidUser","$and","$ne","markRead","updateMany","multi"],"mappings":"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","sourcesContent":["import socketEvent from 'server/socket/socketEvent';\n\nconst Notification = require('./notification.model');\n\nexports.create = (req, res, next) => {\n  const dbNotificationObj = {\n    post: req.body.post ? req.body.post : null,\n    forUser: req.body.forUser ? req.body.forUser : null,\n    byUser: req.body.byUser ? req.body.byUser : null,\n    amount: req.body.amount ? req.body.amount : null,\n    type: req.body.type ? req.body.type : null,\n    personal: req.body.personal ? req.body.personal : false,\n    read: false,\n    tag: req.body.tag ? req.body.tag : null\n  };\n\n  const newNotification = new Notification(dbNotificationObj);\n  return newNotification\n    .save()\n    .then(() => {\n      const newNotifObj = {\n        _id: req.body.forUser,\n        type: 'ADD_ACTIVITY'\n      };\n      if (newNotification.personal) {\n        socketEvent.emit('socketEvent', newNotifObj);\n      }\n      res.send(200).send();\n    })\n    .catch(next);\n};\n\nexports.show = (req, res, next) => {\n  let query = null;\n  const userId = req.user._id;\n  const skip = parseInt(req.query.skip, 10) || 0;\n  const limit = 20;\n\n  if (userId) {\n    query = { $or: [{ forUser: userId }, { group: 'everyone' }] };\n  }\n\n  Notification.find(query)\n    .limit(limit)\n    .skip(skip)\n    .sort({ _id: -1 })\n    // .populate('byUser')\n    .populate({\n      path: 'byUser',\n      populate: {\n        path: 'relevance',\n        match: {\n          community: req.query.community\n        }\n      }\n    })\n    .populate({\n      path: 'post',\n      populate: [{ path: 'metaPost' }, { path: 'parentPost' }, { path: 'data' }]\n    })\n    .then(notifications => res.status(200).json(notifications))\n    .catch(next);\n};\n\nexports.unread = (req, res, next) => {\n  let query = null;\n  const userId = req.user._id;\n  if (userId) {\n    query = { forUser: userId, read: false };\n  }\n  Notification.countDocuments(query)\n    .then(unread => {\n      res.status(200).json({ unread });\n    })\n    .catch(next);\n};\n\nexports.showGeneral = (req, res, next) => {\n  const avoidUser = req.user._id;\n  const skip = parseInt(req.query.skip, 10) || 0;\n  const limit = 20;\n  let query = { personal: false };\n  if (avoidUser) query = { $and: [{ personal: false }, { byUser: { $ne: avoidUser } }] };\n\n  Notification.find(query)\n    .limit(limit)\n    .skip(skip)\n    .sort({ _id: -1 })\n    .populate('byUser post tag')\n    .then(notifications => res.status(200).json(notifications))\n    .catch(next);\n};\n\nexports.markRead = (req, res, next) => {\n  const query = { forUser: req.user._id, read: false };\n  return Notification.updateMany(query, { read: true }, { multi: true })\n    .then(() => res.status(200).send())\n    .catch(next);\n};\n"],"file":"notification.controller.js"}