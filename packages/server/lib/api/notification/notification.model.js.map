{"version":3,"sources":["../../../src/api/notification/notification.model.js"],"names":["Schema","mongoose","NotificationSchema","post","type","Types","ObjectId","ref","forUser","byUser","byUsers","byUsersHandle","String","group","totalUsers","Number","read","Boolean","default","comment","amount","coin","source","personal","tag","text","coinType","timestamps","index","_id","createdAt","statics","createNotification","notificationObject","notification","save","earningNotificationEvent","payload","socketEvent","emit","pre","limitNotifications","next","model","countDocuments","err","c","find","sort","then","results","remove","module","exports"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\nimport socketEvent from 'server/socket/socketEvent';\n\nconst { Schema } = mongoose;\n\nconst NotificationSchema = new Schema(\n  {\n    post: { type: Schema.Types.ObjectId, ref: 'Post' },\n    forUser: { type: Schema.Types.ObjectId, ref: 'User' },\n    byUser: { type: Schema.Types.ObjectId, ref: 'User' },\n    byUsers: [{ type: Schema.Types.ObjectId, ref: 'User' }],\n    byUsersHandle: [String],\n    group: [String],\n    totalUsers: Number,\n    read: { type: Boolean, default: false },\n    // Deprecated\n    comment: { type: Schema.Types.ObjectId, ref: 'Comment' },\n    amount: Number,\n    coin: Number,\n    source: { type: String, default: 'post' },\n    type: String,\n    personal: { type: Boolean, default: true },\n    tag: { type: String, ref: 'Tag' },\n    text: { type: String },\n    coinType: String\n  },\n  {\n    timestamps: true\n  }\n);\n\nNotificationSchema.index({ forUser: 1 });\nNotificationSchema.index({ forUser: 1, _id: 1 });\nNotificationSchema.index({ forUser: 1, _id: 1, createdAt: 1 });\n\nNotificationSchema.statics.createNotification = async function createNotification(\n  notificationObject\n) {\n  let notification = new this(notificationObject);\n  notification = await notification.save();\n\n  const earningNotificationEvent = {\n    _id: notificationObject.forUser,\n    type: 'ADD_ACTIVITY',\n    payload: notification\n  };\n\n  socketEvent.emit('socketEvent', earningNotificationEvent);\n  return notification;\n};\n\nNotificationSchema.pre('save', function limitNotifications(next) {\n  this.model('Notification').countDocuments({ forUser: this.forUser }, (err, c) => {\n    if (c >= 500) {\n      this.model('Notification')\n        .find({ forUser: this.forUser })\n        .sort({ _id: 1 })\n        .then(results => {\n          results[0].remove();\n        });\n      next();\n    } else {\n      next();\n    }\n  });\n});\n\nmodule.exports = mongoose.model('Notification', NotificationSchema);\n"],"file":"notification.model.js"}