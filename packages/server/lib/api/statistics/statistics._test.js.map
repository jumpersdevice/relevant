{"version":3,"sources":["../../../src/api/statistics/statistics._test.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["// import { test, request } from '../../config/ava.config';\n\n// let token;\n// let r;\n\n// test.beforeEach(t => {\n//   t.context = require('../../server.js');\n// });\n\n// test.before(async () => {\n//   const { app } = require('../../server.js');\n//   r = request(app);\n// });\n\n// test.serial('Auth', async t => {\n//   t.plan(2);\n\n//   const res = await r.post('/auth/local').send({ name: 'test', password: 'test' });\n\n//   token = res.body.token;\n//   t.is(res.status, 200);\n//   t.truthy(token, 'Token should not be null');\n// });\n\n// test.serial('Get stats', async t => {\n//   t.plan(2);\n\n//   const endTime = new Date();\n//   const startTime = new Date(endTime - 1000 * 60 * 60 * 1);\n\n//   const res = await r\n//   .get(\n//     '/api/statistics' +\n//         '?startTime=' +\n//         startTime +\n//         ';&endTime=' +\n//         endTime +\n//         ';&access_token=' +\n//         token\n//   )\n//   .send();\n\n//   const isCorrectType = res.body instanceof Object;\n//   t.is(res.status, 200);\n//   t.is(isCorrectType, true);\n// });\n"],"file":"statistics._test.js"}